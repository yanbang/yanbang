<template>
  <div>
    <div class="Center_L" id="stackChart" ref="myCharts"></div>
  </div>

</template>

<script>
export default {
  props:{
    provinceData:Array
  },

  name: "doughnutChart",
  provide (){
    return {
      reload:this.reload
    }
  },
  inject:['reload'],
  data() {
    return {
      isRouterAlive:true
    }
  },
  components: {

  },
  watch:{
    provinceData(){
        let areaNames = []
        let fristdata = []
        let twodata = []
        let threedata = []
        let fourdata = []
        let lastdata = []
        let linedata = []
        this.provinceData.forEach((res)=>{
          fristdata.push(parseInt(res.newWeek0t10))
          twodata.push(parseInt(res.newWeek10t30))
          threedata.push(parseInt(res.newweek30t50))
          fourdata.push(parseInt(res.newWeek50t80))
          lastdata.push(parseInt(res.newWeekGt80))
          linedata.push(parseInt(res.newWeekRateGt30))
          areaNames.push(res.eparchyName)
      })
      areaNames.splice(0,1)
      fristdata.splice(0,1)
      twodata.splice(0,1)
      threedata.splice(0,1)
      fourdata.splice(0,1)
      lastdata.splice(0,1)
      linedata.splice(0,1)
      this.stackChart(areaNames,fristdata,twodata,threedata,fourdata,lastdata,linedata)
    }
  },
  mounted() {
  },
  methods: {

    stackChart(areaNames, fristdata, twodata, threedata, fourdata, lastdata, linedata) {

      Highcharts.chart('stackChart', {
        chart: {
          type: 'column',
          backgroundColor: 'transparent',
          options3d: {
            enabled: true,
            alpha: 10,
            beta: 0,
            viewDistance: 65,
            depth: 45
          },
          marginTop: 0,
          marginRight: 0
        },
        title: {
          text: '',
        },
        exporting: {
          enabled: false
        },
        credits: {
          enabled: false
        },
        xAxis: {
          categories: areaNames,
          tickWidth: '0',    	//设置刻度标签宽度
          lineColor: '#fff',//设置坐标颜色
          color: '#A9C0FF',
          lineWidth: 0,   //设置坐标宽度
          gridLineColor: 'transparent',
          labels: {
            style: {
              color: '#A9C0FF',
              fontSize: '18px'
            }
          },
        },
        yAxis: [
          { // Primary yAxis
            allowDecimals: false,
            gridLineColor: 'transparent',
            lineWidth: 0,
            labels: {
              enabled: false,
              style: {
                color: 'transparent'
              }
            },
            title: {
              text: '量',
              style: {
                color: 'transparent'
              }
            }
          },
          { // Secondary yAxis
            allowDecimals: false,
            gridLineColor: 'transparent',
            lineWidth: 0,
            title: {
              text: '占比',
              style: {
                color: 'transparent'
              }
            },
            labels: {
              enabled: false,
              style: {
                color: 'transparent'
              }
            },
            opposite: true
          }],
        tooltip: { 
          shared: true,
          borderColor: 'transparent',
          backgroundColor: 'rgba(50,50,50,0.7)',
          style: {
              color: '#fff',
              fontSize: '14px',
          }
        },
        plotOptions: {
          column: {
            stacking: 'normal',
            depth: 10
          },
          line: {
            dataLabels: {
              // 开启数据标签
              enabled: true,
              formatter: function () {
                return this.point.y + '%';
              },
              style: {
                fontSize: '14px',
                color: '#fff',
                border: 0
              }
            },
            // 关闭鼠标跟踪，对应的提示框、点击事件会失效
            // enableMouseTracking: false
          }

        },
        legend: {
          itemStyle: {
            fontSize: '14px',
            color: '#A9C0FF',
          },
          series: ['(0-10元)','(10-30元)','(30-50元)','(50-80元)','80元以上','30元以上占比']
        },
        series: [
          {
            name: '(0-10元)',
            data: fristdata,
            stack: 'female',
            color: {
              linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 }, //横向渐变效果 如果将x2和y2值交换将会变成纵向渐变效果
              stops: [
                [0, Highcharts.Color('#86ba4b').setOpacity(1).get('rgba')],
                [1, '#5aaa25']
              ]
            }
          },
          {
            name: '(10-30元)',
            data: twodata,
            stack: 'female',
            color: {
              linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 }, //横向渐变效果 如果将x2和y2值交换将会变成纵向渐变效果
              stops: [
                [0, Highcharts.Color('#bb6b50').setOpacity(1).get('rgba')],
                [1, '#bd5c3b']
              ]
            }

          },
          {
            name: '(30-50元)',
            data: threedata,
            stack: 'female',
            color: {
              linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 }, //横向渐变效果 如果将x2和y2值交换将会变成纵向渐变效果
              stops: [
                [0, Highcharts.Color('#9a57be').setOpacity(1).get('rgba')],
                [1, '#bc47af']
              ]
            }
          },
          {
            name: '(50-80元)',
            data: fourdata,
            stack: 'female',
            color: {
              linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 }, //横向渐变效果 如果将x2和y2值交换将会变成纵向渐变效果
              stops: [
                [0, Highcharts.Color('#bab54d').setOpacity(1).get('rgba')],
                [1, '#b7d25d']
              ]
            }
          },
          {
            name: '80元以上',
            data: lastdata,
            stack: 'female',
            color: {
              linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 }, //横向渐变效果 如果将x2和y2值交换将会变成纵向渐变效果
              stops: [
                [0, Highcharts.Color('#01d4e9').setOpacity(1).get('rgba')],
                [1, '#05b1e1']
              ]
            }
          },
          {
            name: '30元以上占比',
            data: linedata,
            type: 'line',
            color: '#FF8279',
            zIndex: '100',
            yAxis: 1,
            dataLabels: {
              color: '#fff'
            },
            marker: {
              radius: 6,  //曲线点半径，默认是4
              symbol: 'circle' //曲线点类型："circle", "square", "diamond", "triangle","triangle-down"，默认是"circle"
            },
          }
        ]
      });
    },
  }
}
</script>

<style scoped>
#stackChart {
  width: 100%;
  height: 35vh;
}
</style>