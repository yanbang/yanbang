<template>
  <div>
    <el-row>
      <div style="padding: 0 15px">
        <el-table :data="tableList" style="width: 100%;overflow: auto" height="770" @sort-change="tableSortChange">
          <el-table-column prop="eparchyName" label="地区">
             <template slot-scope="scope">
              <a style="cursor:pointer">{{scope.row.eparchyName}}</a>
            </template>
          </el-table-column>
          <el-table-column prop="dayNew" label="日发展">
            <template slot-scope="scope">
              <span class="titleSpan1">{{ scope.row.dayNew }}</span>
            </template>
          </el-table-column>
          <el-table-column prop="dayAchive" label="日完成率" sortable="日完成率">
            <template slot-scope="scope">
              <a v-if="scope.row.dayStatus == 2" class="titleSpan1" style="color: #C00000 !important"
                >{{ scope.row.dayAchive }}%</a
              >
              <a v-else-if="scope.row.dayStatus == 1" style="color: #00B050 !important" class="titleSpan1"
                >{{ scope.row.dayAchive }}%</a
              >
              <a v-else class="titleSpan1">{{ scope.row.dayAchive }}%</a>
            </template>
          </el-table-column>
          <el-table-column prop="weekNew" label="周发展">
            <template slot-scope="scope">
              <span class="titleSpan1">{{ scope.row.weekNew }}</span>
            </template>
          </el-table-column>

          <el-table-column prop="weekAchive" label="周完成率" sortable="周完成率">
            <template slot-scope="scope">
              <a v-if="scope.row.weekStatus == 2" class="titleSpan1" style="color: #C00000 !important"
                >{{ scope.row.weekAchive }}%</a
              >
              <a v-else-if="scope.row.weekStatus == 1" class="titleSpan1" style="color: #00B050 !important"
                >{{ scope.row.weekAchive }}%</a
              >
              <a v-else class="titleSpan1">{{ scope.row.weekAchive }}%</a>
            </template>
          </el-table-column>
          <el-table-column prop="weekHb" label="周环比">
            <template slot-scope="scope">
              <span class="titleSpan1">{{ scope.row.weekHb }}%</span>
            </template>
          </el-table-column>
          <el-table-column prop="monNew" label="月发展">
            <template slot-scope="scope">
              <span class="titleSpan1">{{ scope.row.monNew }}</span>
            </template>
          </el-table-column>
          <el-table-column prop="monAchive" label="月完成率" sortable="月完成率">
            <template slot-scope="scope">
              <a v-if="scope.row.monStatus == 2" class="titleSpan1" style="color: #C00000 !important"
                >{{ scope.row.monAchive }}%</a
              >
              <a v-else-if="scope.row.monStatus == 1" class="titleSpan1" style="color: #00B050 !important"
                >{{ scope.row.monAchive }}%</a
              >
              <a v-else class="titleSpan1">{{ scope.row.monAchive }}%</a>
            </template>
          </el-table-column>
          <el-table-column prop="qthAchive" label="季度序时完成率" sortable="季度序时完成率">
            <template slot-scope="scope">
              <a v-if="scope.row.qthStatus == 2" class="titleSpan1" style="color: #C00000 !important"
                >{{ scope.row.qthAchive }}%</a
              >
              <a v-else-if="scope.row.qthStatus == 1" class="titleSpan1" style="color: #00B050 !important"
                >{{ scope.row.qthAchive }}%</a
              >
              <a v-else class="titleSpan1">{{ scope.row.qthAchive }}%</a>
            </template>
          </el-table-column>
        </el-table>
      </div>
    </el-row>
  </div>
</template>

<script>
export default {
  props: {
    middleList: Array,
  },
  name: 'CityFinance_noCity',
  data() {
    return {
      num: '50',
      allData: {},
      tableList: [],
      AroundTheCity: [],
      goodCity: {
        fristCity: '菏泽',
        nextCity: '济南',
        lastCity: '聊城',
      },
      badCity: {
        fristCity: '菏泽',
        nextCity: '济南',
        lastCity: '聊城',
      },
      GoodQuarter: {
        fristCity: '菏泽',
        nextCity: '济南',
        lastCity: '聊城',
      },
      badQuarter: {
        fristCity: '菏泽',
        nextCity: '济南',
        lastCity: '聊城',
      },
    }
  },
  watch: {
    middleList() {
      this.tableList = this.middleList
      this.tableList.forEach((obj) => {
        obj.dayNew = parseInt(obj.dayNew)
        obj.weekNew = parseInt(obj.weekNew)
        obj.monNew = parseInt(obj.monNew)
      })
    },
  },
  mounted() {
    // this.tableList = this.middleList
  },
  methods: {
    cancelDialog(row) {
      //console.log(row)
      if (row.eparchyName === '全省') {
        //alert(row.eparchyName)
        this.$router.push({
          path: '../Evaluate/fifth-city',
          params: {
            eparchyName: row.eparchyName,
          },
        })
      } else {
        //alert(row.eparchyName)
        this.$router.push({
          path: '../Evaluate/fifth-OperationCenter',
          params: {
            eparchyName: row.eparchyName,
          },
        })
      }
    },
    //监听顺序方法
    tableSortChange(column) {
      const self = this
      let index = 0
      let tmpList = []
      this.allData = this.tableList[0]
      let string = column.prop
      this.tableList.forEach((obj) => {
        if (index !== 0) {
          obj[string] = parseFloat(obj[string])
          tmpList.push(obj)
        }
        index = index + 1
      })

      let tmplist2 = []
      if (column.order === 'descending') {
        // console.log(JSON.stringify(self.sortByKey(tmpList, column.prop)))
        // this.tableList = self.sortByKey(tmpList, column.prop)
        this.sortA(tmpList, column.prop)
      } else {
        // this.tableList = self.sort(tmpList, column.prop)
        this.sortB(tmpList, column.prop)
      }

      this.tableList.forEach((obj) => {
        console.log(obj[column.prop])
      })
      this.tableList.unshift(this.allData)
    },
    // 顺序
    sortByKey(array, key) {
      return array.sort(function (a, b) {
        var x = a[key]
        var y = b[key]

        console.log(JSON.stringify(array))
        return x >= y
      })
    },

    sortA(arr, name) {
      //外层循环，控制趟数，每一次找到一个最大值
      for (var i = 0; i < arr.length - 1; i++) {
        // 内层循环,控制比较的次数，并且判断两个数的大小
        for (var j = 0; j < arr.length - 1 - i; j++) {
          // 白话解释：如果前面的数大，放到后面(当然是从小到大的冒泡排序)
          if (arr[j][name] > arr[j + 1][name]) {
            var temp = arr[j]
            arr[j] = arr[j + 1]
            arr[j + 1] = temp
          }
        }
      }
      this.tableList = arr
    },
    sortB(arr, name) {
      //外层循环，控制趟数，每一次找到一个最大值
      for (var i = 0; i < arr.length - 1; i++) {
        // 内层循环,控制比较的次数，并且判断两个数的大小
        for (var j = 0; j < arr.length - 1 - i; j++) {
          // 白话解释：如果前面的数大，放到后面(当然是从小到大的冒泡排序)
          if (arr[j][name] < arr[j + 1][name]) {
            var temp = arr[j]
            arr[j] = arr[j + 1]
            arr[j + 1] = temp
          }
        }
      }
      this.tableList = arr
    },

    //倒叙
    sort(array, key) {
      return array.sort(function (a, b) {
        var x = a[key]
        var y = b[key]
        return x < y
      })
    },
  },
}
</script>

<style scoped lang="scss">
/deep/ .el-table {
  background: none !important;
  font-size: 18px !important;
  font-family: Microsoft YaHei !important;
  font-weight: 400 !important;
}
/deep/.el-table th {
  background: none !important;
  background: url('../../assets/images/bigScreen/fullService/597bcdc505fa3.png') no-repeat !important;
  background-position: bottom, center;
  text-align: center !important;
  color: #02f6ff !important;
  font-size: 12px !important;
}
/deep/ .el-table tr {
  background: none !important;
}
/deep/.el-table td {
  background: none !important;
  border: none !important;
  text-align: center !important;
  color: #ffffff;
  border-right: 0.5px solid #0a3d75 !important;
}
/deep/ .el-table th.is-leaf,
.el-table td {
  border: none !important;
  color: #ffffff;
}
/deep/.el-table::before {
  height: 0 !important;
}
/deep/.el-table th > .cell {
  display: contents !important;
}

.titleSpan1 {
  font-size: 14px;
  font-family: 'DigifaceWide';
  src: url('../../assets/fonts/digifaw.ttf');
  display: block;
}
</style>