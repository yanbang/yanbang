import echarts from 'echarts'
import 'echarts-liquidfill'
export default {
    initAnipie(params) {
        var myChart = echarts.init(document.getElementById(params.domId))
        let angle = 0; //角度，用来做简单的动画效果的
        let value = params.value
        var option = {
            title: {
                text: '{a|' + value + '}{c|%}',
                x: 'center',
                y: 'center',
                textStyle: {
                    rich: {
                        a: {
                            fontSize: 18,
                            color: '#29EEF3',
                            fontWeight: '800'
                        },

                        c: {
                            fontSize: 16,
                            color: '#29EEF3',
                        }
                    }
                }
            },
            series: [{
                    name: "ring5",
                    type: 'custom',
                    coordinateSystem: "none",
                    renderItem: function(params, api) {
                        return {
                            type: 'arc',
                            shape: {
                                cx: api.getWidth() / 2,
                                cy: api.getHeight() / 2,
                                r: Math.min(api.getWidth(), api.getHeight()) / 2 * 0.8,
                                startAngle: (270 + -angle) * Math.PI / 180,
                                endAngle: (40 + -angle) * Math.PI / 180
                            },
                            style: {
                                stroke: "#0CD3DB",
                                fill: "transparent",
                                lineWidth: 1.5
                            },
                            silent: true
                        };
                    },
                    data: [0]
                }, {
                    name: "ring5",
                    type: 'custom',
                    coordinateSystem: "none",
                    renderItem: function(params, api) {
                        return {
                            type: 'arc',
                            shape: {
                                cx: api.getWidth() / 2,
                                cy: api.getHeight() / 2,
                                r: Math.min(api.getWidth(), api.getHeight()) / 2 * 0.8,
                                startAngle: (90 + -angle) * Math.PI / 180,
                                endAngle: (220 + -angle) * Math.PI / 180
                            },
                            style: {
                                stroke: "#0CD3DB",
                                fill: "transparent",
                                lineWidth: 1.5
                            },
                            silent: true
                        };
                    },
                    data: [0]
                }, {
                    name: "ring5",
                    type: 'custom',
                    coordinateSystem: "none",
                    renderItem: function(params, api) {
                        let x0 = api.getWidth() / 2;
                        let y0 = api.getHeight() / 2;
                        let r = Math.min(api.getWidth(), api.getHeight()) / 2 * 0.8;
                        let point = getCirlPoint(x0, y0, r, (90 + -angle))
                        return {
                            type: 'circle',
                            shape: {
                                cx: point.x,
                                cy: point.y,
                                r: 4
                            },
                            style: {
                                stroke: "#0CD3DB", //粉
                                fill: "#0CD3DB"
                            },
                            silent: true
                        };
                    },
                    data: [0]
                }, {
                    name: "ring5", //绿点
                    type: 'custom',
                    coordinateSystem: "none",
                    renderItem: function(params, api) {
                        let x0 = api.getWidth() / 2;
                        let y0 = api.getHeight() / 2;
                        let r = Math.min(api.getWidth(), api.getHeight()) / 2 * 0.8;
                        let point = getCirlPoint(x0, y0, r, (270 + -angle))
                        return {
                            type: 'circle',
                            shape: {
                                cx: point.x,
                                cy: point.y,
                                r: 4
                            },
                            style: {
                                stroke: "#0CD3DB", //绿
                                fill: "#0CD3DB"
                            },
                            silent: true
                        };
                    },
                    data: [0]
                }, {
                    name: '',
                    type: 'pie',
                    radius: ['70%', '55%'],
                    silent: true,
                    clockwise: true,
                    startAngle: 90,
                    z: 0,
                    zlevel: 0,
                    label: {
                        normal: {
                            position: "center",

                        }
                    },
                    data: [{
                            value: value,
                            name: "",
                            itemStyle: {
                                normal: {
                                    color: { // 完成的圆环的颜色
                                        colorStops: [{
                                            offset: 0,
                                            color: '#4FADFD' // 0% 处的颜色
                                        }, {
                                            offset: 1,
                                            color: '#28E8FA' // 100% 处的颜色
                                        }]
                                    },
                                }
                            }
                        },
                        {
                            value: 100 - value,
                            name: "",
                            label: {
                                normal: {
                                    show: false
                                }
                            },
                            itemStyle: {
                                normal: {
                                    color: "#173164"
                                }
                            }
                        }
                    ]
                },



            ]
        };

        //获取圆上面某点的坐标(x0,y0表示坐标，r半径，angle角度)
        function getCirlPoint(x0, y0, r, angle) {
            let x1 = x0 + r * Math.cos(angle * Math.PI / 180)
            let y1 = y0 + r * Math.sin(angle * Math.PI / 180)
            return {
                x: x1,
                y: y1
            }
        }

        function draw() {
            angle = angle + 3
            myChart.setOption(option, true)
                //window.requestAnimationFrame(draw);
        }
        if (window[params.domId]) {
            clearInterval(window[params.domId])
        };
        window[params.domId] = setInterval(function() {
            //用setInterval做动画感觉有问题
            draw()
        }, 100);

    },

    initChart_water(data) {
        const echart = echarts.init(document.getElementById(data.domId));
        const ratio = data.value;
        const ratioLength = 3;
        let ratioArr = [];
        for (var ratioIndex = 0; ratioIndex < ratioLength; ratioIndex++) {
            ratioArr.push(ratio / 100)
        }
        var option = {
            series: [{
                    type: 'liquidFill',
                    radius: '74%',
                    center: ['50%', '50%'],
                    color: [{
                        type: 'linear',
                        x: 0,
                        y: 1,
                        x2: 0,
                        y2: 0,
                        colorStops: [{
                            offset: 1,
                            color: ['rgba(62,163, 234, .1)'], // 0% 处的颜色
                        }, {
                            offset: 0.5,
                            color: ['rgba(62,163, 234, .5)'], // 50% 处的颜色
                        }, {
                            offset: 0,
                            color: ['rgba(62,163, 234, .1)'], // 100% 处的颜色
                        }],
                        global: false // 缺省为 false
                    }],
                    data: ratioArr,
                    backgroundStyle: {
                        color: 'rgba(134, 228, 245, .2)'
                    },
                    label: {
                        normal: {
                            formatter: ratio + '%',
                            fontSize: 20,
                            color: 'rgba(134, 228, 245, 1)'
                        }
                    },
                    outline: {
                        show: false,
                    }
                },
                { //细的外圈
                    type: "pie",
                    center: ["50%", "50%"],
                    radius: "74%",
                    hoverAnimation: false,
                    data: [{
                        name: "",
                        value: ratio,
                        labelLine: {
                            show: false
                        },
                        itemStyle: {
                            color: 'transparent'
                        },
                        emphasis: {
                            labelLine: {
                                show: false
                            },
                            itemStyle: {
                                color: 'transparent'
                            },
                        }
                    }]
                },
                { //粗的外圈
                    type: "pie",
                    center: ["50%", "50%"],
                    radius: ["78%", "82%"],
                    hoverAnimation: false,
                    zlevel: 2,
                    data: [{
                        name: "",
                        value: ratio,
                        labelLine: {
                            show: false
                        },
                        itemStyle: {
                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
                                offset: 0,
                                color: 'rgba(52, 255, 186, .3)'
                            }, {
                                offset: 1,
                                color: 'rgba(65, 124, 214, 1)'
                            }]),
                        },
                        emphasis: {
                            labelLine: {
                                show: false
                            },
                            itemStyle: {
                                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
                                    offset: 0,
                                    color: 'rgba(52, 255, 186, .3)'
                                }, {
                                    offset: 1,
                                    color: 'rgba(65, 124, 214, 1)'
                                }]),
                            },
                        }
                    }]
                }
            ]
        }
        echart.setOption(option);
    },

    initChartgauge(params) {
        let data = 100;
        var option = {
            title: [{
                text: params.name,
                x: 'center',
                top: '82%',
                textStyle: {
                    color: '#fff',
                    fontSize: 16,
                    fontWeight: '400',
                }
            }, {
                text: params.value + (params.unit || ""),
                x: 'center',
                top: '40%',
                textStyle: {
                    fontSize: 18,
                    color: 'aqua',
                    foontWeight: '400',
                },
            }],
            // 极坐标系
            polar: {
                radius: ['64%', '78%'],
                center: ['50%', '50%'],
            },
            // 极坐标系：角度轴
            angleAxis: {
                max: 100 * 360 / 270,
                show: false,
                type: 'value',
                startAngle: 225
            },
            // 极坐标系：径向轴
            radiusAxis: {
                type: 'category',
                show: true,
                axisLabel: {
                    show: false,
                },
                axisLine: {
                    show: false,

                },
                axisTick: {
                    show: false
                },
            },
            series: [
                // 第二层：数据以进度条的形式展示
                {
                    type: 'bar',
                    data: [{
                        value: data
                    }],
                    itemStyle: {
                        color: function() {
                            let obj = {
                                type: 'linear',
                                x: 0, //右
                                y: 0.5, //下
                                x2: 1, //左
                                y2: 0, //上
                                colorStops: [{
                                    offset: 0,
                                    color: '#4978EC'
                                }, {
                                    offset: 1,
                                    color: '#0CD3DB'
                                }]
                            };

                            if (data >= 0 && data < 20) {
                                obj.colorStops[1].color = '#4978EC';
                            } else if (data >= 20 && data < 40) {
                                obj.y = 0.3;
                                obj.x2 = 2;
                            } else if (data >= 40 && data < 60) {
                                obj.y = 0.3;
                                obj.x2 = 1.5;
                            } else if (data >= 60 && data < 80) {
                                obj.y = 0.4;
                                obj.x2 = 1.1;
                            }
                            return obj;
                        }
                    },
                    barGap: '-100%',
                    coordinateSystem: 'polar',
                    roundCap: true,
                    cursor: 'auto',
                    z: 2
                },
                // 第二层：进度条背景
                {
                    type: 'bar',
                    data: [{
                        value: 100,
                    }],
                    itemStyle: {
                        color: '#013f72'
                    },
                    barGap: '-100%',
                    coordinateSystem: 'polar',
                    roundCap: true,
                    cursor: 'auto',
                    emphasis: {
                        itemStyle: {
                            color: '#013f72'
                        }
                    },
                    z: 1
                },
                // 第一层：中心文字展示区
                {
                    type: 'pie',
                    radius: ['0%', '60%'],
                    hoverAnimation: false,
                    center: ['50%', '50%'],
                    cursor: 'auto',
                    itemStyle: {
                        normal: {
                            labelLine: {
                                show: false
                            },
                            color: {
                                type: 'radial',
                                x: 0.5,
                                y: 0.5,
                                r: 0.5,
                                colorStops: [{
                                    offset: 0,
                                    color: '#174869'
                                }, {
                                    offset: 1,
                                    color: '#08385c'
                                }]
                            }
                        }
                    },
                    data: [{
                        value: 100
                    }],
                    z: 2
                },
                // 第三层；仪表盘：只显示刻度
                {
                    type: 'gauge',
                    radius: '88%',
                    startAngle: '225',
                    endAngle: '-45',
                    splitNumber: 10,
                    center: ['50%', '50%'],
                    min: 0,
                    max: 100,
                    pointer: {
                        show: false
                    },
                    title: {
                        show: false
                    },
                    detail: {
                        show: false
                    },
                    data: [{
                        value: 100,
                        name: ''
                    }],
                    axisLine: {
                        lineStyle: {
                            width: 20,
                            color: [
                                [0, '#5fa7ca'],
                                [1, '#5fa7ca']
                            ],
                            opacity: 0
                        }
                    },
                    axisTick: {
                        length: 6,
                        lineStyle: {
                            color: 'auto'
                        }
                    },
                    splitLine: {
                        show: false
                    },
                    axisLabel: {
                        show: false
                    }
                }
            ]
        };
        var echart = echarts.init(document.getElementById(params.domId))
        echart.setOption(option, true);
    },
    initPieCat(chart) {
        var rich = {
            aqua: {
                color: "aqua",
                fontSize: 15,
                padding: [4, 0],
                align: 'center'
            },
            white: {
                color: "#fff",
                align: 'center',
                fontSize: 14,
                padding: [4, 0]
            },

            hr: {
                borderColor: '#a2c7f3',
                width: '100%',
                borderWidth: 1,
                height: 0,
            }
        }
        var echart = echarts.init(document.getElementById(chart.domId))
        var colorList = ['#1694c4', '#06d3c4', '#ffbc32', '#2ccc44', '#ff55ac', 'rgb(83 4 112)']
        var option = {
            tooltip: {
                show: true
            },
            legend: {
                show: true,
                icon: 'circle',
                // orient: 'vertical',
                // right: 0,
                bottom: '0',
                data: chart.legend,
                textStyle: {
                    color: '#fff',
                    fontSize: 16,
                    lineHeight: 18,
                }
            },
            series: [{
                    name: '性别',
                    hoverAnimation: false,
                    type: 'pie',
                    center: ["50%", '44%'],
                    radius: [0, '32%'],
                    label: {
                        position: 'inner',
                        fontSize: 18
                    },
                    itemStyle: {
                        normal: {
                            borderColor: '#fff',
                            borderWidth: 1,

                        }
                    },

                    selectedMode: 'single',
                    data: [{
                            value: chart.manval,
                            name: '男',
                            itemStyle: { color: '#1694c4' }

                        },
                        {
                            value: chart.womanval,
                            name: '女',
                            itemStyle: { color: '#ff55ac' }
                        },
                    ]
                },
                {
                    name: '',
                    type: 'pie',
                    center: ["50%", '44%'],
                    radius: ['40%', '48%'],
                    startAngle: 0, //起始角度
                    itemStyle: {
                        normal: {
                            color: function(params) {
                                return colorList[params.dataIndex]
                            }
                        }
                    },

                    label: {
                        normal: {
                            formatter: function(params, ticket, callback) {
                                var total = 0;
                                var percent = 0;
                                chart.data.forEach(function(value, index, array) {
                                    total += (Number(value.value) || 0)
                                });
                                if (total === 0) {
                                    percent = 0
                                } else {
                                    percent = ((params.value / total) * 100).toFixed(0);
                                }

                                return '{white|' + params.name + '}\n{hr|}\n{aqua|' + params.value + '人/}{aqua|' + percent + '%}';
                            },
                            rich: rich
                        },
                    },
                    labelLine: {
                        length: 9,
                        length2: 4,
                    },
                    data: chart.data
                }
            ]
        };
        echart.setOption(option, true);
    },
    initAnipie2(params) {
        var myChart = echarts.init(document.getElementById(params.domId))
        var timer = null
        let value = params.value || 0;
        var piecolores = Number(value) >= 100 ? [
            [0, '#2CFAFC'],
            [0.5, '#0ff'],
            [1, '#0ff']
        ] : [
            [0, '#2CFAFC'],
            [(100 - value) / 100, '#0ff'],
            [1, '#0f232e']
        ];
        var option = {
            title: {
                text: '{a|' + value + '}{c|%}',
                x: 'center',
                y: 'center',
                textStyle: {
                    rich: {
                        a: {
                            fontSize: 20,
                            color: '#f0fd83',
                            fontWeight: '500',
                        },
                        c: {
                            fontSize: 16,
                            color: '#fff',
                            fontWeight: '500',
                        },


                    }
                }
            },
            series: [{
                    type: 'gauge',
                    radius: '94%',
                    clockwise: false,
                    startAngle: '90',
                    endAngle: '-269.9999',
                    splitNumber: 30,
                    detail: {
                        offsetCenter: [0, -20],
                        formatter: ' '
                    },
                    pointer: {
                        show: false
                    },
                    axisLine: {
                        show: true,
                        lineStyle: {
                            color: piecolores,
                            width: 15
                        }
                    },
                    axisTick: {
                        show: false
                    },
                    splitLine: {
                        show: true,
                        length: 60,
                        lineStyle: {
                            shadowBlur: 10,
                            shadowColor: 'rgba(0, 255, 255, 1)',
                            shadowOffsetY: '0',
                            color: '#020f18',
                            width: 1
                        }
                    },
                    axisLabel: {
                        show: false
                    }
                },

                {
                    type: 'pie',
                    radius: ['68%', '64%'],
                    hoverAnimation: false,
                    clockWise: false,
                    itemStyle: {
                        normal: {
                            color: '#0C355E'
                        }
                    },
                    label: {
                        show: false
                    },
                    data: _dashed()
                },

                {
                    type: 'pie',
                    radius: [0, '54%'],
                    hoverAnimation: false,
                    clockWise: false,
                    itemStyle: {
                        normal: {
                            shadowBlur: 20,
                            shadowColor: '#000',
                            color: new echarts.graphic.RadialGradient(0.4, 0.3, 1, [{
                                offset: 0,
                                color: 'rgba(17,99,173, 0.8)',
                            }, {
                                offset: 1,
                                color: '#060f20'
                            }])
                        }
                    },
                    label: {
                        show: false
                    },
                    data: [100]
                }
            ]
        };

        function _dashed() {
            let dataArr = [];
            for (var i = 0; i < 100; i++) {
                if (i % 2 === 0) {
                    dataArr.push({
                        name: (i + 1).toString(),
                        value: 20,
                        itemStyle: {
                            normal: {
                                color: 'rgb(0,255,255,.3)',
                            }
                        }
                    })
                } else {
                    dataArr.push({
                        name: (i + 1).toString(),
                        value: 20,
                        itemStyle: {
                            normal: {
                                color: 'rgb(0,0,0,0)',
                                borderWidth: 1,
                                borderColor: "rgba(0,255,255,1)"
                            }
                        }
                    })
                }

            }
            return dataArr

        }
        myChart.setOption(option, true);

        function doing() {
            let option = myChart.getOption();
            option.series[1].startAngle = option.series[1].startAngle - 1;
            myChart.setOption(option, true);
        }
        doing()

        // function startTimer() {
        //     timer = setInterval(doing, 100);
        // }
        // setTimeout(startTimer, 500);

    },

    initEchart_sbar(data) {
        var echart = echarts.init(document.getElementById(data.domId));

        var option = {
            tooltip: {
                trigger: "axis",
                axisPointer: {
                    type: "shadow",
                    label: {
                        show: true
                    }
                }
            },
            grid: {
                left: "10",
                top: "40",
                right: "10",
                bottom: "10",
                containLabel: true
            },
            xAxis: {
                data: data.xData,
                axisLine: {
                    show: true, //隐藏X轴轴线
                    lineStyle: {
                        color: "#3d5269",
                        width: 1
                    }
                },
                axisTick: {
                    show: true, //隐藏X轴刻度
                    alignWithLabel: true
                },
                axisLabel: {
                    show: true,
                    textStyle: {
                        color: "#fff", //X轴文字颜色
                        fontSize: data.xfont || 14
                    },
                    margin: 12,
                    interval: 0,
                    rotate: 0
                }
            },
            yAxis: [{
                type: "value",
                position: "top",
                name: data.uni ? data.uni : "数量",
                nameTextStyle: {
                    color: "#ddd",
                    fontSize: 12
                },
                splitNumber: 3,
                splitLine: {
                    show: true,
                    lineStyle: {
                        width: 1,
                        color: "#3d5269"
                    }
                },
                axisTick: {
                    show: false
                },
                axisLine: {
                    show: false
                },
                axisLabel: {
                    show: true,
                    textStyle: {
                        color: "#ddd",
                        fontSize: 12
                    }
                }
            }],
            series: [{
                name: data.name,
                type: "bar",
                barMaxWidth: '15',
                itemStyle: {
                    normal: {
                        label: {
                            show: true, //开启显示
                            position: 'top', //在上方显示
                            textStyle: { //数值样式
                                color: "rgba(250,250,250,0.8)",
                                fontSize: 13,
                                fontWeight: 600
                            },
                            formatter: ('{c}')
                        },
                        color: new echarts.graphic.LinearGradient(0, 0, 1, 1, [{
                            offset: 0,
                            color: 'rgba(15,197,243,0.8)'
                        }, {
                            offset: 1,
                            color: 'rgba(15,197,243,0)'
                        }]),
                        borderColor: new echarts.graphic.LinearGradient(0, 0, 1, 1, [{
                            offset: 0,
                            color: 'rgba(180,240,255,1)'
                        }, {
                            offset: 1,
                            color: 'rgba(15,197,243,0.3)'
                        }]),
                        borderWidth: 1
                    }
                },
                data: data.barData
            }]
        }
        if (data.xData.length > 12) {
            option.dataZoom = [{
                show: true,
                start: 0,
                end: data.zoomVal || 60,
                bottom: 16,
                right: 10,
                textStyle: {
                    color: "rgba(204,187,225,0)",
                },
                fillerColor: "rgba(67,55,160,0.3)",
                borderColor: "rgba(204,187,225,0.1)"
            }]
        };
        if (data.xData == '17') {

        }
        echart.setOption(option, true);
    },
    initEchart_sbar1(data) {
        var echart = echarts.init(document.getElementById(data.domId));

        var option = {
            tooltip: {
                trigger: "axis",
                axisPointer: {
                    type: "shadow",
                    label: {
                        show: true
                    }
                }
            },
            grid: {
                left: "10",
                top: "40",
                right: "10",
                bottom: "10",
                containLabel: true
            },
            xAxis: {
                data: data.xData,
                axisLine: {
                    show: true, //隐藏X轴轴线
                    lineStyle: {
                        color: "#3d5269",
                        width: 1
                    }
                },
                axisTick: {
                    show: true, //隐藏X轴刻度
                    alignWithLabel: true
                },
                axisLabel: {
                    show: true,
                    textStyle: {
                        color: "#fff", //X轴文字颜色
                        fontSize: 12
                    },
                    margin: 12,
                    interval: 0,
                    rotate: 0
                }
            },
            yAxis: [{
                type: "value",
                position: "top",
                //  name: data.uni ? data.uni : "数量",
                nameTextStyle: {
                    color: "#ddd",
                    fontSize: 12
                },
                splitNumber: 3,
                splitLine: {
                    show: true,
                    lineStyle: {
                        width: 1,
                        color: "#3d5269"
                    }
                },
                axisTick: {
                    show: false
                },
                axisLine: {
                    show: false
                },
                axisLabel: {
                    show: false,
                    textStyle: {
                        color: "#ddd",
                        fontSize: 12
                    }
                }
            }],
            series: [{
                name: data.name,
                type: "bar",
                barMaxWidth: '15',
                itemStyle: {
                    normal: {
                        label: {
                            show: true, //开启显示
                            position: 'top', //在上方显示
                            textStyle: { //数值样式
                                color: "rgba(250,250,250,0.8)",
                                fontSize: 13,
                                fontWeight: 600
                            },
                            formatter: ('{c}')
                        },
                        color: new echarts.graphic.LinearGradient(0, 0, 1, 1, [{
                            offset: 0,
                            color: 'rgba(15,197,243,0.8)'
                        }, {
                            offset: 1,
                            color: 'rgba(15,197,243,0)'
                        }]),
                        borderColor: new echarts.graphic.LinearGradient(0, 0, 1, 1, [{
                            offset: 0,
                            color: 'rgba(180,240,255,1)'
                        }, {
                            offset: 1,
                            color: 'rgba(15,197,243,0.3)'
                        }]),
                        borderWidth: 1
                    }
                },
                data: data.barData
            }]
        }
        if (data.xData.length > 12) {
            option.dataZoom = [{
                show: true,
                start: 0,
                end: data.zoomVal || 60,
                bottom: 16,
                right: 10,
                textStyle: {
                    color: "rgba(204,187,225,0)",
                },
                fillerColor: "rgba(67,55,160,0.3)",
                borderColor: "rgba(204,187,225,0.1)"
            }]
        };
        echart.setOption(option, true);
    },
    initpieca(pdata) {
        var total = pdata.total
        var unit = pdata.unit || ''
        var echart = echarts.init(document.getElementById(pdata.domId))

        var rich = {
            aqua: {
                color: "aqua",
                fontSize: 15,
                padding: [4, 0],
                align: 'center'
            },
            white: {
                color: "#fff",
                align: 'center',
                fontSize: 13,
                padding: [4, 0]
            },

            hr: {
                borderColor: '#a2c7f3',
                width: '100%',
                borderWidth: 1,
                height: 0,
            }
        }
        var pieData = pdata.data;
        var data = [];
        var color = ['#1694c4', '#06d3c4', '#ffbc32', '#2ccc44', '#ff55ac', '#0e908a', '#a373e2', '#c37310', ]
        for (var i = 0; i < pieData.length; i++) {
            data.push({
                value: pieData[i].value,
                name: pieData[i].name,
                itemStyle: {
                    normal: {
                        borderWidth: 5,
                        shadowBlur: 2,
                        borderColor: color[i],
                        shadowColor: color[i]
                    }
                }
            });
        }
        var seriesOption = [{
            name: '',
            type: 'pie',
            clockWise: false,
            center: ['50%', '56%'],
            radius: ['52%', '60%'],
            hoverAnimation: false,
            itemStyle: {
                normal: {
                    label: {
                        show: true,
                        position: 'outside',
                        color: '#ddd',
                        formatter: function(params, ticket, callback) {
                            var percent = 0;
                            percent = ((params.value / total) * 100).toFixed(0);
                            return '{white|' + params.name + '}\n{hr|}\n{aqua|' + params.value + unit + '}';
                        },
                        rich: rich,

                    },

                    labelLine: {
                        length: 8,
                        length2: 15,
                    }
                }
            },
            data: data
        }];
        var option = {
            color: color,
            tooltip: {
                trigger: 'item',
                formatter: "{b}:\n{c}" + unit + "({d}%)",
                textStyle: {
                    fontSize: 16,
                },
            },
            title: {
                text: '{a|' + total + unit + '}\n{c|合计}',
                x: 'center',
                y: '45%',
                textStyle: {
                    rich: {
                        a: {
                            fontSize: 16,
                            color: '#29EEF3',
                            padding: [15, 0],
                            fontWeight: '800'
                        },

                        c: {
                            fontSize: 18,
                            color: '#fff',
                        }
                    }
                }
            },

            legend: {
                icon: "circle",
                show: pdata.hidlegend ? false : true,
                data: pieData.filter(item => {
                    return item.name
                }),
                textStyle: {
                    color: "#fff"
                },
            },
            series: seriesOption
        }
        echart.setOption(option, true);
    },
    initEchart_barLine(data) {
        var echart = echarts.init(document.getElementById(data.domId))
        var option = {
            tooltip: {
                trigger: "axis",
                axisPointer: {
                    type: "shadow",
                    label: {
                        show: true
                    }
                }
            },
            grid: {
                left: "10",
                top: "30",
                right: "10",
                bottom: "0",
                containLabel: true
            },
            legend: {
                data: data.legend || [],
                textStyle: {
                    color: "#fff",
                    fontSize: 12
                }
            },
            xAxis: {
                data: data.xData,
                axisLine: {
                    show: true, //隐藏X轴轴线
                    lineStyle: {
                        color: "#3d5269",
                        width: 1
                    }
                },
                axisTick: {
                    show: true, //隐藏X轴刻度
                    alignWithLabel: true
                },
                axisLabel: {
                    show: true,
                    textStyle: {
                        color: "#fff", //X轴文字颜色
                        fontSize: 12
                    },
                    margin: 10,
                    interval: 0,
                    rotate: data.rotate || 40
                }
            },
            yAxis: [{
                    type: "value",
                    position: "top",
                    name: data.uni || '',
                    nameTextStyle: {
                        color: "#ddd",
                        fontSize: 12
                    },
                    splitNumber: 2,
                    splitLine: {
                        show: true,
                        lineStyle: {
                            width: 1,
                            color: "#09315d",
                            type: 'dashed'
                        }
                    },
                    axisTick: {
                        show: false
                    },
                    axisLine: {
                        show: false
                    },
                    axisLabel: {
                        show: true,
                        textStyle: {
                            color: "#ddd",
                            fontSize: 12
                        }
                    }
                },
                {
                    type: "value",
                    name: '',
                    splitNumber: 2,
                    nameTextStyle: {
                        color: "#ddd",
                        fontSize: 12
                    },
                    position: "top",
                    splitLine: {
                        show: false
                    },
                    axisTick: {
                        show: false
                    },
                    axisLine: {
                        show: false,
                        lineStyle: {
                            color: "#396A87",
                            width: 1
                        }
                    },
                    axisLabel: {
                        show: true,
                        formatter: "{value}", //右侧Y轴文字显示
                        textStyle: {
                            color: "#ddd",
                            fontSize: 12
                        }
                    }
                }
            ],
            series: [{
                    name: data.name ? data.name : '',
                    type: "bar",
                    barMaxWidth: 15,
                    itemStyle: {
                        normal: {
                            label: {
                                show: true, //开启显示
                                position: 'top', //在上方显示
                                textStyle: { //数值样式
                                    color: "rgba(250,250,250,0.8)",
                                    fontSize: 12,
                                },
                                formatter: ('{c}' + (data.noshow ? '' : (data.uni || '')))
                            },
                            color: new echarts.graphic.LinearGradient(0, 0, 1, 1, [{
                                offset: 0,
                                color: 'rgba(15,197,243,0.8)'
                            }, {
                                offset: 1,
                                color: 'rgba(15,197,243,0)'
                            }]),
                            borderColor: new echarts.graphic.LinearGradient(0, 0, 1, 1, [{
                                offset: 0,
                                color: 'rgba(180,240,255,1)'
                            }, {
                                offset: 1,
                                color: 'rgba(15,197,243,0.3)'
                            }]),
                            borderWidth: 1
                        }
                    },
                    data: data.barData
                },

                {
                    name: "平均处理时长",
                    type: "line",
                    yAxisIndex: 1, //使用的 y 轴的 index，在单个图表实例中存在多个 y轴的时候有用
                    showAllSymbol: true, //显示所有图形。
                    symbol: "circle", //标记的图形为实心圆
                    symbolSize: 5, //标记的大小
                    itemStyle: {
                        //折线拐点标志的样式
                        color: "#70ad4a",
                        borderColor: "#70ad4a",
                        width: 2,
                        shadowColor: "#26D9FF",
                        shadowBlur: 2
                    },
                    lineStyle: {
                        color: "#70ad4a",
                        width: 2,
                        shadowBlur: 2
                    },
                    data: data.lineData
                }
            ]
        }
        if (data.xData.length > 12) {
            option.dataZoom = [{
                show: true,
                start: 0,
                end: data.zoomVal || 60,
                right: 10,
                bottom: 0,
                textStyle: {
                    color: "rgba(204,187,225,0)",
                },
                fillerColor: "rgba(67,55,160,0.3)",
                borderColor: "rgba(204,187,225,0.1)"
            }]
        };
        echart.setOption(option, true);
        this.$resize = function() {
            echart.resize()
        }
    },
    initEcaht_sline(pdata) {
        var echart = echarts.init(document.getElementById(pdata.domId))
        var option = {
            grid: {
                left: "10",
                top: "30",
                right: "10",
                bottom: "10",
                containLabel: true
            },
            tooltip: {
                trigger: "axis",
                axisPointer: {
                    type: "shadow",
                    label: {
                        show: true
                    }
                }
            },
            xAxis: [{
                type: "category",
                axisLabel: {
                    formatter: '{value}',
                    fontSize: 14,
                    textStyle: {
                        color: "#fff"
                    }
                },
                axisLine: {
                    show: false,
                    lineStyle: {
                        color: "#243753"
                    }
                },
                splitLine: {
                    show: false,
                    lineStyle: {
                        color: "#243753"
                    }
                },

                data: pdata.xdata
            }],
            yAxis: [{
                position: "top",
                name: pdata.unit || '',
                nameTextStyle: {
                    color: "#fff",
                    fontSize: 12
                },
                type: "value",
                splitNumber: 3,
                axisLabel: {
                    textStyle: {
                        color: "#fff"
                    }
                },

                splitLine: {
                    lineStyle: {
                        color: "#243753"
                    }
                },
                axisLine: {
                    show: true,
                    lineStyle: {
                        color: "#283352"
                    }
                },
                axisTick: {
                    show: false
                }
            }],

            series: [{
                type: "line",
                smooth: false,
                showSymbol: true,
                symbolSize: 4,
                zlevel: 3,
                itemStyle: {
                    color: '#19a3df',
                    borderColor: "#a3c8d8",
                    normal: {
                        label: {
                            show: true, //开启显示
                            position: 'top', //在上方显示
                            textStyle: { //数值样式
                                color: "rgba(250,250,250,0.8)",
                                fontSize: 14,
                                fontWeight: 500
                            },
                            formatter: ('{c}')
                        }
                    }
                },
                lineStyle: {
                    normal: {

                        color: "#19a3df",
                    }
                },
                areaStyle: {
                    normal: {
                        color: new echarts.graphic.LinearGradient(
                            0,
                            0,
                            0,
                            1, [{
                                    offset: 0,
                                    color: "rgba(88,255,255,0.2)"
                                },
                                {
                                    offset: 0.8,
                                    color: "rgba(88,255,255,0)"
                                }
                            ],
                            false
                        ),
                    }
                },
                data: pdata.data
            }]
        };
        echart.setOption(option, true);
    },
    initEchart_mline(pdata) {
        var echart = echarts.init(document.getElementById(pdata.domId))
        var option = {
            color: ['#5470c6', '#91cc75', '#fac858', '#ee6666', '#73c0de', '#3ba272', '#fc8452', '#9a60b4', '#ea7ccc'],
            tooltip: {
                trigger: 'axis',
                axisPointer: { // 坐标轴指示器，坐标轴触发有效
                    type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                }
            },
            legend: {
                textStyle: {
                    color: '#fff',
                    fontSize: 10,
                },
                orient: 'horizontal',
                icon: 'circle',

                data: pdata.datas.map(item => {
                    return item.name;
                })
            },
            grid: {
                left: '5%',
                right: '5%',
                bottom: '10',
                containLabel: true
            },
            xAxis: {
                type: 'category',
                axisLine: {
                    lineStyle: {
                        color: '#9cb2f3',
                    }
                },
                axisLabel: {
                    show: true,
                    textStyle: {
                        color: '#fff'
                    },
                },
                data: pdata.xAxis,
            },
            yAxis: {
                name: pdata.yname || '',
                splitNumber: 4,
                axisLabel: {
                    show: true,
                    textStyle: {
                        color: '#fff'
                    },
                },
                axisLine: {
                    lineStyle: {
                        color: '#9cb2f3',
                    }
                },
                splitLine: { //分割线配置
                    lineStyle: {
                        color: "#AAAAAA56",
                    }
                },
            },
            series: pdata.datas
        };
        echart.setOption(option, true);
    },
    initEchart_mbar(pdata) {
        var echart = echarts.init(document.getElementById(pdata.domId))
        var option = {
            color: ['#5470c6', '#91cc75', '#fac858', '#ee6666', '#73c0de', '#3ba272', '#fc8452', '#9a60b4', '#ea7ccc'],
            tooltip: {
                trigger: 'axis',
                axisPointer: { // 坐标轴指示器，坐标轴触发有效
                    type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                }
            },
            legend: {
                textStyle: {
                    color: '#fff',
                    fontSize: 14,
                },
                orient: 'horizontal',
                icon: 'circle',

                data: pdata.datas.map(item => {
                    return item.name;
                })
            },
            grid: {
                left: '5%',
                right: '5%',
                bottom: '10',
                containLabel: true
            },
            xAxis: {
                type: 'category',
                axisLine: {
                    lineStyle: {
                        color: '#9cb2f3',
                    }
                },
                axisLabel: {
                    show: true,
                    textStyle: {
                        color: '#fff'
                    },
                },
                data: pdata.xAxis,
            },
            yAxis: {
                name: pdata.yname || '',
                splitNumber: 4,
                axisLine: {
                    lineStyle: {
                        color: '#9cb2f3',
                    }
                },
                axisLabel: {
                    show: true,
                    textStyle: {
                        color: '#fff'
                    },
                },
                splitLine: {
                    lineStyle: {
                        color: "#AAAAAA56",
                    }
                },
            },
            series: pdata.datas
        };
        echart.setOption(option, true);
    },
    initEcahrt_Sgauge(params) {
        var echart = echarts.init(document.getElementById(params.domId))
        var option = {
            title: {
                x: 'center',
                bottom: 0,
                text: params.name,
                textStyle: {
                    fontWeight: '500',
                    fontSize: 18,
                    color: "#fff"
                },
            },
            series: [{
                name: '速度',
                type: 'gauge',
                min: 0,
                max: 100,
                center: ['50%', '50%'], // 默认全局居中
                splitNumber: 4,
                radius: '80%',
                axisLine: { // 坐标轴线
                    lineStyle: { // 属性lineStyle控制线条样式
                        color: [
                            [0.2, '#ff4500'],
                            [0.8, '#4EE3FF'],
                            [1, 'lime']
                        ],
                        width: 2,
                        shadowColor: '#fff', //默认透明
                        shadowBlur: 4
                    }
                },
                axisLabel: {
                    show: false, // 坐标轴小标记
                    textStyle: { // 属性lineStyle控制线条样式
                        color: '#fff',
                        fontSize: 10
                    }
                },
                axisTick: { // 坐标轴小标记
                    length: 8, // 属性length控制线长
                    lineStyle: { // 属性lineStyle控制线条样式
                        color: 'auto',
                        width: 1,
                        shadowBlur: 2
                    }
                },
                splitLine: { //橙色分割线
                    length: 12,
                    lineStyle: {
                        width: 1,
                        color: '#FCD209',
                    }
                },
                itemStyle: { //指针颜色
                    color: '#1e90ff',
                },
                pointer: {
                    show: false,
                    length: 0
                },
                detail: {
                    formatter: '{value}%',
                    fontSize: 20,
                    fontWeight: '600',
                    offsetCenter: [0, 0]
                },
                data: [{ value: params.value }]
            }]
        };
        echart.setOption(option, true);
    },
    initEchart_sckbar(params) {
        var echart = echarts.init(document.getElementById(params.domId))
        var data = {
            area: params.xData,
            legend: params.legend,
            data: params.data,
            sumtotal: params.sumtotal,
        }
        var colors = ['#5470c6', '#73c0de', '#fac858', '#ee6666', '#3ba272', '#fc8452', '#9a60b4', '#ea7ccc']
        var option = {
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'shadow'
                }
            },
            color: colors,
            legend: {
                textStyle: {
                    fontSize: 13,
                    color: '#fff',
                    padding: [3, 0, 0, 0]
                },
                data: data.legend
            },
            grid: {
                left: '5%',
                right: '5%',
                bottom: '15%',
                top: '15%',
                containLabel: true
            },
            xAxis: {
                type: 'category',
                axisLabel: {
                    show: true,
                    textStyle: {
                        color: "#fff", //X轴文字颜色
                        fontSize: 13
                    },
                    margin: 10,
                    interval: 0,
                    rotate: params.rotate || 0
                },
                axisLine: {
                    lineStyle: {
                        color: '#96A4F4'
                    },

                },
                axisTick: {
                    show: false,
                },
                data: data.area
            },
            yAxis: {
                splitNumber: 4,
                type: 'value',
                axisLabel: {
                    color: '#fff'
                },
                axisLine: {
                    lineStyle: {
                        color: '#96A4F4'
                    },

                },
                axisTick: {
                    show: false,
                },
                splitLine: {
                    lineStyle: {
                        color: 'rgba(150, 164, 244, 0.3)'
                    }
                },
            },
            series: [

            ]
        };
        for (var i = 0; i < data.legend.length; i++) {
            option.series.push({
                name: data.legend[i],
                type: 'bar',
                stack: '总量',
                barMaxWidth: '15',
                label: {
                    show: false,
                    position: 'top'
                },
                data: data.data[i]
            })
        };

        var totalItem = {
            name: '总量',
            type: 'bar',
            barGap: '-100%',
            barMaxWidth: '15',
            itemStyle: {
                color: 'transparent',
            },
            label: {
                show: true,
                color: '#fff',
                fontSize: 14,
                position: 'top'
            },
            z: -1,
            data: data.sumtotal || ''
        };
        if (data.sumtotal && data.sumtotal.length > 0) {
            option.series.unshift(totalItem)
        }

        echart.setOption(option, true);

    },

}