<template>
  <div class="container1">
      <div class="tip">
        <span v-if="!text"><a-icon type="loading" style="font-size:40px"/> 正在认证中……</span>
        <span v-else style="color:red">{{ text }}</span>
        <div v-if="loginreplace"><el-button type="primary" style="width: 240px; font-size: 20px;" @click="loginreplaceFn">重新登录</el-button></div>
      </div>

      <form id="checkForm"  name="checkForm" ref="checkForm" :action="actionUrl" :method="formMethod"  style="display: none">        
       <div id="divLogin" align="center">
          <input type="hidden" name="success" v-model="successUrl">
          <input type="hidden" name="error"  v-model="errorUrl">
          <input type="hidden" name="return" v-model="returnUrl">
          <input type="hidden" name="appid" v-model="appid">
        </div>
        <input type="submit" id="formSubmit" name="submit_button" value="提交" />
    </form>

  </div>
</template>

<script>
import { ACCESS_TOKEN, ACCESS_STAFFID } from '@/store/mutation-types'
import TwoStepCaptcha from '@/components/tools/TwoStepCaptcha'
import { getUrlConfig, checkAuth, getOaconfig } from '@/api/login'
import storage from 'store';
export default {
  components: {
    TwoStepCaptcha
  },
  data () {
    return {
      text: '',
      actionUrl: '',
      appid: '',
      loginreplace: false,
      successUrl: '',
      errorUrl: '',
      returnUrl: '',
      formMethod: 'get',
    }
  },
  mounted () {
    
    if (this.$route.query.oalogin && this.$route.query.oalogin == 'success') {
        this.loginreplace = false;
        this.checkAuthToken(this.$route.query.token)
        return
    } else if (this.$route.query.oalogin && this.$route.query.oalogin == 'checkError') {
        this.getOaconfigFn('login')
    } else if (this.$route.query.oalogin && this.$route.query.oalogin == 'loginError'){
        this.loginreplace = true;
        this.text = '登录失败，请重新登录！'
    }  else {
       this.loginreplace = false;
       this.getOaconfigFn('check')
    }
    
  },
  methods: {
      loginreplaceFn () {
         this.getOaconfigFn('login')
      },
      getOaconfigFn (type) {
        var self = this;
        self.formMethod = type == 'check' ? 'get' :'post';
        getOaconfig ().then(res => {
         
           if(res.rspCode === '0000'){
              self.actionUrl = res.result[type].loginUrl
              self.appid =res.result[type].appId
              self.successUrl =  res.result[type].successUrl
              self.errorUrl = res.result[type].errorUrl
              self.returnUrl =  res.result[type].returnUrl
              self.$nextTick(() => {
                //  $('#checkForm').submit()
                 self.$refs['checkForm'].submit()
              })
           } else{
              this.text = res.rspMsg;
              this.loginreplace = true;
           }
        })
      },
      checkAuthToken (token) {
        var params = {sign: token}
        checkAuth(params).then(res => {
          
          if(res.rspCode === '0000'){
            var result = res.result;
              storage.set(ACCESS_TOKEN, result.token, 7 * 24 * 60 * 60 * 1000)
              storage.set(ACCESS_STAFFID, result.staffId, 7 * 24 * 60 * 60 * 1000)
              this.$store.commit('SET_TOKEN', result.token)
              this.$store.commit('SET_INFO', result)
              storage.set('userInfo', result)
              window.setTimeout(() => {
                this.$router.push({ path: '/' })
                // 延迟 1 秒显示欢迎信息
                // this.$notification.success({
                //   message: '欢迎',
                //   description: `欢迎回来`
                // })
              }, 500)
          } else {
            this.loginreplace = true;
            this.text = res.rspMsg
          }
        })
      },
      getQueryVariable(){
        var url = location.href; 
        let value = ''
        if (url.indexOf("?") != -1) {
          let strs = url.split("?")
          value = strs[1]
        }
        return value
      },
    
  }
}
</script>

<style lang="less" scoped>
    .tip{
        padding-top: 20%;
        font-size: 50px;
        font-family: MFBanHei;
        font-weight: 400;
        color: #02F6FF;
        text-align: center;
    }
</style>
