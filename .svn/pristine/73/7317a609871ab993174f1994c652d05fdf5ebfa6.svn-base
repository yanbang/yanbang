<!-- 资源全省4级小区 -->
<template>
  <div class="flex1 flex  flexcol"  style="position: relative;  z-index: 999999;">
    <div class="lefttbox" style="height: 64%;">
      <div class="felx statename">
        <div v-for="n in taglist" :key="n.id">
          <span class="tagitem nfont" :class="{ active: tagactive == n.id }" @click="tagPclick(n, 'p')">{{
            n.name
          }}</span>
        </div>
      </div>
      <div class="felx statename" style="margin-bottom: 0px">
        <div v-for="(n, index) in taglist2" :key="index">
          <span class="tagitem nfont" :class="{ active: tagactive == n.id }" @click="tagPclick(n, 's')">{{
            n.name
          }}</span>
        </div>
      </div>
      <div class="felx statety" ref="stateCridiv" id="stateCridiv">
        <div class="flex1">
          <div class="numfont" style="color: #FFB129">{{zyxqData.houNoNum || '--'}}</div>
          <div class="bcolor">未进线</div>
        </div>
        <div class="flex1 flex1center" style="padding: 0; position: relative;">
          <div style="position: absolute; top: 0; text-algin: center; width: 100%; padding-top: 44px; z-index: 88">
            <div class="numfont">{{zyxqData.allNum || '--'}}</div>
            <div class="bcolor">{{ stateresTitle }}</div>
          </div>
          <div class="flex1" style="width: 100%; height: 100%; padding: 0">
            <div id="piecchart" style="width: 100%; height: 100%"></div>
          </div>
        </div>
        <div class="flex1">
          <div class="numfont" style="color: #34FFD4">{{zyxqData.houInNum || '--'}}</div>
          <div class="bcolor">进线</div>
        </div>
      </div>

      <div class="flex tjbox" v-if = "tagactiveType == 1">
        <div class="tjitem">
          <span class="nfont tjnf">{{tagactive == 6 ? '本月新进线' : '本月新增小区'}}</span>
          <span class="numfont">{{zyxqData.monNewNum|| '--'}}</span>
        </div>
        <div class="tjitem" v-show = "tagactive != 6">
          <span class="nfont tjnf">其中已进线</span>
          <span class="numfont">{{zyxqData.monNewInNum || '-'}}</span>
        </div>
        <div class="tjitem" v-show = "tagactive == 6">
          <span class="nfont tjnf">环比</span>
          <span class="numfont" :class="statusClass(zyxqData.monPer)">{{zyxqData.monPer || '-'}}%</span>
        </div>
      </div>

      <div class="ybpchartbox flex flex1" v-if="tagactiveType == 1">
        <div class="flex flex1 " style="font-size: 12px">
          <div class="flex1 peiitem">
            <echartPie :pvalue="(zyxqData.porRate || '-')" title="端口实占率" domid="echartPie1"></echartPie>
          </div>
          <div class="flex1 peiitem">
            <echartPie :pvalue="(zyxqData.famRate || '-')" domid="echartPie2" title="家庭渗透率"></echartPie>
          </div>

          <div class="piexxq" style="width: 40px;">
            <div class="bcolor pointer" style="text-algin: center; font-size: 16px" @click="dialogDetail">
              详情>
            </div>
          </div>
        </div>
        <div class="flex" style=" text-align: center; font-size: 14px; height: 34px;">
          <div class="piefon nfont  flex1">环比 <span class=" numfont " :class="statusClass(zyxqData.porPerHuanbi)">{{zyxqData.porPerHuanbi || '-'}}%</span></div>
          <div class="piefon nfont  flex1">环比 <span class="numfont" :class="statusClass(zyxqData.famPerHuanbi)">{{zyxqData.famPerHuanbi || '-'}}%</span></div>
        </div>
      </div>

      <div class="stateinfo clexrfix stateinfo4l" style="margin-top: 10px" v-if="tagactiveType == 1">
        <div class="stateitm flex1 stateitmleft">
          <div>
            <span class="nfont bcolor" style="margin-right: 10px">低实占小区</span>
            <span class="numfont">{{zyxqData.lowNum || '--'}}</span>
          </div>

          <div>
            <span class="nfont bcolor" style="margin-right: 10px">低渗透小区</span>
            <span class="numfont">{{zyxqData.lowThNum|| '--'}}</span>
          </div>

          <div>
            <span class="nfont bcolor" style="margin-right: 10px">一级分光预警</span>
            <span class="numfont">{{zyxqData.warNum || '--'}}</span>
          </div>
        </div>
        <div class="stateitm flex1" style="margin-left: 5px">
          <div>
            <span class="nfont bcolor" style="margin-right: 10px">其中本月新增</span>
            <span class="numfont">{{zyxqData.monLowNum || '--'}}</span>
          </div>

          <div>
            <span class="nfont bcolor" style="margin-right: 10px">其中本月新增</span>
            <span class="numfont">{{zyxqData.newLowThNum || '--'}}</span>
          </div>

          <div>
            <span class="nfont bcolor" style="margin-right: 10px">其中本月新增</span>
            <span class="numfont">{{zyxqData.newWarNum || '--'}}</span>
          </div>
        </div>
      </div>

      <!-- 222 -->
      <div class="flex flex1 tabsbox2" v-if="tagactiveType == 2">
        <div class="flex1 flextab2">
          <div class="flex1 flex flexcol relative">
            <div style="width: 100%; height: 100%; padding-bottom: 20px">
              <echartPie :pvalue="zyxqData.porRate" domid="echartPie12" title="本月端口实占率"></echartPie>
            </div>

            <div class="nfont nfonttt bcolor">环比 <span class=" numfont " :class = "statusClass(zyxqData.porPerHuanbi)">{{zyxqData.porPerHuanbi || '-'}}%</span></div>
          </div>
          <div class="flex1 flex flexcol relative">
            <div style="width: 100%; height: 100%; padding-bottom: 20px">
              <echartPie :pvalue="zyxqData.famRate" domid="echartPie13" title="本月家庭渗透率"></echartPie>
            </div>
            <div class="nfont nfonttt bcolor">环比 <span class=" numfont" :class = "statusClass(zyxqData.famPerHuanbi)">{{zyxqData.famPerHuanbi || '-'}}%</span></div>
          </div>
        </div>
        <div class="flex1 flextab2">
          <div class="flex1 flex flexcol relative">
            <div style="width: 100%; height: 100%; padding-bottom: 20px">
              <echartPie :pvalue="zyxqData.porRateLastmon" domid="echartPie14" title="上月端口实占率"></echartPie>
            </div>
            <!-- <div class="nfont nfonttt bcolor">上月端口实占率</div> -->
          </div>
          <div class="flex1 flex flexcol relative">
            <div style="width: 100%; height: 100%; padding-bottom: 20px">
              <echartPie :pvalue="zyxqData.famRateLastmon" domid="echartPie15" title="上月家庭渗透率"></echartPie>
            </div>
            <!-- <div class="nfont nfonttt bcolor">上月家庭渗透率</div> -->
          </div>
        </div>
        <div class="piexxq" style="width: 40px;">
          <div class="bcolor pointer" style="text-algin: center; font-size: 16px" @click="dialogDetail">
            详情>
          </div>
        </div>
      </div>
    </div>

    <div class="flex flex1 flexcol" style="margin-top: 10px;" v-if="queryParams.gridId===''">
      <div class="flex rbtbox">
        <div class="tabs-item flex" style="width: 80px">
          <div class="tab_borderleft"></div>
          <div class="tabfon bcolor" style="color:#02F6FF; margin: 0 auto;">{{tagactive == '5'? '进线率' : '预警'}}</div>
          <div class="tab_borderright"></div>
        </div>
        <div class="flex1 clearfix" v-show = "tagactive != '5'">
          <div class="pull-right" style="font-size: 14px;">
            <span class="stabitem nfont " :class="{ active: bhqsState == 1 }" @click="bhqsClick('1')">低实占</span>
            <span class="stabitem nfont" :class="{ active: bhqsState == 2 }" @click="bhqsClick('2')">低渗透</span>
            <span class="stabitem nfont" :class="{ active: bhqsState == 3 }" @click="bhqsClick('3')">一级分光</span>
          </div>
        </div>
      </div>
      <div class="flex1">
        <echartBar domid="echartbar1" :pdata="echartBarData"></echartBar>
      </div>
    </div>

    
  </div>
</template>

<script>
import store from 'store'
import echarts from 'echarts'
import echartGauge from './echartGauge'
import echartPie from './echartPie'
import echartBar from './echartBar'
import { mapState } from 'vuex'
import resourceApi from '@/api/resource'
export default {
  props: ['mapLevel', 'queryParams'],
  data() {
    return {
      zyxqData: {},
      dialogVisible2: false,
      diatagActive: 1,
      bhqsState: 1,
      taglist: [
        { id: '1', name: '全部住宅', type: 1 },
        { id: '2', name: '村庄', type: 1 },
        { id: '3', name: '商户区', type: 1 },
        { id: '4', name: '单位驻地', type: 1 }
      ],
      taglist2: [
        { id: '5', name: '在售楼盘', type: 2 },
        { id: '6', name: 'A类小区', type: 1 }
      ],
      tagactiveType: 1,
      parentTagactive: '1',
      tagactive: '1',
      echartBarData: {
        xdata: [],
        vdata: []
      },
      chartpiecr: null,
      echartGaugeval1: 1698,
      echartGaugeval2: 3266,
      pieval1: 44,
      pieval2: 30,
      pieval3: 56.34,
      pieOption: {
        color: ['#34FFD4', '#FFB129'],
        series: [
          {
            type: 'pie',
            radius: ['85%', '78%'],
            center: ['50%', '50%'],
            data: [],
            hoverAnimation: false,
            labelLine: {
              show: false
            },
            label: {
              show: false
            }
          }
        ]
      },
    }
  },
  components: {
    echartGauge,
    echartPie,
    echartBar,
    
  },
  mounted() {
     var self = this;
    this.$nextTick(() => {
      var dwidth = document.getElementById('stateCridiv').offsetWidth;
      document.getElementById('stateCridiv').style.height =  dwidth / 3 + 'px';
      this.chartpiecr = echarts.init(document.getElementById('piecchart'));
      this.chartpiecr.setOption(this.pieOption, true)
      this.chartpiecr.resize()
    });
  },
  watch: {
    queryParams: {
      handler(params) {
        if (params.mLevel >= 5) {
          return;
        };
        this.serviceInit()
      },
      deep: true
    },
    zyxqActionType (val) {
      this.service_zyXqzy()
    },
    bhqsState (val) {
      var params = JSON.parse(JSON.stringify(this.queryParams))
     if (this.zyxqActionType == 'alxq')  {
         this.service_zyYujing(params, '2')
      } else {
        this.service_zyYujing(params)
      }
    }
  },
  computed: {
    zyxqActionType () {
      var code = '30';
      if (this.tagactive == '1') {
        code = '30';
      } else if (this.tagactive == '2') {
        code = '33';
      }  else if (this.tagactive == '3') {
        code = '32';
      }  else if (this.tagactive == '4') {
        code = '31';
      }  else if (this.tagactive == '5') {
        code = 'zslp';
      }  else if (this.tagactive == '6') {
        code = 'alxq';
      }
      return code;
    },
    stateresTitle () {
      var alltagList = this.taglist.concat(this.taglist2)
      var selecttag = alltagList.filter(item => {
        return item.id  == this.tagactive;
      })
      return selecttag[0].name
    }
  },
  methods: {
    statusClass (val) {
      var classname = ''
      if(val && val > 0) {
        classname = 'addcolor'
      } else if (val && val < 0) {
        classname = 'subcolor'
      }
      return classname
    },
    serviceInit () {
      this.service_zyXqzy()
    },
    // 小区资源
    sercice_comxqzy (params) {
       params.actionType = this.zyxqActionType;
        resourceApi.zyXqzy(params).then(data => {
          if (data.rspCode = '0000' ) {
            if ( data.result.data &&  data.result.data.length > 0) {
              this.zyxqData = data.result.data[0];
              this.piecirInit((this.zyxqData.houInNum || 0), (this.zyxqData.houNoNum || 0))
            } else {
              this.zyxqData = {};
              this.piecirInit(0, 0)
            }
            
          }
        })
    },
    // 在售楼盘
    service_zyZslp (params) {
      resourceApi.zyZslp(params).then(data => {
          if (data.rspCode = '0000' ) {
            if ( data.result.data &&  data.result.data.length > 0) {
              this.zyxqData = data.result.data[0];
            } else {
              this.zyxqData = {};
            }
          }
        });
    },
    // A类小区
    service_zyAlxq (params) {
      resourceApi.zyAlxq(params).then(data => {
           
          if (data.rspCode = '0000' ) {
            if ( data.result.data &&  data.result.data.length > 0) {
              this.zyxqData = data.result.data[0];
             
            } else {
              this.zyxqData = {};
              
            }
            
          }
      });
    },
    //预警
    service_zyYujing (params, type) {
      
        type ? params.actionType = type : params.actionType = this.zyxqActionType;
        params.flag = this.bhqsState;
        params.showLevel = params.mLevel;
        resourceApi.zyYujing(params).then(data => {
           
          if (data.rspCode = '0000' ) {
            if (data.result.data && data.result.data.length > 0) {
              // var item = data.result.data[0];
              // var initKey = 'eparchyCode';
              // if (item.gridId && item.gridId != '00' ) {
              //   initKey = 'gridName';
              // } else if (item.areaCode && item.areaCode != '00' ) {
              //   initKey = 'areaName';
              // }  else if (item.eparchyCode && item.eparchyCode != '00' ) {
              //   initKey = 'eparchyName';
              // }
            
              var Xdata = data.result.data.map(item => {
                var initKey = 'eparchyCode';
                if (item.gridId && item.gridId != '00' ) {
                  initKey = 'gridName';
                } else if (item.areaCode && item.areaCode != '00' ) {
                  initKey = 'areaName';
                }  else if (item.eparchyCode && item.eparchyCode != '00' ) {
                  initKey = 'eparchyName';
                }
                return item[initKey]
              })
              var Vdata = data.result.data.map(row => {
                return row['lineRate']
              })
              
              this.echartBarData =  {
                xdata: Xdata,
                vdata: Vdata
              }


            } else {
              this.echartBarData =  {
                xdata: [],
                vdata: []
              }
            }
          }
      });
    },
    // 小区资源
    service_zyXqzy () {
      var params = JSON.parse(JSON.stringify(this.queryParams))
      if (this.zyxqActionType == 'zslp') {
         this.service_zyZslp(params)

         this.service_zyZslpJxl(params)

      } else if (this.zyxqActionType == 'alxq')  {
         this.service_zyAlxq(params)
         this.service_zyYujing(params, '2')
      } else {
        this.sercice_comxqzy(params)
        this.service_zyYujing(params)
      }

    },
    // //在售楼盘 进线率
    service_zyZslpJxl (params) {
      resourceApi.zyZslpJxl(params).then(data => {
          if (data.rspCode = '0000' ) {
            if (data.result.data && data.result.data.length > 0) {
              var item = data.result.data[0];
              var initKey = 'eparchyCode';
              if (item.gridId && item.gridId != '00' ) {
                initKey = 'gridName';
              } else if (item.areaCode && item.areaCode != '00' ) {
                initKey = 'areaName';
              }  else if (item.eparchyCode && item.eparchyCode != '00' ) {
                initKey = 'eparchyName';
              }

              var Xdata = data.result.data.map(row => {
                return row[initKey]
              })
              var Vdata = data.result.data.map(row => {
                return row['lineRate']
              })
              
              this.echartBarData =  {
                xdata: Xdata,
                vdata: Vdata
              }


            } else {
              this.echartBarData =  {
                xdata: [],
                vdata: []
              }
            } 
          }
            
          
      });
    },
     tagtabActive(row) {
      this.diatagActive = row.id
      console.log(this.diatagActive)
    },
     // 小区资源 tag
    tagPclick(row, type) {
      this.tagactive = row.id
      this.tagactiveType = row.type
      if (type == 'p') {
        this.parentTagactive = row.id
      }
    },
    piecirInit(val1, val2) {
      let echartData = [
        {
          name: '进线',
          value: val1 || 0
        },
        {
          name: '未进线',
          value: val2 || 0
        }
      ]
      this.pieOption.series[0].data = echartData
      this.chartpiecr.setOption(this.pieOption, true)
    },
    bhqsClick(val) {
      this.bhqsState = val
    },
    dialogDetail () {
      var zyxqActionType = JSON.parse(JSON.stringify(this.zyxqActionType))
      this.$emit('dialogDetailFn', zyxqActionType)
    }
  }
}
</script>

<style lang="css" scoped>
@import url('../css/component.scss');
</style>
