<template>
  <div class='wrapper' style="text-align: center">
    <div class="inner" style="text-align: center;margin: auto">
      <div class='chart' :id='"chart"+title' style="height: 130px;width: 130px"></div>
      <div class="btm"></div>
    </div>
  </div>
</template>

<script>
import echarts from 'echarts';
import 'echarts-liquidfill';
export default {
  name: "waterBall",
  props: {
    argsData: Object,
    title: String,
    propData: Number
  },
  data() {
    return {}
  },
  watch: {
    propData(val) {
      this.$nextTick(() => {
        // alert (parseFloat(val)/100.0)
        this.drawChart(parseFloat(val) / 100.0)

      })
    }
  },
  mounted() {
  },
  methods: {
    drawChart(data) {
      console.log(data)
      // 基于准备好的dom，初始化echarts实例
      const chartDom = document.getElementById('chart' + this.title);
      const myChart = echarts.init(chartDom);
      var option = {
        // 提示框组件
        tooltip: {
          trigger: 'item', // 触发类型, 数据项图形触发，主要在散点图，饼图等无类目轴的图表中使用。
          textStyle: {
            color: '#fff' // 文字颜色
          },
          // 提示框浮层内容格式器，支持字符串模板和回调函数两种形式
          // 水球图: {a}（系列名称），{b}（无），{c}（数值）
          // 使用函数模板   传入的数据值 -> value: number|Array,
          formatter: function (value) {
            // return value.seriesName + ': ' + value.data * 100 + '%'
          }
        },
        series: [{
          type: 'liquidFill',
          name: '', // 系列名称，用于tooltip的显示，legend 的图例筛选
          radius: '80%', // 水球图的半径
          center: ['50%', '60%'], // 水球图的中心（圆心）坐标，数组的第一项是横坐标，第二项是纵坐标
          // 水填充图的形状 circle 默认圆形  rect 圆角矩形  triangle 三角形
          // diamond 菱形  pin 水滴状 arrow 箭头状  还可以是svg的path
          shape: 'circle',
          phase: 0, // 波的相位弧度 不设置  默认自动
          direction: 'right', // 波浪移动的速度  两个参数  left 从右往左 right 从左往右
          outline: {
            show: true,
            borderDistance: 0, // 边框线与图表的距离 数字
            itemStyle: {
              opacity: 1, // 边框的透明度   默认为 1
              borderWidth: 1, // 边框的宽度
              shadowBlur: 1, // 边框的阴影范围 一旦设置了内外都有阴影
              shadowColor: '#fff', // 边框的阴影颜色,
              borderColor: '#41dcd8' // 边框颜色
            }
          },
          // 图形样式
          itemStyle: {
            color: '#34FFBA', // 水球显示的背景颜色
            opacity: 0.5, // 波浪的透明度
            shadowBlur: 10 // 波浪的阴影范围
          },
          backgroundStyle: {
            color: '#86E4F5', // 水球未到的背景颜色
            opacity: 0.5
          },
          // 图形的高亮样式
          emphasis: {
            itemStyle: {
              opacity: 0.8 // 鼠标经过波浪颜色的透明度
            }
          },
          // 图形上的文本标签
          label: {
            normal: {
              fontSize: 14,
              fontWeight: 400,
              color: '#fff',
              formatter: function (value) {
                return (value.data * 100).toFixed(2) + '%'
              }
            }

          },
          data: [data] // 系列中的数据内容数组
        }]
      };
      option && myChart.setOption(option);
    }
  }
}
</script>

<style scoped>
</style>