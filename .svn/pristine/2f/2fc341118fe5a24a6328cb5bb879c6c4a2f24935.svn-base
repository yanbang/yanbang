<!--宽带-宽带运营 -->
<template>
  <div class="contentbox">
    <Header title="浙江联通网络智慧中台" subtitle="-宽带"></Header>
    <div class="topmenudiv">
      <a class="topmenu" @click="goToPage('/kd_ghjs')">规划建设</a>
      <a class="topmenu" @click="goToPage('/kd_kdjf')">宽带交付</a>
      <a class="topmenuac" @click="goToPage('/kd_kdyy')">宽带运营</a>
      <a class="topmenu"  >网业协同</a>
    </div>
    <div class="contentbody">
      <!-- 左 -->
      <div class="leftbox flex colflex">
        <!-- 左1 -->

        <div class="box-item flex colflex ">
          <div class="item-title titlefont clearfix">
            <span @click="isShow2_1 = !isShow2_1" style="cursor: pointer;">光衰合格率</span>
            <!-- <span class="zdmore pull-right" @click="xiangqingxianshi()"> <span class="el-icon-more"></span></span> -->
          </div>

          <div class="flex">
            <div class="chartbox" ref="zuo1echart1" style="height:16vh; width: 38%;margin-left: 10%; "></div>

            <div style="height:14vh; width: 38%;padding-top:4vh;margin-right: 10%; ">
              <div class="lgwbox">
                <div class="lgwnum">
                  {{ dagedata.gsHgRateHb }}<img src="@/assets/zj/bg_zj3_di4.png" alt="" srcset="" height="30px" />
                </div>
                <div class="lgwfont">环比提升</div>
                <div class="lgwimg">
                  <img src="@/assets/zj/bg_zj4_11.png" alt="" srcset="" />
                </div>
              </div>
            </div>
          </div>
          <div class="flex" style="margin: 2vh 0;">
            <div class="flex1">
              <div class="lgwbox">
                <div class="lgwnum">{{ dagedata.dgsNum }}</div>
                <div class="lgwfont">光衰质差数</div>
                <div class="lgwimg">
                  <img src="@/assets/zj/bg_zj3_di1.png" alt="" srcset="" />
                </div>
              </div>
            </div>

            <div class="flex1">
              <div class="lgwbox">
                <div class="lgwnum">{{ dagedata.zcNum }}</div>
                <div class="lgwfont">大光衰质差数</div>
                <div class="lgwimg">
                  <img src="@/assets/zj/bg_zj3_di2.png" alt="" srcset="" />
                </div>
              </div>
            </div>
          </div>
          <div class="flex" style="margin: 2vh 0;">
            <div class="flex1">
              <div class="lgwbox">
                <div class="lgwnum">{{ dagedata.pdNum }}</div>
                <div class="lgwfont">派单数</div>
                <div class="lgwimg">
                  <img src="@/assets/zj/bg_zj3_di1.png" alt="" srcset="" />
                </div>
              </div>
            </div>

            <div class="flex1">
              <div class="lgwbox">
                <div class="lgwnum">{{ dagedata.zzNum }}</div>
                <div class="lgwfont">本月整治数</div>
                <div class="lgwimg">
                  <img src="@/assets/zj/bg_zj3_di2.png" alt="" srcset="" />
                </div>
              </div>
            </div>
          </div>
        </div>
        <!-- 左2 -->
        <div class="box-item flex colflex">
          <div class="item-title titlefont">
            <span>资源稽核码化</span>
          </div>

          <div class="flex1" style="margin: 2vh 0">
            
            <div class="navBtns">
              <div
                class="btn"
                v-for="(v, k) in ygpjdata"
                :key="k"
                :class="{ on: ygpjindex == k }"
                @click="indexchange('ygpjslide', k)"
              >
                {{ v }}
              </div>
            </div>
            <div class="indicatorTrendChart" style="height:16vh">
              <swiper
                :options="indicatorDisplayOption"
                ref="ygpjslide"
                @slideChangeTransitionEnd="slidechange('ygpjslide')"
              >
                <swiper-slide class="slideItem">
                  <div class="chartbox" ref="zuo2echart1" style=" height: 28vh; width: 26vw;"></div>
                </swiper-slide>
                <swiper-slide class="slideItem">
                  <div class="chartbox" ref="zuo2echart2" style=" height: 28vh;width: 26vw;"></div>
                </swiper-slide>
                <swiper-slide class="slideItem">
                  <div class="chartbox" ref="zuo2echart3" style=" height: 28vh;width: 26vw;"></div>
                </swiper-slide>
                <swiper-slide class="slideItem">
                  <div class="chartbox" ref="zuo2echart4" style=" height: 28vh;width: 26vw;"></div>
                </swiper-slide>
                <swiper-slide class="slideItem">
                  <div class="chartbox" ref="zuo2echart5" style=" height: 28vh;width: 26vw;"></div>
                </swiper-slide>
              </swiper>
            </div>
           
            
            
            
            <!-- <div class="flex rowttabs2">
               
              <swiper
                :options="indicatorDisplayOption"
                ref="fxpj2slide"
                @slideChangeTransitionEnd="slidechange('fxpj2slide')"
              >  
               
                  <swiper-slide class="slideItem">
                    <div class="rowttabs-item"   >
                      <a class="baise">扫码一致率</a>
                    </div>
                    <div class="flex" v-show="rowttabStatus4 == 1">
                      <div class="chartbox" ref="zuo2echart1" style=" height: 28vh; width: 26vw;"></div>
                    </div>
                  </swiper-slide >
                  
                  <swiper-slide class="slideItem">
                    <div class="rowttabs-item"  >
                      <a class="baise">每分光器端口地址数</a>
                    </div>
                    <div class="flex"  >
                      <div class="chartbox" ref="zuo2echart2" style=" height: 28vh;width: 26vw;"></div>
                    </div>
                  </swiper-slide>
                  
                  <swiper-slide class="slideItem">
                    <div class="rowttabs-item"   >
                      <a class="baise">光纤盘地址数<3</a>
                    </div>
                    <div class="flex"  >
                      <div class="chartbox" ref="zuo2echart3" style=" height: 28vh;width: 26vw;"></div>
                    </div>
                  </swiper-slide>
                  
                  <swiper-slide  class="slideItem">
                    <div class="rowttabs-item"  >
                      <a class="baise">光纤盘GIS打点准确率</a>
                    </div>
                    <div class="flex"  >
                      <div class="chartbox" ref="zuo2echart4" style=" height: 28vh;width: 26vw;"></div>
                    </div>
                  </swiper-slide class="slideItem">
                  
                  <swiper-slide class="slideItem">
                    <div class="rowttabs-item"   >
                      <a class="baise">光纤盘0地址</a>
                    </div>
                    <div class="flex"  >
                      <div class="chartbox" ref="zuo2echart5" style=" height: 28vh;width: 26vw;"></div>
                    </div>
                  </swiper-slide>
              </swiper>

              
            </div> -->

           
          
            
            
           
          </div>
        </div>
      </div>
      <!-- 中 -->
      <div class="centerbox flex colflex">
        <div class="yujingimg" @click="xiangqing0 = true">
          <a>运营预警</a>
        </div>
        <div style="position: absolute;top:63vh;left: 40px;z-index: 100;padding: 10px;z-index: 1000;"></div>

        <div class="zjmap">
          <zjmap @changemap="changeMapFn" ref="zjmapDom"></zjmap>
        </div>

        <div class="mapxia">
          <div class="mapxia1" ref="mapxia1" v-show="isShow2_1"></div>
          <div class="mapxia2" ref="mapxia2" v-show="isShow2_2"></div>
          <div class="mapxia2" ref="mapxia3" v-show="isShow2_3"></div>
          <div class="mapxia2" ref="mapxia4" v-show="isShow2_4"></div>
        </div>
      </div>
      <!-- 右 -->
      <div class="rightbox flex colflex">
        <!-- 右1 -->
        <div class="box-item flex colflex flex1">
          <div class="item-title titlefont">
            <span>OLT在服率</span>
            <!-- <span v-show="mapLevel > 2" style="margin-left: 10px">(市级)</span> -->
          </div>

          <div class="flex">
            <div class="chartbox" ref="you1echart1" style="height:14vh; width: 38%; margin-left: 10%;"></div>
            <div style="height:14vh; width: 38%;padding-top: 20px;margin-right: 10%; ">
              <div class="lgwbox">
                <div class="lgwnum">
                  {{ dagedata2.zflHb }} <img src="@/assets/zj/bg_zj3_di4.png" alt="" srcset="" height="30px" />
                </div>
                <div class="lgwfont">环比提升</div>
                <div class="lgwimg">
                  <img src="@/assets/zj/bg_zj4_11.png" alt="" srcset="" />
                </div>
              </div>
            </div>
          </div>
          <div class="flex" style="margin: 2vh 0;">
            <div class="flex1">
              <div class="lgwbox">
                <div class="lgwnum">{{ dagedata2.tfs }}</div>
                <div class="lgwfont">退服数</div>
                <div class="lgwimg">
                  <img src="@/assets/zj/bg_zj3_di1.png" alt="" srcset="" />
                </div>
              </div>
            </div>

            <div class="flex1">
              <div class="lgwbox">
                <div class="lgwnum">{{ dagedata2.pds }}</div>
                <div class="lgwfont">派单数</div>
                <div class="lgwimg">
                  <img src="@/assets/zj/bg_zj3_di2.png" alt="" srcset="" />
                </div>
              </div>
            </div>

            <div class="flex1">
              <div class="lgwbox">
                <div class="lgwnum">{{ dagedata2.zzs }}</div>
                <div class="lgwfont">本月整治数</div>
                <div class="lgwimg">
                  <img src="@/assets/zj/bg_zj3_di3.png" alt="" srcset="" />
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- 右2 -->
        <div class="box-item flex colflex flex1">
          <div class="item-title titlefont">
            <span>测速情况</span>
            <span class="cesubtn" @click="cesuxq = true">start</span>
          </div>

          <div class="flex" style="margin: 2vh 0;">
            <div class="flex1">
              <div class="lgwbox">
                <div class="lgwnum">{{ dagedata3.csHgRate }}%</div>
                <div class="lgwfont">测速合格率</div>
                <div class="lgwimg" style="margin-top: -40px;">
                  <img src="@/assets/zj/bg_zj4_12.png" alt="" srcset="" />
                </div>
              </div>
            </div>

            <div class="flex1">
              <div class="lgwbox">
                <div class="lgwnum">{{ dagedata3.qzCsHgRate }}%</div>
                <div class="lgwfont">千兆用户合格率</div>
                <div class="lgwimg" style="margin-top: -40px;">
                  <img src="@/assets/zj/bg_zj4_12.png" alt="" srcset="" />
                </div>
              </div>
            </div>
            <div class="flex1">
              <div class="lgwbox" @click="xiangqing2 = true">
                <div class="lgwnum">{{ dagedata3.zdKNum }}</div>
                <div class="lgwfont">终端款数</div>
                <div class="lgwimg" style="margin-top: -40px;">
                  <img src="@/assets/zj/bg_zj4_12.png" alt="" srcset="" />
                </div>
              </div>
            </div>
            <div class="flex1">
              <div class="lgwbox">
                <div class="lgwnum">{{ dagedata3.pfGdNum }}</div>
                <div class="lgwfont">派发工单数</div>
                <div class="lgwimg" style="margin-top: -40px;">
                  <img src="@/assets/zj/bg_zj4_12.png" alt="" srcset="" />
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- 右3 -->
        <div class="box-item flex colflex">
          <div class="item-title titlefont">
            <span>一键诊断</span>
          </div>

          <div class="flex" style="margin:4vh 0;">
            <div class="flex1" style="height:14vh; width: 33%; padding-top:40px;">
              <div class="lgwbox">
                <div class="lgwnum" style="font-size: 28px; color: #ffffff; z-index: 10;">{{ dagedata4.zds }}</div>
                <div class="lgwfont">诊断数</div>
                <div class="lgwimg" style="margin-top: -80px;">
                  <img src="@/assets/zj/bg_zj4_13.png" alt="" srcset="" />
                </div>
              </div>
            </div>

            <div class="flex1" style="height:14vh; width: 33%; padding-top:20px;">
              <div class="lgwbox">
                <div class="lgwnum">
                  {{ dagedata4.zdsHb }} <img src="@/assets/zj/bg_zj3_di4.png" alt="" srcset="" height="30px" />
                </div>
                <div class="lgwfont">环比提升</div>
                <div class="lgwimg">
                  <img src="@/assets/zj/bg_zj4_11.png" alt="" srcset="" />
                </div>
              </div>
            </div>

            <!-- <div class="flex1" style="height:14vh; width: 33%; ">
              <div class="chartbox" ref="you3echart1" ></div>
            </div> -->
          </div>

          <div class="flex" style="margin: 2vh 0;">
            <div class="flex1">
              <div class="lgwbox">
                <div class="lgwnum" style="z-index: 100;">{{ dagedata4.khZds }}</div>
                <div class="lgwfont">客户诊断</div>
                <div class="lgwimg" style="margin-top: -70px;">
                  <img src="@/assets/zj/bg_zj4_14.png" alt="" srcset="" />
                </div>
              </div>
            </div>

            <div class="flex1">
              <div class="lgwbox">
                <div class="lgwnum" style="z-index: 100;">{{ dagedata4.KfZds }}</div>
                <div class="lgwfont">客服诊断</div>
                <div class="lgwimg" style="margin-top: -70px;">
                  <img src="@/assets/zj/bg_zj4_14.png" alt="" srcset="" />
                </div>
              </div>
            </div>

            <div class="flex1">
              <div class="lgwbox">
                <div class="lgwnum" style="z-index: 100;">{{ dagedata4.yytZds }}</div>
                <div class="lgwfont">营业厅诊断</div>
                <div class="lgwimg" style="margin-top: -70px;">
                  <img src="@/assets/zj/bg_zj4_14.png" alt="" srcset="" />
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <el-dialog :visible.sync="cesuxq" width="1150px" :modal-append-to-body="false">
      <div class="dialogCon">
        <div class="dialogTitle">
          <div class="left">一键测速</div>
        </div>
        <div class="dialogTableBg" style="height: 520px;">
          <div class="flex" style="margin:10px 0px 0px 300px">
            <el-form ref="form" label-width="80px" :inline="true">
              <el-form-item label="">
                <el-input placeholder="请输入宽带账号" style="width: 20rem;" v-model="ipdizhi"></el-input>
              </el-form-item>

              <el-form-item>
                <el-button type="primary" @click="csff()">测速</el-button>
              </el-form-item>
            </el-form>
          </div>
          <div class=" flex" style="position: relative;">
            <div
              style="
            border:42px solid #00143f; 
            border-radius:150px;
             width:300px; 
             height: 300px;
             position: absolute;
             left:57px;
             top:73px;
             z-index: 100;"
              v-show="quanquan"
            ></div>
            <div
              style="
             background: #00143f;
             width:80px; 
             height: 40px;
             position: absolute;
             left:427px;
             top:83px;
             z-index: 100;"
              v-show="quanquan"
            ></div>
            <div
              style="
             background: #00143f;
             width:80px; 
             height: 40px;
             position: absolute;
             left:427px;
             top:203px;
             z-index: 100;"
              v-show="quanquan"
            ></div>

            <video src="~@/assets/zj/cesudonghua2.mp4" autoplay loop v-show="cesudonghua"></video>
          </div>

          <div
            class=" flex1"
            style="font-size:16px;margin: 20px 150px 0px 200px;text-align:center;"
            v-show="cesujieguo"
          >
            <dl>
              <dd class="cesudd">
                宽带账号：<label style="color: aqua;">{{ ipdizhi }}</label>
              </dd>
              <dd class="cesudd">
                是否成功：<label style="color: #05f588;">
                  <img src="@/assets/zj/tubiao/正确.png" alt="" srcset="" style="width: 30px;" />成功</label
                >
              </dd>
              <dd class="cesudd">
                测速IP：<label style="color: aqua;">{{ cesuData.pppoeIP }}</label>
              </dd>
              <dd></dd>
              <dd class="cesudd">
                当前下载速率：<label style="color: aqua;">{{ cesuData.cspeed }}</label
                >Mb
              </dd>
              <dd class="cesudd">
                平均下载速率：<label style="color: aqua;">{{ cesuData.aspeed }}</label
                >Mb
              </dd>
              <dd class="cesudd">
                用户签约速率：<label style="color: aqua;">{{ cesuData.bspeed }}</label
                >Mb
              </dd>
              <dd class="cesudd">
                最大下载速率：<label style="color: aqua;">{{ cesuData.maxspeed }}</label
                >Mb
              </dd>
              <dd class="cesudd">
                开始下载时间：<label style="color: aqua;">{{ cesuData.starttime }}</label>
              </dd>
              <dd class="cesudd">
                结束下载时间：<label style="color: aqua;">{{ cesuData.endtime }}</label>
              </dd>
              <dd></dd>
              <dd class="cesudd">
                诊断状态：<label style="color: aqua;">{{ cesuData.diagnosticsState }}</label>
              </dd>
              <dd class="cesudd">
                测速模式：<label style="color: aqua;">{{ cesuData.testMode }}</label>
              </dd>
            </dl>
          </div>
        </div>
      </div>
    </el-dialog>

    <el-dialog :visible.sync="xiangqing2" width="75%" :modal-append-to-body="false">
      <div class="dialogCon">
        <div class="dialogTitle">
          <div class="left">终端款数详情</div>
        </div>
        <div class="dialogTableBg">
          <el-table :data="tableData1">
            <el-table-column
              v-for="(col, index) in tcolums1"
              :key="index"
              :prop="col.filed"
              :label="col.title"
              :width="col.width || ''"
              :sortable="col.sortable || false"
              show-overflow-tooltip
            >
            </el-table-column>
          </el-table>
        </div>
      </div>
    </el-dialog>

    <el-dialog :visible.sync="xiangqing0" width="75%" :modal-append-to-body="false">
      <el-dialog width="55%" title="" :visible.sync="zidingyi" :modal-append-to-body="false">
        <div style="margin: 30px 30px 0px 30px; height: 430px;">
          <el-form ref="form2" label-width="80px">
            <el-form-item label="指标名称">
              <el-input size="small"></el-input>
            </el-form-item>
            <el-form-item label="指标值">
              <el-input size="small" type="textarea"></el-input>
            </el-form-item>

            <el-form-item>
              <el-button type="primary" @click="zidingyi = false" size="small">提交</el-button>
              <el-button @click="zidingyi = false" type="primary" size="small">取消</el-button>
            </el-form-item>
          </el-form>
        </div>
      </el-dialog>
      <div class="dialogCon">
        <div class="dialogTitle">
          <div class="left">运营预警</div>
          <a style="color: #a1d1ff; margin-right:500px;" @click="zidingyi = true">自定义预警指标</a>
        </div>
        <div class="dialogTableBg">
          <div class="rowttabs" style="top:30px; right: 100px;">
            <span class="rowttabs-item" :class="{ active: dialogtabs == '1' }" @click="dialogtabsClick('1')"
              >扫码一致率</span
            >
            <span class="rowttabs-item" :class="{ active: dialogtabs == '2' }" @click="dialogtabsClick('2')"
              >测速合格率</span
            >
            <span class="rowttabs-item" :class="{ active: dialogtabs == '3' }" @click="dialogtabsClick('3')"
              >光衰合格率</span
            >
          </div>
          <div class="flex1" v-show="dialogtabs == 1">
            <el-form :inline="true">
              <el-form-item label="地市">
                <MyCity v-model="provAndCity" />               
              </el-form-item>
              <el-form-item label="开始时间">
                <el-date-picker
                  value-format="yyyy-MM-dd HH:mm:ss"
                  size="mini"
                  v-model="startTime"
                  type="datetime"
                  placeholder="选择日期时间"
                >
                </el-date-picker>
              </el-form-item>
              <el-form-item label="结束时间">
                <el-date-picker
                  value-format="yyyy-MM-dd HH:mm:ss"
                  size="mini"
                  v-model="endTime"
                  type="datetime"
                  placeholder="选择日期时间"
                >
                </el-date-picker>
              </el-form-item>
              <el-form-item>
                <el-button type="primary" @click="cxform0_1()" size="mini">查询</el-button>
              </el-form-item>
            </el-form>
            <el-table :data="tableData0_1">
              <el-table-column
                v-for="(col, index) in tcolums0_1"
                :key="index"
                :prop="col.filed"
                :label="col.title"
                :width="col.width || ''"
                :sortable="col.sortable || false"
                show-overflow-tooltip
              >
              </el-table-column>
            </el-table>
          </div>
          <div class="flex1" v-show="dialogtabs == 2">
            <el-form :inline="true">
              <el-form-item label="地市">
                <MyCity v-model="provAndCity" />               
              </el-form-item>
              <el-form-item label="开始时间">
                <el-date-picker
                  value-format="yyyy-MM-dd HH:mm:ss"
                  size="mini"
                  v-model="startTime"
                  type="datetime"
                  placeholder="选择日期时间"
                >
                </el-date-picker>
              </el-form-item>
              <el-form-item label="结束时间">
                <el-date-picker
                  value-format="yyyy-MM-dd HH:mm:ss"
                  size="mini"
                  v-model="endTime"
                  type="datetime"
                  placeholder="选择日期时间"
                >
                </el-date-picker>
              </el-form-item>
              <el-form-item>
                <el-button type="primary" @click="cxform0_2()" size="mini">查询</el-button>
              </el-form-item>
            </el-form>
            <el-table :data="tableData0_2">
              <el-table-column
                v-for="(col, index) in tcolums0_2"
                :key="index"
                :prop="col.filed"
                :label="col.title"
                :width="col.width || ''"
                :sortable="col.sortable || false"
                show-overflow-tooltip
              >
              </el-table-column>
            </el-table>
          </div>
          <div class="flex1" v-show="dialogtabs == 3">
            <el-form :inline="true">
              <el-form-item label="地市">
                <MyCity v-model="provAndCity" />               
              </el-form-item>
              <el-form-item label="开始时间">
                <el-date-picker
                  value-format="yyyy-MM-dd HH:mm:ss"
                  size="mini"
                  v-model="startTime"
                  type="datetime"
                  placeholder="选择日期时间"
                >
                </el-date-picker>
              </el-form-item>
              <el-form-item label="结束时间">
                <el-date-picker
                  value-format="yyyy-MM-dd HH:mm:ss"
                  size="mini"
                  v-model="endTime"
                  type="datetime"
                  placeholder="选择日期时间"
                >
                </el-date-picker>
              </el-form-item>
              <el-form-item>
                <el-button type="primary" @click="cxform0_1()" size="mini">查询</el-button>
              </el-form-item>
            </el-form>
            <el-table :data="tableData0_3">
              <el-table-column
                v-for="(col, index) in tcolums0_3"
                :key="index"
                :prop="col.filed"
                :label="col.title"
                :width="col.width || ''"
                :sortable="col.sortable || false"
                show-overflow-tooltip
              >
              </el-table-column>
            </el-table>
          </div>
        </div>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import Header from '@/components/resource_visual/header3'
import Footer from '@/components/resource_visual/footer'
import echarts_init from '../fu/echart_lines'
import vueSeamlessScroll from 'vue-seamless-scroll'
import waterPoloChart from '@/views/resource_visual/echarts_component/waterPoloChart'
import axios from 'axios'
// import store from 'store'
// import {
//   mapState
// } from 'vuex'
// import serviceApi from '@/api/network/wireless'
// var Qs = require('@/utils/qs.js')
// var _ = require('@/utils/lodash.js')
// import {
//   warnList
// } from '@/api/broadband/warn'

// var self = null
import 'swiper/swiper-bundle.css'
import { swiper, swiperSlide } from "vue-awesome-swiper";

import elementui from 'element-ui'
import echarts from 'echarts'
import MyCity from '@/components/citys.vue'
import zjmap from './sxmap.vue'
var self = null

function getRandom(start = 0.6, end = 1) {
  let num = Math.random() * (end - start) + start
  return num
}

export default {
  data() {
    return {
      indicatorDisplayOption: {
        autoplay: {
          disableOnInteraction: false,
          delay: 10000
        }
      },
      ygpjdata: ["扫码一致率", "每分光器端口地址数", "光纤盘地址数<3", "光纤盘GIS打点准确率", "光纤盘0地址"],
      ygpjindex: 0,

      startTime: '',
      endTime: '',
      zidingyi:false,
      smapdata: {},
      dagedata: {},
      dagedata2: {},
      dagedata3: {},
      dagedata4: {},
      dagedata5: {},
      tableData1: [],
      tableData1_2: [],
      tableData1_3: [],
      tableData1_4: [],
      tableData1_5: [],
      tableData1_6: [],

      isShow2_: false,
      isShow2_3: false,
      quanquan: true,

      xiangqing0: false,
      tableData0_1: [],
      tableData0_2: [],
      tableData0_3: [],
      tcolums0_1: [
        {
          title: '地市',
          filed: 'city_name'
        },
        {
          title: '扫码一致数',
          filed: 'sm_yzs',
          width: 'auto',
          sortable: true
        },
        {
          title: '扫码数',
          filed: 'sm_num',
          width: 'auto',
          sortable: true
        },
        {
          title: '扫码一致率',
          filed: 'sm_yzl',
          width: 'auto',
          sortable: true
        }
      ],
      tcolums0_2: [
        {
          title: '地市',
          filed: 'district_name'
        },
        {
          title: '测速合格数',
          filed: 'hg_num',
          width: 'auto',
          sortable: true
        },
        {
          title: '测速数',
          filed: 'cs_num',
          width: 'auto',
          sortable: true
        },
        {
          title: '测速合格率',
          filed: 'cshg_rate',
          width: 'auto',
          sortable: true
        }
      ],
      tcolums0_3: [
        {
          title: '地市',
          filed: 'city_name'
        },
        {
          title: '光衰合格数',
          filed: 'gshg_num',
          width: 'auto',
          sortable: true
        },
        {
          title: '光衰数',
          filed: 'gs_num',
          width: 'auto',
          sortable: true
        },
        {
          title: '光衰合格率',
          filed: 'gshg_rate',
          width: 'auto',
          sortable: true
        }
      ],

      tcolums1: [
        {
          title: '终端型号',
          filed: 'device_model'
        },
        {
          title: '厂家',
          filed: 'vendor_name',
          width: 'auto',
          sortable: true
        },
        {
          title: '合格率',
          filed: 'hg_rate',
          width: 'auto',
          sortable: true
        }
      ],

      options: [
        {
          value: '选项1',
          label: '全省'
        },
        {
          value: '选项2',
          label: '杭州市'
        },
        {
          value: '选项3',
          label: '湖州市'
        },
        {
          value: '选项4',
          label: '嘉兴市'
        },
        {
          value: '选项5',
          label: '金华市'
        },
        {
          value: '选项6',
          label: '丽水市'
        },
        {
          value: '选项7',
          label: '宁波市'
        },
        {
          value: '选项8',
          label: '衢州市'
        },
        {
          value: '选项9',
          label: '绍兴市'
        },
        {
          value: '选项10',
          label: '台州市'
        },
        {
          value: '选项11',
          label: '温州市'
        },
        {
          value: '选项12',
          label: '舟山市'
        }
      ],
      value: '',
      options2: [
        {
          value2: '选项1',
          label: '上城区'
        },
        {
          value2: '选项2',
          label: '下城区'
        },
        {
          value2: '选项3',
          label: '西湖区'
        },
        {
          value2: '选项4',
          label: '江干区'
        },
        {
          value2: '选项5',
          label: '拱墅区'
        },
        {
          value2: '选项6',
          label: '滨江区'
        },
        {
          value2: '选项7',
          label: '萧山区'
        },
        {
          value2: '选项8',
          label: '余杭区'
        },
        {
          value2: '选项9',
          label: '临安区'
        },
        {
          value2: '选项10',
          label: '富阳区'
        }
      ],
      value2: '',
      ipdizhi: '',
      cesujieguo: false,
      cesudonghua: false,
      cesuxq: false,
      xiangqing1: false,
      xiangqing2: false,
      xiangqing3: false,
      xiangqing1_1: false,
      isShow2_1: true,
      isShow2_2: true,
      isShow2_3: true,
      isShow2_4: true,
      isShow2_xian: false,

      rowttabStatus: '1',
      rowttabStatus2: '1',
      rowttabStatus3: '1',
      rowttabStatus4: '1',
      dialogtabs: '1',
      dialogtabs2: '1',
      cityName: '全省',
      hoverCityName: '',
      cesuData: {},

      cityList: [
        {
          value: 96,
          name: '杭州市',
          label: 'hangzhou',
          random: 1
        },
        {
          value: 92,
          name: '湖州市',
          label: 'huzhou',
          random: getRandom()
        },
        {
          value: 87,
          name: '嘉兴市',
          label: 'jiaxing',
          random: getRandom()
        },
        {
          value: 85,
          name: '金华市',
          label: 'jinhua',
          random: getRandom()
        },
        {
          value: 82,
          name: '丽水市',
          label: 'lishui',
          random: getRandom()
        },
        {
          value: 79,
          name: '宁波市',
          label: 'ningbo',
          random: getRandom()
        },
        {
          value: 72,
          name: '衢州市',
          label: 'quzhou',
          random: getRandom()
        },
        {
          value: 68,
          name: '绍兴市',
          label: 'shaoxing',
          random: getRandom()
        },
        {
          value: 61,
          name: '台州市',
          label: 'taizhou',
          random: getRandom()
        },
        {
          value: 53,
          name: '温州市',
          label: 'wenzhou',
          random: getRandom()
        },
        {
          value: 47,
          name: '舟山市',
          label: 'zhoushan',
          random: getRandom()
        }
      ],

      isDialogShow: false,

    }
  },
  components: {
    Header,
    Footer,
    vueSeamlessScroll,
    zjmap,
    swiper,
    swiperSlide,
    MyCity
  },
  created() {
    self = this
  },
  mounted() {
   
    this.mapxia1echarts()
    this.mapxia2echarts()
  },
  watch: {
    // cityName(val) {
    //   this.getZJMapData();
    // }
  },
  computed: {},

  methods: {
    csff() {
      this.cesudonghua = true
      this.cesujieguo = false
      this.getcesuData()
    },
    initService() {
      window.setTimeout(() => {
        this.getZJMapData()

        this.getzuo1echart1Data()

        this.getzuo2echart1Data()
        this.getzuo2echart2Data()
        this.getzuo2echart3Data()
        this.getzuo2echart4Data()
        this.getzuo2echart5Data()

        this.getyou1echart1Data()
        // this.getyou3echart1Data()

        this.getyou2Data()
        this.getyou3Data()

        this.getxiangqing2Data()

        this.moretableData0_1()
        this.moretableData0_2()
        this.moretableData0_3()
      }, 500)
    },
    changeMapFn(data) {
      this.smapdata = data
      this.initService()
    },

    rowttabsClick(type) {
      this.rowttabStatus = type
    },
    rowttabsClick2(type) {
      this.rowttabStatus2 = type
    },
    rowttabsClick3(type) {
      this.rowttabStatus3 = type
    },
    rowttabsClick4(type) {
      this.rowttabStatus4 = type
    },
    dialogtabsClick(type) {
      this.dialogtabs = type
    },
    dialogtabs2Click(type) {
      this.dialogtabs2 = type
    },
    goToPage(url) {
      if (!url) return
      this.$router.push(url)
    },
    getZJMapData() {

        let that = this
        that.provAndCity = {
          province: this.smapdata.cityName, 
          city: this.smapdata.areaName
        }
        
        if (this.smapdata.level == '3') {
         return  
        }
        let changerucan = {
          "cityName": this.smapdata.cityName
        }
        axios.post('/api/kdyyCon/getKdyyMapData', changerucan)
          .then(function(response) {
            var dalist = response.data
            let arrlist = []
            let arrlist2 = []

            var kdyhs = []
            var qzyhs = []
            dalist.forEach((item) => {
              kdyhs = {
                name: item.city_name,
                value: item.xj_xq_num
              };
              arrlist.push(kdyhs);
              qzyhs = {
                name: item.city_name,
                value: item.gpon_num
              };
              arrlist2.push(qzyhs); 
             
            });
            
            var datac = {
              arrlist: arrlist,
              arrlist2: arrlist2,
            };

            self.$refs['zjmapDom'].renderEcahrtmap(datac)
            return;
          })
          .catch(function(error) {
            console.log(error);
          });



      },

    getzuo1echart1Data() {
      let that = this
      
      var params = {
        cityName: this.smapdata.cityName
        // "areaName": this.smapdata.areaName,
      }

      axios.post('/api/kdyyCon/getGshglData', params)
        .then(function(response) {
          let result = response.data

          that.dagedata = result

          var value = result.gsHgRate

          const option = {
            title: {
              text: value + '%',
              subtext: '光衰合格率',
              x: 'center',
              y: '30%',
              textStyle: {
                fontWeight: 'bold',
                color: '#fdfeff',
                fontSize: 22
              },
              subtextStyle: {
                fontSize: 16,
                color: '#ff8c00'
              }
            },
            series: [
              {
                type: 'liquidFill',
                radius: '78.1%',
                center: ['50%', '50%'],
                label: {
                  normal: {
                    show: false,
                    textStyle: {
                      color: '#ffffff',
                      insideColor: '#ff8c00',
                      fontSize: 20
                    }
                  }
                },
                color: [
                  {
                    type: 'linear',
                    x: 0,
                    y: 0,
                    x2: 0,
                    y2: 1,
                    colorStops: [
                      {
                        offset: 0,
                        color: '#028b95' // 0% 处的颜色
                      },
                      {
                        offset: 1,
                        color: '#0b5881' // 100% 处的颜色
                      }
                    ]
                  }
                ],
                data: [value, value], // data个数代表波浪数
                backgroundStyle: {
                  borderWidth: 1,
                  borderColor: 'rgba(55, 211, 255, 0.42)',
                  color: 'rgba(12, 41, 49, 0.6)'
                },

                outline: {
                  show: false
                }
              }
            ]
          }

          const dom = that.$refs.zuo1echart1
          const echart = echarts.init(dom)
          echart.setOption(option)
          window.addEventListener('resize', () => {
            echart.resize()
          })
        })
        .catch(function(error) {
          console.log(error)
        })
    },

    getzuo2echart1Data() {
      let that = this
      var params = {
        cityName: this.smapdata.cityName
        // "areaName": this.smapdata.areaName,
      }

      axios
        .post('/api/kdyyCon/getZyjhMhData', params)
        .then(function(response) {
          var arr = response.data
          //console.log(arr);
          var res = arr.reduce((res, v) => {
            Object.keys(v).forEach(key => {
              const value = v[key]
              if (res[key]) res[key].push(value)
              else res[key] = [value]
            })
            return res
          }, {})

          // console.log(res);

          const option = {
            grid: {
              left: '9%',
              top: '15%',
              right: '0%',
              bottom: '20%',
              containLabel: false // 这个啥？看下面
            },
            legend: {
              data: ['扫码一致率'],
              show: false,
              textStyle: {
                fontSize: '20px',
                fontFamily: 'MicrosoftYaHeiUI',
                color: '#FFFFFF'
              }
            },
            tooltip: {
              trigger: 'axis'
            },
            xAxis: [
              {
                type: 'category',
                axisTick: {
                  show: false
                },
                axisLine: {
                  show: false
                },
                axisLabel: {
                  show: true,
                  rotate: 0,
                  interval: 0,
                  textStyle: {
                    padding: [14, 0, 0, 0],
                    fontSize: 12,
                    color: 'rgba(255,255,255,0.5)'
                  }
                },

                // data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月'],
                data: res.city_name,
                axisPointer: {
                  type: 'shadow'
                }
              }
            ],
            yAxis: [
              {
                type: 'value',
                name: ' ',
                nameTextStyle: {
                  color: 'rgba(255,255,255,0.5)'
                },
                splitLine: {
                  show: false
                },
                axisLine: {
                  show: false
                },
                axisTick: {
                  show: false
                },

                splitArea: {
                  show: false
                },

                axisLabel: {
                  formatter: '{value}% ',
                  textStyle: {
                    color: 'rgba(255,255,255,0.5)'
                  }
                }
              }
            ],
            series: [
              {
                name: ' ',
                type: 'bar',
                barWidth: 10,
                // barGap:'50%',

                itemStyle: {
                  normal: {
                    //barBorderRadius: 5,
                    //渐变色
                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                      {
                        offset: 0,
                        color: '#01EAED'
                      },
                      {
                        offset: 0.5,
                        color: '#02C4DD'
                      },
                      {
                        offset: 1,
                        color: '#029ED9'
                      }
                    ])
                  }
                },
                label: {
                  normal: {
                    show: true,
                    position: 'top',
                    textStyle: {
                      color: '#01EAED',
                      fontSize: 14
                    }
                  }
                },
                data: res.sm_yzl
              }
            ]
          }
          const dom = that.$refs.zuo2echart1
          const echart = echarts.init(dom)
          echart.setOption(option)
          window.addEventListener('resize', () => {
            echart.resize()
          })
        })
        .catch(function(error) {
          console.log(error)
        })
    },
    getzuo2echart2Data() {
      let that = this
      var params = {
        cityName: this.smapdata.cityName
        // "areaName": this.smapdata.areaName,
      }

      axios.post('/api/kdyyCon/getZyjhFgqAddrData', params)
        .then(function(response) {
          var arr = response.data
         
          var res = arr.reduce((res, v) => {
            Object.keys(v).forEach(key => {
              const value = v[key]
              if (res[key]) res[key].push(value)
              else res[key] = [value]
            })
            return res
          }, {})

          

          const option = {
            grid: {
              left: '9%',
              top: '15%',
              right: '0%',
              bottom: '20%',
              containLabel: false // 这个啥？看下面
            },
            legend: {
              data: ['扫码一致率'],
              show: false,
              textStyle: {
                fontSize: '20px',
                fontFamily: 'MicrosoftYaHeiUI',
                color: '#FFFFFF'
              }
            },
            tooltip: {
              trigger: 'axis'
            },
            xAxis: [
              {
                type: 'category',
                axisTick: {
                  show: false
                },
                axisLine: {
                  show: false
                },
                axisLabel: {
                  show: true,
                  rotate: 0,
                  interval: 0,
                  textStyle: {
                    padding: [14, 0, 0, 0],
                    fontSize: 12,
                    color: 'rgba(255,255,255,0.5)'
                  }
                },

                // data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月'],
                data: res.city_name,
                axisPointer: {
                  type: 'shadow'
                }
              }
            ],
            yAxis: [
              {
                type: 'value',
                name: ' ',
                nameTextStyle: {
                  color: 'rgba(255,255,255,0.5)'
                },
                splitLine: {
                  show: false
                },
                axisLine: {
                  show: false
                },
                axisTick: {
                  show: false
                },

                splitArea: {
                  show: false
                },

                axisLabel: {
                  formatter: '{value} ',
                  textStyle: {
                    color: 'rgba(255,255,255,0.5)'
                  }
                }
              }
            ],
            series: [
              {
                name: ' ',
                type: 'bar',
                barWidth: 10,
                // barGap:'50%',

                itemStyle: {
                  normal: {
                    //barBorderRadius: 5,
                    //渐变色
                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                      {
                        offset: 0,
                        color: '#01EAED'
                      },
                      {
                        offset: 0.5,
                        color: '#02C4DD'
                      },
                      {
                        offset: 1,
                        color: '#029ED9'
                      }
                    ])
                  }
                },
                label: {
                  normal: {
                    show: true,
                    position: 'top',
                    textStyle: {
                      color: '#01EAED',
                      fontSize: 14
                    }
                  }
                },
                data: res.addr_num
              }
            ]
          }
          const dom = that.$refs.zuo2echart2
          const echart = echarts.init(dom)
          echart.setOption(option)
          window.addEventListener('resize', () => {
            echart.resize()
          })
        })
        .catch(function(error) {
          console.log(error)
        })
    },
    getzuo2echart3Data() {
      let that = this
      var params = {
        cityName: this.smapdata.cityName
        // "areaName": this.smapdata.areaName,
      }

      axios.post('/api/kdyyCon/getZyjhRgData', params)
        .then(function(response) {
          var arr = response.data
           
          var res = arr.reduce((res, v) => {
            Object.keys(v).forEach(key => {
              const value = v[key]
              if (res[key]) res[key].push(value)
              else res[key] = [value]
            })
            return res
          }, {})

          

          const option = {
            grid: {
              left: '9%',
              top: '15%',
              right: '0%',
              bottom: '20%',
              containLabel: false // 这个啥？看下面
            },
            legend: {
              data: ['扫码一致率'],
              show: false,
              textStyle: {
                fontSize: '20px',
                fontFamily: 'MicrosoftYaHeiUI',
                color: '#FFFFFF'
              }
            },
            tooltip: {
              trigger: 'axis'
            },
            xAxis: [
              {
                type: 'category',
                axisTick: {
                  show: false
                },
                axisLine: {
                  show: false
                },
                axisLabel: {
                  show: true,
                  rotate: 0,
                  interval: 0,
                  textStyle: {
                    padding: [14, 0, 0, 0],
                    fontSize: 12,
                    color: 'rgba(255,255,255,0.5)'
                  }
                },

                // data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月'],
                data: res.cityName,
                axisPointer: {
                  type: 'shadow'
                }
              }
            ],
            yAxis: [
              {
                type: 'value',
                name: ' ',
                nameTextStyle: {
                  color: 'rgba(255,255,255,0.5)'
                },
                splitLine: {
                  show: false
                },
                axisLine: {
                  show: false
                },
                axisTick: {
                  show: false
                },

                splitArea: {
                  show: false
                },

                axisLabel: {
                  formatter: '{value} ',
                  textStyle: {
                    color: 'rgba(255,255,255,0.5)'
                  }
                }
              }
            ],
            series: [
              {
                name: ' ',
                type: 'bar',
                barWidth: 10,
                // barGap:'50%',

                itemStyle: {
                  normal: {
                    //barBorderRadius: 5,
                    //渐变色
                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                      {
                        offset: 0,
                        color: '#01EAED'
                      },
                      {
                        offset: 0.5,
                        color: '#02C4DD'
                      },
                      {
                        offset: 1,
                        color: '#029ED9'
                      }
                    ])
                  }
                },
                label: {
                  normal: {
                    show: true,
                    position: 'top',
                    textStyle: {
                      color: '#01EAED',
                      fontSize: 14
                    }
                  }
                },
                data: res.gqpAddrNum
              }
            ]
          }
          const dom = that.$refs.zuo2echart3
          const echart = echarts.init(dom)
          echart.setOption(option)
          window.addEventListener('resize', () => {
            echart.resize()
          })
        })
        .catch(function(error) {
          console.log(error)
        })
    },
    getzuo2echart4Data() {
      let that = this
      var params = {
        cityName: this.smapdata.cityName
        // "areaName": this.smapdata.areaName,
      }

      axios
        .post('/api/kdyyCon/getZyjhJhData', params)
        .then(function(response) {
          var arr = response.data
          
          var res = arr.reduce((res, v) => {
            Object.keys(v).forEach(key => {
              const value = v[key]
              if (res[key]) res[key].push(value)
              else res[key] = [value]
            })
            return res
          }, {})

         

          const option = {
            grid: {
              left: '9%',
              top: '15%',
              right: '0%',
              bottom: '20%',
              containLabel: false // 这个啥？看下面
            },
            legend: {
              data: ['扫码一致率'],
              show: false,
              textStyle: {
                fontSize: '20px',
                fontFamily: 'MicrosoftYaHeiUI',
                color: '#FFFFFF'
              }
            },
            tooltip: {
              trigger: 'axis'
            },
            xAxis: [
              {
                type: 'category',
                axisTick: {
                  show: false
                },
                axisLine: {
                  show: false
                },
                axisLabel: {
                  show: true,
                  rotate: 0,
                  interval: 0,
                  textStyle: {
                    padding: [14, 0, 0, 0],
                    fontSize: 12,
                    color: 'rgba(255,255,255,0.5)'
                  }
                },

                // data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月'],
                data: res.cityName,
                axisPointer: {
                  type: 'shadow'
                }
              }
            ],
            yAxis: [
              {
                type: 'value',
                name: ' ',
                nameTextStyle: {
                  color: 'rgba(255,255,255,0.5)'
                },
                splitLine: {
                  show: false
                },
                axisLine: {
                  show: false
                },
                axisTick: {
                  show: false
                },

                splitArea: {
                  show: false
                },

                axisLabel: {
                  formatter: '{value}% ',
                  textStyle: {
                    color: 'rgba(255,255,255,0.5)'
                  }
                }
              }
            ],
            series: [
              {
                name: ' ',
                type: 'bar',
                barWidth: 10,
                // barGap:'50%',

                itemStyle: {
                  normal: {
                    //barBorderRadius: 5,
                    //渐变色
                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                      {
                        offset: 0,
                        color: '#01EAED'
                      },
                      {
                        offset: 0.5,
                        color: '#02C4DD'
                      },
                      {
                        offset: 1,
                        color: '#029ED9'
                      }
                    ])
                  }
                },
                label: {
                  normal: {
                    show: true,
                    position: 'top',
                    textStyle: {
                      color: '#01EAED',
                      fontSize: 14
                    }
                  }
                },
                data: res.gqpZqRate
              }
            ]
          }
          const dom = that.$refs.zuo2echart4
          const echart = echarts.init(dom)
          echart.setOption(option)
          window.addEventListener('resize', () => {
            echart.resize()
          })
        })
        .catch(function(error) {
          console.log(error)
        })
    },
    getzuo2echart5Data() {
      let that = this
      var params = {
        cityName: this.smapdata.cityName
        // "areaName": this.smapdata.areaName,
      }

      axios
        .post('/api/kdyyCon/getZyjhZeroAddrData', params)
        .then(function(response) {
          var arr = response.data
          
          var res = arr.reduce((res, v) => {
            Object.keys(v).forEach(key => {
              const value = v[key]
              if (res[key]) res[key].push(value)
              else res[key] = [value]
            })
            return res
          }, {})

         

          const option = {
            grid: {
              left: '9%',
              top: '15%',
              right: '0%',
              bottom: '20%',
              containLabel: false // 这个啥？看下面
            },
            legend: {
              data: ['扫码一致率'],
              show: false,
              textStyle: {
                fontSize: '20px',
                fontFamily: 'MicrosoftYaHeiUI',
                color: '#FFFFFF'
              }
            },
            tooltip: {
              trigger: 'axis'
            },
            xAxis: [
              {
                type: 'category',
                axisTick: {
                  show: false
                },
                axisLine: {
                  show: false
                },
                axisLabel: {
                  show: true,
                  rotate: 0,
                  interval: 0,
                  textStyle: {
                    padding: [14, 0, 0, 0],
                    fontSize: 12,
                    color: 'rgba(255,255,255,0.5)'
                  }
                },

                // data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月'],
                data: res.cityName,
                axisPointer: {
                  type: 'shadow'
                }
              }
            ],
            yAxis: [
              {
                type: 'value',
                name: ' ',
                nameTextStyle: {
                  color: 'rgba(255,255,255,0.5)'
                },
                splitLine: {
                  show: false
                },
                axisLine: {
                  show: false
                },
                axisTick: {
                  show: false
                },

                splitArea: {
                  show: false
                },

                axisLabel: {
                  formatter: '{value}',
                  textStyle: {
                    color: 'rgba(255,255,255,0.5)'
                  }
                }
              }
            ],
            series: [
              {
                name: ' ',
                type: 'bar',
                barWidth: 10,
                // barGap:'50%',

                itemStyle: {
                  normal: {
                    //barBorderRadius: 5,
                    //渐变色
                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                      {
                        offset: 0,
                        color: '#01EAED'
                      },
                      {
                        offset: 0.5,
                        color: '#02C4DD'
                      },
                      {
                        offset: 1,
                        color: '#029ED9'
                      }
                    ])
                  }
                },
                label: {
                  normal: {
                    show: true,
                    position: 'top',
                    textStyle: {
                      color: '#01EAED',
                      fontSize: 14
                    }
                  }
                },
                data: res.gqpZeroAddrNum
              }
            ]
          }
          const dom = that.$refs.zuo2echart5
          const echart = echarts.init(dom)
          echart.setOption(option)
          window.addEventListener('resize', () => {
            echart.resize()
          })
        })
        .catch(function(error) {
          console.log(error)
        })
    },

    getyou1echart1Data() {
      let that = this
      var params = {
        cityName: this.smapdata.cityName,
        areaName: this.smapdata.areaName
      }

      axios
        .post('/api/kdyyCon/getOltZflData', params)
        .then(function(response) {
          let result = response.data

          that.dagedata2 = result

          var value = result.zfl

          const option = {
            title: {
              text: value + '%',
              subtext: '在服率',
              x: 'center',
              y: '30%',
              textStyle: {
                fontWeight: 'bold',
                color: '#fdfeff',
                fontSize: 22
              },
              subtextStyle: {
                fontSize: 16,
                color: '#ff8c00'
              }
            },
            series: [
              {
                type: 'liquidFill',
                radius: '78.1%',
                center: ['50%', '50%'],
                label: {
                  normal: {
                    show: false,
                    textStyle: {
                      color: '#ffffff',
                      insideColor: '#ff8c00',
                      fontSize: 20
                    }
                  }
                },
                color: [
                  {
                    type: 'linear',
                    x: 0,
                    y: 0,
                    x2: 0,
                    y2: 1,
                    colorStops: [
                      {
                        offset: 0,
                        color: '#028b95' // 0% 处的颜色
                      },
                      {
                        offset: 1,
                        color: '#0b5881' // 100% 处的颜色
                      }
                    ]
                  }
                ],
                data: [value, value], // data个数代表波浪数
                backgroundStyle: {
                  borderWidth: 1,
                  borderColor: 'rgba(55, 211, 255, 0.42)',
                  color: 'rgba(12, 41, 49, 0.6)'
                },

                outline: {
                  show: false
                }
              }
            ]
          }

          const dom = that.$refs.you1echart1
          const echart = echarts.init(dom)
          echart.setOption(option)
          window.addEventListener('resize', () => {
            echart.resize()
          })
        })
        .catch(function(error) {
          console.log(error)
        })
    },

    getyou2Data() {
      let that = this
      var params = {
        cityName: this.smapdata.cityName,
        areaName: this.smapdata.areaName
      }

      axios
        .post('/api/kdyyCon/getTestSpeedData', params)
        .then(function(response) {
          let result = response.data

          that.dagedata3 = result
        })
        .catch(function(error) {
          console.log(error)
        })
    },
    getyou3Data() {
      let that = this
      var params = {
        cityName: this.smapdata.cityName,
        areaName: this.smapdata.areaName
      }

      axios
        .post('/api/kdyyCon/getKdyyYjzdData', params)
        .then(function(response) {
          let result = response.data

          that.dagedata4 = result
        })
        .catch(function(error) {
          console.log(error)
        })
    },
    getxiangqing2Data() {
      let that = this

      that.tableData1 = []
      var params = {
        cityName: this.smapdata.cityName,
        areaName: this.smapdata.areaName,
        page: '1',
        limit: '15'
      }
      axios
        .post('/api/kdyyCon/selectZdcsInfoList', params)
        .then(function(response) {
          var datal = response.data

          var datal2 = datal.data

          var datal3 = datal2.rows

          if (!datal) {
            return
          }
          datal3.forEach(item => {
            Object.keys(item).forEach(key => {
              Number(item[key]) ? (item[key] = Number(item[key])) : item[key]
            })
          })

          that.tableData1 = datal3
        })
        .catch(function(error) {
          console.log(error)
        })
    },

    getyou3echart1Data() {
      const option = {
        color: ['#01d071', '#0bb1ff', '#ffa13e'],
        title: {
          text: '',
          subtext: '不合格原因',
          x: 'center',
          y: '35%',
          textStyle: {
            fontWeight: 'bold',
            color: '#fdfeff',
            fontSize: 22
          },
          subtextStyle: {
            fontSize: 12,
            color: '#c9c9c9'
          }
        },
        tooltip: {
          trigger: 'item'
        },
        legend: {
          top: '5%',
          left: 'center',
          show: false
        },
        series: [
          {
            name: '工单',
            type: 'pie',
            radius: ['70%', '80%'],
            avoidLabelOverlap: false,
            label: {
              show: false,
              position: 'center'
            },
            emphasis: {
              label: {
                show: true,
                fontSize: 20,
                fontWeight: 'bold'
              }
            },
            labelLine: {
              show: false
            },
            data: [
              { value: 1048, name: '竣工数' },
              { value: 175, name: '在途数' },
              { value: 58, name: '未受理' }
            ]
          }
        ]
      }

      const dom = this.$refs.you3echart1
      const echart = echarts.init(dom)
      echart.setOption(option)
      window.addEventListener('resize', () => {
        echart.resize()
      })
    },

    mapxia1echarts() {
      let that = this

      that.tableData1 = []
      var params = {
        cityName: this.smapdata.cityName
      }
      axios
        .post('/api/kdyyCon/getKdyyZxtData', params)
        .then(function(response) {
         

          var arr = response.data
         
          var res = arr.reduce((res, v) => {
            Object.keys(v).forEach(key => {
              const value = v[key]
              if (res[key]) res[key].push(value)
              else res[key] = [value]
            })
            return res
          }, {})

          const option = {
            legend: {
              data: ['宽带用户数', '宽带资源准确率'],
              textStyle: {
                fontSize: '20px',
                fontFamily: 'MicrosoftYaHeiUI',
                color: '#FFFFFF'
              }
            },
            tooltip: {
              trigger: 'axis'
            },
            xAxis: [
              {
                type: 'category',
                axisTick: {
                  show: false
                },
                axisLine: {
                  show: false
                },
                axisLabel: {
                  show: true,
                  rotate: 0,
                  interval: 0,
                  textStyle: {
                    padding: [14, 0, 0, 0],
                    fontSize: 12,
                    color: 'rgba(255,255,255,0.5)'
                  }
                },

                data: res.city_name,
                axisPointer: {
                  type: 'shadow'
                }
              }
            ],
            yAxis: [
              {
                type: 'value',
                name: '宽带用户数',
                nameTextStyle: {
                  color: 'rgba(255,255,255,0.5)'
                },
                splitLine: {
                  show: false
                },
                axisLine: {
                  show: false
                },
                axisTick: {
                  show: false
                },

                splitArea: {
                  show: false
                },

                axisLabel: {
                  formatter: '{value} ',
                  textStyle: {
                    color: 'rgba(255,255,255,0.5)'
                  }
                }
              },
              {
                type: 'value',
                name: '宽带资源准确率',
                nameTextStyle: {
                  color: 'rgba(255,255,255,0.5)'
                },

                splitLine: {
                  show: false
                },
                axisLine: {
                  show: false
                },
                axisTick: {
                  show: false
                },

                splitArea: {
                  show: false
                },

                axisLabel: {
                  formatter: '{value} %',
                  color: 'rgba(255,255,255,0.5)'
                }
              }
            ],
            series: [
              {
                name: '宽带用户数',
                type: 'pictorialBar',
                barCategoryGap: '60%',
                symbol: 'path://M0,10 L10,10 C5.5,10 5.5,5 5,0 C4.5,5 4.5,10 0,10 z',
                itemStyle: {
                  normal: {
                    //barBorderRadius: 5,
                    //渐变色
                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                      {
                        offset: 0,
                        color: '#01EAED'
                      },
                      {
                        offset: 0.5,
                        color: '#02C4DD'
                      },
                      {
                        offset: 1,
                        color: '#029ED9'
                      }
                    ])
                  }
                },
                label: {
                  normal: {
                    show: true,
                    position: 'top',
                    textStyle: {
                      color: '#fff',
                      fontSize: 12
                    }
                  }
                },
                data: res.broad_users_all
              },
              {
                name: '宽带资源准确率',
                type: 'line',
                yAxisIndex: 1,
                itemStyle: {
                  normal: {
                    color: 'rgba(255, 196, 53, 1)',
                    barBorderRadius: 0
                  }
                },

                data: res.dkkx_yp_rate,
                smooth: true,
                areaStyle: {
                  normal: {
                    color: {
                      x: 0,
                      y: 0,
                      x2: 0,
                      y2: 1,
                      colorStops: [
                        {
                          offset: 0,
                          color: '#f19900' // 0% 处的颜色
                        },
                        {
                          offset: 0.7,
                          color: 'rgba(220,56,129,0)' // 100% 处的颜色
                        }
                      ],
                      globalCoord: false // 缺省为 false
                    }
                  }
                }
              }
            ]
          }

          const dom = that.$refs.mapxia1
          const echart = echarts.init(dom)
          echart.setOption(option)
          window.addEventListener('resize', () => {
            echart.resize()
          })
        })
        .catch(function(error) {
          console.log(error)
        })
    },

    mapxia2echarts() {
      const option = {
        legend: {
          show: false,
          data: ['光衰合格率', '不合格率']
        },
        tooltip: {
          trigger: 'axis'
        },
        title: {
          left: 'center',
          text: ' ',
          textStyle: {
            fontSize: 20,
            fontWeight: 'bold',
            fontFamily: 'MicrosoftYaHeiUI',
            color: '#02eefe',
            align: 'center'
          }
        },
        xAxis: [
          {
            type: 'category',
            axisTick: {
              show: false
            },
            axisLine: {
              show: false
            },
            axisLabel: {
              show: true,
              rotate: 0,
              interval: 0,
              textStyle: {
                padding: [14, 0, 0, 0],
                fontSize: 12,
                color: 'rgba(255,255,255,0.5)'
              }
            },
            data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],
            // data: ['杭州', '宁波', '温州', '绍兴', '湖州', '嘉兴', '金华', '衢州', '台州', '丽水', '舟山'],
            axisPointer: {
              type: 'shadow'
            }
          }
        ],
        yAxis: [
          {
            type: 'value',
            name: '光衰合格率',
            nameTextStyle: {
              color: 'rgba(255,255,255,0.5)'
            },
            splitLine: {
              show: false
            },
            axisLine: {
              show: false
            },
            axisTick: {
              show: false
            },

            splitArea: {
              show: false
            },

            axisLabel: {
              formatter: '{value}%',
              textStyle: {
                color: 'rgba(255,255,255,0.5)'
              }
            }
          },
          {
            type: 'value',
            name: '不合格率',
            nameTextStyle: {
              color: 'rgba(255,255,255,0.5)'
            },

            splitLine: {
              show: false
            },
            axisLine: {
              show: false
            },
            axisTick: {
              show: false
            },

            splitArea: {
              show: false
            },

            axisLabel: {
              formatter: '{value} %',
              color: 'rgba(255,255,255,0.5)'
            }
          }
        ],
        series: [
          {
            name: '转化数',
            type: 'pictorialBar',
            barCategoryGap: '60%',
            symbol: 'path://M0,10 L10,10 C5.5,10 5.5,5 5,0 C4.5,5 4.5,10 0,10 z',
            itemStyle: {
              normal: {
                //barBorderRadius: 5,
                //渐变色
                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                  {
                    offset: 0,
                    color: '#01EAED'
                  },
                  {
                    offset: 0.5,
                    color: '#02C4DD'
                  },
                  {
                    offset: 1,
                    color: '#029ED9'
                  }
                ])
              }
            },
            label: {
              normal: {
                show: true,
                position: 'top',
                textStyle: {
                  color: '#fff',
                  fontSize: 20
                }
              }
            },
            data: [98.3, 98.35, 98.29, 98.38, 98.37, 98.33, 98.44, 98.44, 98.32, 98.46, 98.48, 98.51]
          },
          {
            name: '环比',
            type: 'line',
            yAxisIndex: 1,
            itemStyle: {
              normal: {
                color: 'rgba(255, 196, 53, 1)',
                barBorderRadius: 0
              }
            },
            data: [1.7, 1.65, 1.71, 1.62, 1.63, 1.67, 1.56, 1.56, 1.68, 1.54, 1.52, 1.49]
          }
        ]
      }
      const dom = this.$refs.mapxia2
      const echart = echarts.init(dom)
      echart.setOption(option)
      window.addEventListener('resize', () => {
        echart.resize()
      })
    },

    getcesuData() {
      let that = this

      var params = {
        userInfo: this.ipdizhi
        //  "userInfo": '057900408480'
      }
      console.log(params)

      axios
        .post('/api/velocityCon/velocity', params)
        .then(function(response) {
          let result = response.data
          let result2 = result.data

          that.cesuData = result2

          that.cesujieguo = true
          that.cesudonghua = false
          that.quanquan = false
        })
        .catch(function(error) {
          console.log(error)
        })
    },
    cxform0_1() {
      this.moretableData0_1()
    },
    cxform0_2() {
      this.moretableData0_2()
    },
    cxform0_3() {
      this.moretableData0_3()
    },
    moretableData0_1() {
      let that = this
      var params = {
       "cityName": that.provAndCity.province || this.smapdata.cityName,
       "areaName": that.provAndCity.city || this.smapdata.areaName,
       
       "startTime": that.startTime + '',
       "endTime": that.endTime + '',
      }
      that.tableData0_1 = []
      axios
        .post('/api/kdyyCon/getKdyyGjRedData', params)
        .then(function(response) {
          var datal = response.data
          if (!datal) {
            return
          }
          datal.forEach(item => {
            Object.keys(item).forEach(key => {
              Number(item[key]) ? (item[key] = Number(item[key])) : item[key]
            })
          })
          that.tableData0_1 = datal
        })
        .catch(function(error) {
          console.log(error)
        })
    },
    moretableData0_2() {
      let that = this
      var params = {
       "cityName": that.provAndCity.province || this.smapdata.cityName,
       "areaName": that.provAndCity.city || this.smapdata.areaName,
       
       "startTime": that.startTime + '',
       "endTime": that.endTime + '',
      }
      that.tableData0_2 = []
      axios
        .post('/api/kdyyCon/getKdyyGjYellowData', params)
        .then(function(response) {
          var datal = response.data
           
          console.log(datal)
          if (!datal) {
            return
          }
          datal.forEach(item => {
            Object.keys(item).forEach(key => {
              Number(item[key]) ? (item[key] = Number(item[key])) : item[key]
            })
          })
          that.tableData0_2 = datal
        })
        .catch(function(error) {
          console.log(error)
        })
    },
    moretableData0_3() {
      let that = this
      var params = {
       "cityName": that.provAndCity.province || this.smapdata.cityName,
       "areaName": that.provAndCity.city || this.smapdata.areaName,
       
       "startTime": that.startTime + '',
       "endTime": that.endTime + '',
      }
      that.tableData0_3 = []
      axios
        .post('/api/kdyyCon/getKdyyGjGreenData', params)
        .then(function(response) {
          var datal = response.data
          if (!datal) {
            return
          }
          datal.forEach(item => {
            Object.keys(item).forEach(key => {
              Number(item[key]) ? (item[key] = Number(item[key])) : item[key]
            })
          })
          that.tableData0_3 = datal
        })
        .catch(function(error) {
          console.log(error)
        })
    },
     
    slidechange(refName) {
      if (!refName) return;
    
      var mySlide = this.$refs[refName];
      let activeIndex = mySlide.swiper.activeIndex;
    
      if (refName == "ygpjslide") {
        this.ygpjindex = activeIndex;
      } else if (refName == "gdmxslide") {
        this.gdmxindex = activeIndex;
      } else if (refName == "fxpj1slide") {
        this.fxpj1index = activeIndex;
      } else if (refName == "fxpj2slide") {
        this.fxpj2index = activeIndex;
      }
    },
    indexchange(refName, k) {
      if (!refName) return;
    
      var mySlide = this.$refs[refName];
      let swiper = mySlide.swiper;
    
      if (refName == "ygpjslide") {
        this.ygpjindex = k;
      } else if (refName == "gdmxslide") {
        this.gdmxindex = k;
      } else if (refName == "fxpj1slide") {
        this.fxpj1index = k;
      } else if (refName == "fxpj2slide") {
        this.fxpj2index = k;
      }
    
      swiper.slideTo(k, 1000, false);
    },
    //////////////////////////////////////////////////////////////////
  },
  destroyed() {
    // 在组件生命周期结束的时候销毁。
    window.removeEventListener('message', this.gismapListener, true)
  }
}
</script>

<style lang="scss" scoped>
@import url('../comtable.scss');
.topmenudiv {
  z-index: 999;
  width: 800px;
  height: 40px;
  position: absolute;
  left: 50%;
  top: 70px;
  margin-left: -400px;
  text-align:center;

  .topmenu {
    cursor: pointer;
    font-size: 22px;
    font-family: MFBanHei;
    line-height: 40px;
    color: #1ec7fe;
    margin: 0px 10px 0px 10px;
  }
  .topmenuac {
    font-size: 22px;
    font-family: MFBanHei;
    font-weight: 100;
    height: 40px;
    line-height: 40px;
    color: #00ffff;
    margin: 0px 10px 0px 10px;
  }
}
.contentbody {
  height: calc(100vh - 100px);
  // background: url('~@/assets/images/bigScreen/bg-left.png') left no-repeat,
  //   url('~@/assets/images/bigScreen/bg-right.png') right no-repeat;
  // background-size: auto 100%;
  margin: -10px 15px 10px 15px;
  position: relative;
  display: flex;
}

/deep/ .el-dialog {
  -webkit-transform: none;
  transform: none;
  left: 0;
  position: relative;
  z-index: 20000;
  margin: 0 auto;
  padding-bottom: 30px;
  background-image: url('~@/assets/images/bigScreen/kuang.png');
  background-size: 100% 100%;
  background-color: rgba(220, 38, 38, 0);
}

/deep/ .el-dialog__body {
  padding: 0px 20px;
}

/deep/ .el-dialog__headerbtn {
  z-index: 9999;
}

/deep/ .el-dialog__headerbtn .el-dialog__close {
  color: #fff;
  font-size: 24px;
  font-weight: 500;
  margin: 2px 20px 0 0;
  border: 2px solid #193987;
  border-radius: 5px;
  background: #1e1e88;
}

/deep/ .el-table {
  background: none !important;
  font-size: 14px !important;
}

/deep/.dialogTableBg .el-table th {
  background: none !important;
  background: url('~@/assets/images/bigScreen/fullService/597bcdc505fa3.png') no-repeat !important;
  background-position: center 16px !important;
  background-size: contain !important;
  text-align: center !important;
  color: #02f6ff !important;
  font-size: 15px !important;
}

/deep/ .el-table tr {
  background: none !important;
}

/deep/.el-table td {
  background: none !important;
  border: none !important;
  text-align: center !important;
  color: #ffffff;
  padding: 6px 0;
}

/deep/.el-table td.is-left {
  text-align: left !important;
}

/deep/ .el-table th.is-leaf,
.el-table td {
  border: none !important;
  color: #ffffff;
}

/deep/.el-table::before {
  height: 0 !important;
}

/deep/.el-table th > .cell {
  display: contents !important;
}

/deep/.el-table .cell {
  padding: 0 6px;
  max-height: 45px;
  overflow-y: hidden;
}

/deep/ .dialogTableBg .el-table tr:nth-child(even) {
  background: rgba(4, 54, 108, 0.4) !important;
}

.dialogCon {
  padding: 0 40px;

  .dialogTitle {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-right: 30px;
    border-bottom: 1px dashed #404e77;
    padding: 5px 0;

    .left {
      display: inline-block;
      padding-right: 110px;
      font-size: 20px;
      font-family: MFBanHei;
      font-weight: 400;
      color: #02f6ff;
      background-image: url('~@/assets/images/bigScreen/fullService/Rectangle 561.png');
      background-repeat: no-repeat;
      background-position: center right;
    }

    .title-right {
      color: #218cc8;
      font-size: 12px;
      font-family: Microsoft YaHei;

      div {
        width: 38px;
        height: 30px;
        line-height: 30px;
        text-align:center;
        display: inline-block;
        cursor: pointer;
        background-image: url('~@/assets/images/bigScreen/fullService/left-sub.png');
        background-repeat: no-repeat;
        background-size: 100% 100%;
      }

      .active {
        color: #02f6ff;
        background-image: url('~@/assets/images/bigScreen/fullService/left-subActive.png');
      }
    }
  }
}

/deep/ .el-select .el-input__inner {
  height: 28px;
  // width: 100px;
  background: transparent;
  color: #1fe3ef;
  padding-right: 20px;
  padding-left: 10px;
  border-color: #3bc8d9;
}

/deep/ .bottom-tab {
  width: 60%;
}

/deep/ .bottom-tab .bottom-item {
  padding: 4px 30px !important;
}

.leftbox,
.rightbox {
  width: 520px;
  height: calc(100vh - 80px);
  box-sizing: border-box;
  padding: 15px;
  padding-bottom: 30px;
}

.rightbox {
  width: 520px;
}

.centerbox {
  height: 98%;
  flex: 1;
  background: url('~@/assets/zj/bg_zj3_dt2.png') no-repeat;
  background-size: 100% 100%;
  margin-top: 10px;
  margin-bottom: 80px;
  box-sizing: border-box;
  position: relative;
  padding: 32px 20px 10px 20px;
  position: relative;
}
.item-title {
  font-size: 18px;
  color: aqua;
  background: url('~@/assets/zj/bg_zj3_bt.png') no-repeat;
  background-size: 100% 100%;
  line-height: 26px;
  height: 40px;
  padding-left: 20px;
  margin-bottom: 5px;
  font-weight: bolder;
  vertical-align: top;
}

.chartbox {
  width: 100%;
  height: 100%;
}

.gdjkitem {
  height: 68px;
  width: 72px;
  margin: 0 auto;
  background: url('~@/assets/images/images_zy/cire.png') no-repeat;
  background-size: 100% 100%;
  line-height: 68px;
  font-size: 18px;
  text-align:center;
  font-weight: bolder;
}

.gdjkitembox {
  text-align:center;
  position: relative;
  margin-top: 12px;

  &:not(:last-child)::after {
    content: '';
    display: block;
    width: 18px;
    height: 18px;
    background: url('~@/assets/images/images_zy/jiantou.png') no-repeat;
    background-size: 100% 100%;
    position: absolute;
    right: -8px;
    top: 26px;
  }
}

.mtheader {
  text-align:center;
  line-height: 40px;
  font-size: 16px;
  color: #51d1ee;
  border-bottom: 1px solid #308497;
}

.mtbody {
  height: 100%;
  margin: 6px 0;
  box-sizing: border-box;
  overflow: hidden;
}

.mtbody .scrollitem {
  text-align:center;
  height: 34px;
  line-height: 34px;
  padding: 0 5px;
}

.mtbody .scrollitem:nth-child(odd) {
  background: rgba(4, 54, 108, 0.7);
}

.centTab {
  position: absolute;
  z-index: 10;
  width: 100%;
  top: 30px;
  text-align:center;

  .centtabitem {
    display: inline-block;
    height: 56px;
    width: 120px;
    line-height: 66px;
    text-align:center;
    font-size: 18px;
    cursor: pointer;
    color: rgb(2, 252, 252);
    background: url('~@/assets/images/images_zy/WechatIMG431.png') no-repeat;
    background-size: 100% 120%;
    margin-right: -15px;
    opacity: 0.5;
  }

  .centtabitem.active {
    opacity: 1;
    font-weight: bold;
  }
}

.box-item {
  position: relative;
}

.rowttabs {
  height: 38px;
  line-height: 38px;
  position: absolute;
  top: 2px;
  right: 0;

  .rowttabs-item {
    padding: 4px 8px;
    border-radius: 5px;
    border: 1px solid #5b7bc9;
    margin-left: 10px;
    color: #698bdf;
    cursor: pointer;
  }

  .rowttabs-item.active {
    border: 1px solid #45d8e2;
    color: #45d8e2;
    box-shadow: 0px 0px 8px rgba(62, 255, 253, 0.5) inset;
  }
}

.piebox {
  text-align:center;
  height: 130px;
  position: relative;

  .chartbox {
    height: 100%;
  }

  .pieinfo {
    width: 100%;
    position: absolute;
    bottom: -10px;
    text-align:center;
    font-size: 16px;
  }
}

.pieboxbbs {
  .pieinfo {
    bottom: 5px !important;
  }
}

/deep/ .el-loading-mask {
  background-color: rgba(6, 26, 58, 0.7);
  z-index: 9999999;
}

/deep/.el-table__fixed {
  background: #010d2d !important;
}

/deep/.el-table__fixed::before,
/deep/ .el-table__fixed-right::before {
  background: transparent !important;
}

@keyframes turn {
  0% {
    -webkit-transform: rotate(0deg);
  }

  25% {
    -webkit-transform: rotate(90deg);
  }

  50% {
    -webkit-transform: rotate(180deg);
  }

  75% {
    -webkit-transform: rotate(270deg);
  }

  100% {
    -webkit-transform: rotate(360deg);
  }
}

.tjbtn {
  position: absolute;
  right: 60px;
  top: 40px;
  border-radius: 50%;
  padding: 4px;
  box-shadow: 0 0 10px rgb(56, 148, 235);
  cursor: pointer;
  animation: turn 8s linear infinite;
  z-index: 99;

  img {
    width: 44px;
    z-index: 99;
  }
}

.tjtitle {
  color: #fff;
  font-size: 18px;
  font-weight: bolder;
  letter-spacing: 1px;
  background: linear-gradient(45deg, #1a92d4, transparent);
  line-height: 34px;
  padding-left: 15px;
  border-radius: 20px 0 0 20px;
  width: 60%;
}

.tjitem {
  // padding: 10px;
  color: #fff;
  font-size: 20px;

  p {
    line-height: 48px;
    margin-bottom: 0;
  }
}

.lgwbox {
  text-align:center;
  cursor: pointer;
  .lgwnum {
    font-size: 20px;
    color: #f7e713;
  }

  .lgwimg {
    margin: -20px auto 0px auto;

    img {
      width: 100px;
    }
  }

  .lgwfont {
    font-size: 16px;
  }
}

.waterCharbox {
  height: 100px;
}

.waterCharbox2 {
  line-height: 30px;
  font-size: 18px;
  padding-top: 15px;
  box-sizing: border-box;
  text-align: left;
}

.lineinfo {
  display: inline-block;
  width: 80px;
  text-align: right;
}

.charrow {
  text-align:center;

  .waterinfo {
    margin-top: 15px;
    font-size: 16px;
    margin-bottom: 5px;
    color: #f5f5f5;
  }
}

.initselect.el-select-dropdown {
  background: rgb(9, 55, 112) !important;
}

.initselect .el-select-dropdown__item.hover,
.el-select-dropdown__item:hover {
  background-color: #07234d;
}

.initselect .el-select-dropdown__item {
  color: #fff;
}

.initselect .el-select-dropdown__item.selected {
  color: aqua;
}

.initselect.el-select-dropdown {
  border: solid 1px #93b1f7;
}

.initselect .popper__arrow::after {
  border-bottom-color: #093770 !important;
}

.sutabtitle {
  background: rgba(25, 89, 162, 0.3);
  height: 38px;
  border-radius: 10px;
  line-height: 38px;
}

.sutabtitle .flex1 {
  font-size: 16px;
  text-align:center;
  cursor: pointer;
  opacity: 0.4;
  color: aqua;
  background: url('~@/assets/images/bigScreen/ligtdian.png') no-repeat;
  background-position: center -38px;
}

.sutabtitle .flex1.active {
  opacity: 1;
  font-weight: bolder;
}

.zdmore {
  float: right;
  font-size: 16px;
  cursor: pointer;
  color: #57b4f1;
  margin-right: 0px;
  text-decoration: underline;
  position: relative;
  z-index: 999;
  top: 2px;
}
.zjmap {
  width: 100%;
  height: 70%;
}
.mapxia {
  width: 100%;
  height: 27%;
  margin-top: 3%;
  overflow: hidden;
}
.yujingimg {
  width: 198px;
  height: 95px;
  position: absolute;
  top: 40px;
  right: 40px;
  z-index: 100;
  background: url('~@/assets/zj/bg_zj4_ls5.png') no-repeat top center;
  background-size: 100% 100%;
  a {
    float: left;
    color: #00ffff;
    font-weight: bold;
    padding: 8px 0px 0px 70px;
  }
}
.mapxia1 {
  width: 100%;
  height: 100%;
  float: left;
}
.mapxia2 {
  width: 100%;
  height: 100%;
  float: left;
}
.lgwbox2 {
  padding-top: 20px;
  text-align:center;
  height: 100%;
  .lgwnum2 {
    height: 100px;
    line-height: 120px;
    font-size: 2.25rem;
    margin-top: 20px;
    background: url('~@/assets/zj/bg_zj3_di6.png') no-repeat center center;
  }
  .lgwfont2 {
    font-size: 1.25rem;
  }
}
.lgwbox3 {
  text-align:center;
  background: url('~@/assets/zj/bg_zj3_di7.png') no-repeat center center;
  height: 100%;
  .lgwnum3 {
    height: 120px;
    line-height: 120px;
    font-size: 1.2rem;
  }
  .lgwfont3 {
    margin-top: 10px;
    font-size: 1rem;
    color: #82e0ff;
  }
  .lgwnum3_2 {
    font-size: 1.2rem;
  }
}
.lgwbox4 {
  text-align:center;
  border-radius: 3px;
  border: 1px solid rgba(37, 100, 204, 0.6);
  box-shadow: 0px 0px 21px rgba(19, 67, 205, 0.5) inset;
  padding: 10px;
  margin: 1%;
  width: 48%;

  .lgwimg4 {
    margin: 0px 0px 10px 10px;
  }
  .lgwnumfont {
    text-align: left;
    margin-left: 10px;
  }
  .lgwnum4 {
    font-size: 1.2rem;
  }
  .lgwfont4 {
    font-size: 1rem;
    color: #82e0ff;
  }
}

.lgwbox5 {
  text-align:center;
  border-radius: 3px;
  border: 1px solid rgba(37, 100, 204, 0.6);
  box-shadow: 0px 0px 21px rgba(19, 67, 205, 0.5) inset;
  padding: 5px;
  margin: 1vh 5px;
  width: 23%;
  .flex {
    margin: 0px;
    padding: 0px;
    .lgwnumfont5 {
      width: 100%;
      text-align:center;
      .lgwnum5 {
        font-size: 1.2rem;
      }
      .lgwfont5 {
        font-size: 1rem;
        color: #82e0ff;
      }
    }
  }
}

.rowttabs2 {
  width: 100%;
  text-align:center;
  font-size: 1rem;
  .rowttabs-item {
    padding: 5px;
    margin: 5px;
    height: auto;
    border-radius: 5px;
    border: 1px solid rgba(37, 100, 204, 0.6);
    box-shadow: 0px 0px 21px rgba(19, 67, 205, 0.5) inset;
    cursor: pointer;
  }

  .rowttabs-item.active {
    border: 1px solid #45d8e2;
    color: #45d8e2;
    box-shadow: 0px 0px 8px rgba(62, 255, 253, 0.5) inset;
  }
}

.lgwboxtab {
  height: 60px;
  text-align:center;
  border-radius: 3px;
  border: 1px solid rgba(37, 100, 204, 0.6);
  box-shadow: 0px 0px 21px rgba(19, 67, 205, 0.5) inset;
  padding: 5px;
  margin: 1vh 5px;

  .lgwnumtab {
    font-size: 1.2rem;
  }
  .lgwfonttab {
    font-size: 1rem;
    color: #82e0ff;
  }
}
.lgwbox6 {
  text-align:center;
  background: url('~@/assets/zj/bg_zj4_4.png') no-repeat center center;
  height: 160px;
  .lgwnum6 {
    font-size: 1.2rem;
  }
  .lgwfont6 {
    padding-top: 50px;
    font-size: 1rem;
    color: #82e0ff;
  }
}
.lgwbox7 {
  text-align:center;
  background: url('~@/assets/zj/bg_zj4_5.png') no-repeat center center;
  height: 160px;
  .lgwnum7 {
    font-size: 1.2rem;
  }
  .lgwfont7 {
    padding-top: 50px;
    font-size: 1rem;
    color: #82e0ff;
  }
}
.lgwbox8 {
  text-align:center;
  background: url('~@/assets/zj/bg_zj4_6.png') no-repeat center center;
  height: 160px;
  .lgwnum8 {
    font-size: 1.2rem;
    .strong {
      color: #ff5154;
      margin-right: 5px;
    }
  }
  .lgwfont8 {
    padding-top: 50px;
    font-size: 1rem;
    color: #82e0ff;
  }
}
.lgwbox9 {
  text-align:center;
  background: url('~@/assets/zj/bg_zj4_7.png') no-repeat center center;
  height: 160px;
  .lgwnum9 {
    font-size: 1.2rem;
  }
  .lgwfont9 {
    padding-top: 50px;
    font-size: 1rem;
    color: #82e0ff;
  }
}
.lgwbox10 {
  text-align:center;
  background: url('~@/assets/zj/bg_zj4_8.png') no-repeat center center;
  height: 160px;
  .lgwnum10 {
    font-size: 1.2rem;
  }
  .lgwfont10 {
    padding-top: 50px;
    font-size: 1rem;
    color: #82e0ff;
  }
}
.lgwbox11 {
  text-align:center;
  background: url('~@/assets/zj/bg_zj4_9.png') no-repeat center center;
  height: 160px;
  .lgwnum11 {
    font-size: 1.2rem;
    .strong {
      color: #ff5154;
      margin-right: 5px;
    }
  }
  .lgwfont11 {
    padding-top: 50px;
    font-size: 1rem;
    color: #82e0ff;
  }
}
.jiabg {
  background: url('~@/assets/zj/bg_zj4_1.png') no-repeat top center;
  height: 280px;
  .lgwbox {
    margin-top: 40px;
  }
}
.chartbox_img {
  height: 24vh;
  width: 33%;
  background: url('~@/assets/zj/bg_zj4_2.png') no-repeat bottom center;
}
.xiejiaolabel {
  width: 80%;
  height: 30px;
  line-height: 30px;
  margin: 10px auto;
  text-align:center;
  background: linear-gradient(135deg, transparent 15px, #012c60 0) top left,
    linear-gradient(-135deg, transparent 15px, #012c60 0) top right,
    linear-gradient(-45deg, transparent 15px, #012c60 0) bottom right,
    linear-gradient(45deg, transparent 15px, #012c60 0) bottom left;
  background-size: 50% 50%;
  background-repeat: no-repeat;
}
.huise {
  color: #d3d3d3;
}
.lanhui {
  color: #10b9c6;
}
.baise {
  color: #ffffff;
}
.cesubtn {
  width: 60px;
  height: 22px;
  border-radius: 3px;
  background-color: rgb(18, 59, 121);
  line-height: 22px;
  float: right;
  text-align:center;
}
.cesudd {
  font-size: 20px;
  color: #d7e3ff;
  height: 48px;
  line-height: 48px;
  width: 50%;
  float: left;
  display: inline-flex;
}


//借用


.navBtns {
  display: flex;
  align-items: center;
  width: 100%;
 

  .btn {
    text-align: center;
    cursor: pointer;
    font-size: 0.74vw;
    color: #fff;
    padding: 0.6vw 0.4vw;
    background-size: 100% 112%;
    margin-right: 0.1vw; 
     
    border-radius: 5px;
    border: 1px solid rgba(37, 100, 204, 0.6);
    box-shadow: 0px 0px 21px rgba(19, 67, 205, 0.5) inset;
     

    &:hover {
      opacity: 0.8;
    }

    &.on {
       
      border: 1px solid #45d8e2;
      color: #45d8e2;
      box-shadow: 0px 0px 8px rgba(62, 255, 253, 0.5) inset;;
     
    }

    &.on:hover {
      opacity: 1;
    }
  }
}

::-webkit-scrollbarit-scrollbar{
 height: 10px;
 width: 10px;
}



</style>
