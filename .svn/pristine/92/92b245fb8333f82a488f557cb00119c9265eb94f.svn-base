import echarts from 'echarts'

export default {
  initechart_lines(charts) {

    var color = ['rgba(23, 255, 243', 'rgba(237,161,54', 'rgb(85,202,85', 'rgba(225,70,228',]
    var lineY = []
    var yAxisIndex2 = ['催单率', '7天重复障碍率']
    for (var i = 0; i < charts.names.length; i++) {
      let x = i
      if (x > color.length - 1) {
        x = color.length - 1
      }
      var data = {
        name: charts.names[i],
        type: 'line',
        color: color[x] + ')',
        smooth: true,
        yAxisIndex: yAxisIndex2.indexOf(charts.names[i]) > -1 ? 1 : 0,
        lineStyle: {
          type: yAxisIndex2.indexOf(charts.names[i]) > -1 ? 'dotted' : 'solid',
        },
        areaStyle: {
          normal: {
            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
              offset: 0,
              color: color[x] + ', 0.3)'
            }, {
              offset: 0.8,
              color: color[x] + ', 0)'
            }], false),
            shadowColor: 'rgba(0, 0, 0, 0.1)',
            shadowBlur: 10
          }
        },
        symbol: 'circle',
        symbolSize: 5,
        data: charts.value[i],
        markLine: {
          show: false,
          symbol: ['none', "none"],
          silent: true,
          lineStyle: {
            normal: {
              type: "dashed"
            }
          },
          label: {
            show: charts.bar_markLine[i] ? true : false,
            position: "insideEndTop",
            formatter: '平均值:{c}',
            fontSize: 13,

            padding: [0, 15, 0, 0]
          },
          data: [{
            yAxis: charts.bar_markLine[i] || '',
            lineStyle: {
              width: charts.bar_markLine[i] ? 1.5 : 0,
              color: color[x] + ', 1)'
            }
          }]
        }
      }
      lineY.push(data)
    };
    var option = {
      tooltip: {
        trigger: 'axis'
      },
      legend: {
        data: charts.names,
        textStyle: {
          fontSize: 12,
          color: '#fff'
        },
        right: '0%',
        top: 10,
      },
      grid: {
        top: '15%',
        left: '2%',
        right: '2%',
        bottom: '2%',
        containLabel: true
      },
      xAxis: {
        type: 'category',
        boundaryGap: true,
        data: charts.lineX,
        axisLabel: {
          textStyle: {
            color: '#fff',
            fontSize: 12,
          },
          interval: 0,
          rotate: 40,
          margin: 12
        },
        axisLine: {
          show: true, //隐藏X轴轴线
          lineStyle: {
            color: "#3d5269",
            width: 1
          }
        },
      },
      yAxis: [
        {
          name: charts.unit,
          type: 'value',
          splitNumber: 4,
          axisLabel: {
            formatter: '{value}',
            textStyle: {
              color: 'rgb(0,253,255,0.6)'
            }
          },
          splitLine: {
            lineStyle: {
              color: '#3d5269'
            }
          },
          axisLine: {
            lineStyle: {
              color: '#3d5269'
            }
          }
        },
        {
          name: '%',
          type: 'value',
          splitNumber: 4,
          axisLabel: {
            formatter: '{value}',
            textStyle: {
              color: 'rgb(0,253,255,0.6)'
            }
          },
          splitLine: {
            lineStyle: {
              color: '#3d5269'
            }
          },
          axisLine: {
            lineStyle: {
              color: '#3d5269'
            }
          }
        }
      ],
      series: lineY
    }
    if (charts.lineX.length > 12) {
      option.dataZoom = [{
        show: true,
        start: 0,
        end: 50,
        textStyle: {
          color: "rgba(204,187,225,0)",
        },
        fillerColor: "rgba(67,55,160,0.3)",
        borderColor: "rgba(204,187,225,0.1)"
      }]
    }
    var echart = echarts.init(document.getElementById(charts.domId));
    echart.setOption(option, true);
  },
  initechart_lines2(charts) {
    var color = ['rgba(23, 255, 243', 'rgba(237,161,54', 'rgb(85,202,85', 'rgba(225,70,228',]
    var lineY = []
    var yAxisIndex2 = []
    for (var i = 0; i < charts.names.length; i++) {
      let x = i
      if (x > color.length - 1) {
        x = color.length - 1
      }
      var data = {
        name: charts.names[i],
        type: 'line',
        color: color[x] + ')',
        smooth: true,
        yAxisIndex: yAxisIndex2.indexOf(charts.names[i]) > -1 ? 1 : 0,
        lineStyle: {
          type: yAxisIndex2.indexOf(charts.names[i]) > -1 ? 'dotted' : 'solid',
        },
        areaStyle: {
          normal: {
            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
              offset: 0,
              color: color[x] + ', 0.3)'
            }, {
              offset: 0.8,
              color: color[x] + ', 0)'
            }], false),
            shadowColor: 'rgba(0, 0, 0, 0.1)',
            shadowBlur: 10
          }
        },
        symbol: 'circle',
        symbolSize: 5,
        data: charts.value[i]
      }
      lineY.push(data)
    };
    var option = {
      tooltip: {
        trigger: 'axis',
        axisPointer: {
          type: 'shadow'
        }
      },
      legend: {
        data: charts.names,
        textStyle: {
          fontSize: 12,
          color: '#fff'
        },
        right: '0%',
        top: 10,
      },
      grid: {
        top: '15%',
        left: '2%',
        right: '2%',
        bottom: '2%',
        containLabel: true
      },
      xAxis: {
        type: 'category',
        boundaryGap: true,
        data: charts.lineX,
        axisLabel: {
          textStyle: {
            color: '#fff',
            fontSize: 12,
          },
          interval: 0,
          rotate: 40,
          margin: 12
        },
        axisLine: {
          show: true, //隐藏X轴轴线
          lineStyle: {
            color: "#3d5269",
            width: 1
          }
        },
      },
      yAxis: [
        {
          name: charts.unit,
          type: 'value',
          splitNumber: 4,
          axisLabel: {
            formatter: '{value}',
            textStyle: {
              color: 'rgb(0,253,255,0.6)'
            }
          },
          splitLine: {
            lineStyle: {
              color: '#3d5269'
            }
          },
          axisLine: {
            lineStyle: {
              color: '#3d5269'
            }
          }
        },
        {
          name: '%',
          type: 'value',
          splitNumber: 4,
          axisLabel: {
            formatter: '{value}',
            textStyle: {
              color: 'rgb(0,253,255,0.6)'
            }
          },
          splitLine: {
            lineStyle: {
              color: '#3d5269'
            }
          },
          axisLine: {
            lineStyle: {
              color: '#3d5269'
            }
          }
        }
      ],
      series: lineY
    }
    if (charts.lineX.length > 12) {
      option.dataZoom = [{
        show: true,
        start: 0,
        end: 50,
        textStyle: {
          color: "rgba(204,187,225,0)",
        },
        fillerColor: "rgba(67,55,160,0.3)",
        borderColor: "rgba(204,187,225,0.1)"
      }]
    }
    var echart = echarts.init(document.getElementById(charts.domId));
    echart.setOption(option, true);
  },

  initEchart_singLine(params) {
    params.data = params.data.map(item => {
      return( Number(item) || 0);
    })
    var maxY1 = _.max(_.concat(params.data, (Number(params.line_markLine) || 0)));
    var echart = echarts.init(document.getElementById(params.domId))

    var option = {
      tooltip: {
        trigger: 'axis',
        axisPointer: {
          type: 'shadow'
        }
      },
      grid: {
        top: '15%',
        left: '0%',
        right: '0%',
        bottom: '10',
        containLabel: true
      },
      xAxis: [{
        type: 'category',
        axisLine: {
          show: true
        },
        splitArea: {
          color: '#f00',
          lineStyle: {
            color: '#f00'
          },
        },
        axisLabel: {
          color: '#fff',
          interval: 0,
          rotate: 40,
          margin: 12
        },
        splitLine: {
          show: false
        },
        boundaryGap: true,
        data: params.xData,

      }],

      yAxis: [{
        name: '%',
        nameTextStyle: {
          color: '#ddd'
        },
        max: params.maxval ||  maxY1,
        type: 'value',
        splitNumber: 3,
        splitLine: {
          show: true,
          lineStyle: {
            color: 'rgba(255,255,255,0.1)'
          }
        },
        axisLine: {
          show: false,
        },
        axisLabel: {
          show: true,
          textStyle: {
            color: '#d1e6eb',

          },
        },
        axisTick: {
          show: false,
        },
      }],
      series: [
        {
          name: params.name,
          type: 'line',
          smooth: true, //是否平滑
          showAllSymbol: true,
          symbol: 'circle',
          symbolSize: 10,
          label: {
            show: true,
            position: 'top',
            textStyle: {
              color: '#fff',
            },
            formatter: '{c}' + (params.uni || '')

          },
          itemStyle: {
            color: params.color || "#00ca95",
            borderColor: "#fff",
            borderWidth: 1,
            shadowColor: 'rgba(0, 0, 0, .3)',
            shadowBlur: 0,
            shadowOffsetY: 1,
            shadowOffsetX: 1,
          },
          tooltip: {
            show: true
          },
          areaStyle: {
            normal: {
              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
                offset: 0,
                color: params.color ? 'rgba(227,126,57,0.3)' : 'rgba(0,202,149,0.3)'
              },
              {
                offset: 1,
                color: params.color ? 'rgba(227,126,57,0)' : 'rgba(0,202,149,0)'
              }
              ], false),
              shadowColor: 'rgba(0,202,149, 0.9)',
              shadowBlur: 20
            }
          },
          data: params.data,
          markLine: {
            show: true,
            symbol: ['none', "none"],
            silent: true,
            lineStyle: {
                normal: {
                    type: "dashed"
                }
            },
            label: {
                show:  params.line_markLine? true: false,
                position: "insideEndTop",
                formatter: '平均值:{c}',
                fontSize: 13,
              
                padding: [0, 15, 0, 0]
            },
            data: [{
                yAxis:  params.line_markLine || '',
                lineStyle: {
                  width: params.line_markLine ?  1.5 : 0,
                  color:  params.color ? 'rgba(227,126,57,1)' : 'rgba(0,202,149,1)'
                }
            }]
          },
        },
      ]
    };
    
    if (params.data.length > 12) {
      option.dataZoom = [{
        show: true,
        start: 0,
        end: 50,
        bottom: 16,
        textStyle: {
          color: "rgba(204,187,225,0)",
        },
        fillerColor: "rgba(67,55,160,0.3)",
        borderColor: "rgba(204,187,225,0.1)"
      }]
    }
    echart.setOption(option, true);

    this.$resize = function () {
      echart.resize()
    }
  },
  initAnipie(params) {
    var myChart = echarts.init(document.getElementById(params.domId))
    let angle = 0;//角度，用来做简单的动画效果的
    let value = params.value
    var option = {
      title: {
        text: '{a|' + value + '}{c|%}',
        x: 'center',
        y: 'center',
        textStyle: {
          rich: {
            a: {
              fontSize: 16,
              color: '#29EEF3',
              fontWeight: '800'
            },

            c: {
              fontSize: 16,
              color: '#29EEF3',
            }
          }
        }
      },
      series: [{
        name: "ring5",
        type: 'custom',
        coordinateSystem: "none",
        renderItem: function (params, api) {
          return {
            type: 'arc',
            shape: {
              cx: api.getWidth() / 2,
              cy: api.getHeight() / 2,
              r: Math.min(api.getWidth(), api.getHeight()) / 2 * 0.8,
              startAngle: (0 + angle) * Math.PI / 180,
              endAngle: (90 + angle) * Math.PI / 180
            },
            style: {
              stroke: "#0CD3DB",
              fill: "transparent",
              lineWidth: 1.5
            },
            silent: true
          };
        },
        data: [0]
      }, {
        name: "ring5",
        type: 'custom',
        coordinateSystem: "none",
        renderItem: function (params, api) {
          return {
            type: 'arc',
            shape: {
              cx: api.getWidth() / 2,
              cy: api.getHeight() / 2,
              r: Math.min(api.getWidth(), api.getHeight()) / 2 * 0.8,
              startAngle: (180 + angle) * Math.PI / 180,
              endAngle: (270 + angle) * Math.PI / 180
            },
            style: {
              stroke: "#0CD3DB",
              fill: "transparent",
              lineWidth: 1.5
            },
            silent: true
          };
        },
        data: [0]
      }, {
        name: "ring5",
        type: 'custom',
        coordinateSystem: "none",
        renderItem: function (params, api) {
          return {
            type: 'arc',
            shape: {
              cx: api.getWidth() / 2,
              cy: api.getHeight() / 2,
              r: Math.min(api.getWidth(), api.getHeight()) / 2 * 0.9,
              startAngle: (270 + -angle) * Math.PI / 180,
              endAngle: (40 + -angle) * Math.PI / 180
            },
            style: {
              stroke: "#0CD3DB",
              fill: "transparent",
              lineWidth: 1.5
            },
            silent: true
          };
        },
        data: [0]
      }, {
        name: "ring5",
        type: 'custom',
        coordinateSystem: "none",
        renderItem: function (params, api) {
          return {
            type: 'arc',
            shape: {
              cx: api.getWidth() / 2,
              cy: api.getHeight() / 2,
              r: Math.min(api.getWidth(), api.getHeight()) / 2 * 0.9,
              startAngle: (90 + -angle) * Math.PI / 180,
              endAngle: (220 + -angle) * Math.PI / 180
            },
            style: {
              stroke: "#0CD3DB",
              fill: "transparent",
              lineWidth: 1.5
            },
            silent: true
          };
        },
        data: [0]
      }, {
        name: "ring5",
        type: 'custom',
        coordinateSystem: "none",
        renderItem: function (params, api) {
          let x0 = api.getWidth() / 2;
          let y0 = api.getHeight() / 2;
          let r = Math.min(api.getWidth(), api.getHeight()) / 2 * 0.9;
          let point = getCirlPoint(x0, y0, r, (90 + -angle))
          return {
            type: 'circle',
            shape: {
              cx: point.x,
              cy: point.y,
              r: 4
            },
            style: {
              stroke: "#0CD3DB",//粉
              fill: "#0CD3DB"
            },
            silent: true
          };
        },
        data: [0]
      }, {
        name: "ring5",  //绿点
        type: 'custom',
        coordinateSystem: "none",
        renderItem: function (params, api) {
          let x0 = api.getWidth() / 2;
          let y0 = api.getHeight() / 2;
          let r = Math.min(api.getWidth(), api.getHeight()) / 2 * 0.9;
          let point = getCirlPoint(x0, y0, r, (270 + -angle))
          return {
            type: 'circle',
            shape: {
              cx: point.x,
              cy: point.y,
              r: 4
            },
            style: {
              stroke: "#0CD3DB",      //绿
              fill: "#0CD3DB"
            },
            silent: true
          };
        },
        data: [0]
      }, {
        name: '吃猪肉频率',
        type: 'pie',
        radius: ['70%', '55%'],
        silent: true,
        clockwise: true,
        startAngle: 90,
        z: 0,
        zlevel: 0,
        label: {
          normal: {
            position: "center",

          }
        },
        data: [{
          value: 100,
          name: "",
          itemStyle: {
            normal: {
              color: { // 完成的圆环的颜色
                colorStops: [{
                  offset: 0,
                  color: '#4FADFD' // 0% 处的颜色
                }, {
                  offset: 1,
                  color: '#28E8FA' // 100% 处的颜色
                }]
              },
            }
          }
        },
        {
          value: 0,
          name: "",
          label: {
            normal: {
              show: false
            }
          },
          itemStyle: {
            normal: {
              color: "#173164"
            }
          }
        }
        ]
      },



      ]
    };

    //获取圆上面某点的坐标(x0,y0表示坐标，r半径，angle角度)
    function getCirlPoint(x0, y0, r, angle) {
      let x1 = x0 + r * Math.cos(angle * Math.PI / 180)
      let y1 = y0 + r * Math.sin(angle * Math.PI / 180)
      return {
        x: x1,
        y: y1
      }
    }

    function draw() {
      angle = angle + 3
      myChart.setOption(option, true)
      //window.requestAnimationFrame(draw);
    }
    if (window[params.domId]) {
      clearInterval(window[params.domId])
    };
    window[params.domId] = setInterval(function () {
      //用setInterval做动画感觉有问题
      draw()
    }, 100);

  },
  init_gauge(charts) {

    var option = {
      series: [{
        name: '',
        type: 'gauge',
        radius: '88%',
        startAngle: 210,
        endAngle: -30,
        min: 0,
        max: 100,
        axisLine: {
          show: true,
          lineStyle: {
            width: 10,
            color: [
              [1, new echarts.graphic.LinearGradient(
                  0, 1, 1, 0, [{
                    offset: 0,
                    color: 'rgba(34,132,206, 0.8)',
                  },
                  {
                    offset: 1,
                    color: 'rgba(0,255,255,0.8)',
                  }
                ]
                )
              ],
              [
                1, 'rgba(255,255,255,.0)'
              ]
            ]
          }
        },
        axisTick: {
          show: 0,
        },
        splitLine: {
          show: 0,
        },
        axisLabel: {
          show: 0
        },
        pointer: {
          show: false,
        },
        detail: {
          show: true,
          offsetCenter: [0, 0],
          formatter: function (params) {
            return charts.value + (charts.unit || '')
          },
          textStyle: {
            fontSize: 18,
            fontWeight: '800',
            color: '#f2ca0e'
          }
        },
        itemStyle: {
          color: 'rgba(255, 36, 74,.3)',
        },
        data: [{
          value: 100
        }]
      }]
    }

    var echart = echarts.init(document.getElementById(charts.domId));
    echart.setOption(option, true);
  },

  initEchart_barLine2(data) {
    var echart = echarts.init(document.getElementById(data.domId))
    var option = {
      tooltip: {
        trigger: "axis",
        axisPointer: {
          type: "shadow",
          label: {
            show: true
          }
        }
      },
      grid: {
        left: "10",
        top: "40",
        right: "10",
        bottom: "10",
        containLabel: true
      },
      legend: {
        data: data.legend,
        top: 2,

        textStyle: {
          color: "#fff",
          fontSize: 12,
          lineHeight: 14,
        }
      },
      xAxis: {
        data: data.xData,
        axisLine: {
          show: true, //隐藏X轴轴线
          lineStyle: {
            color: "#3d5269",
            width: 1
          }
        },
        axisTick: {
          show: true, //隐藏X轴刻度
          alignWithLabel: true
        },
        axisLabel: {
          show: true,
          textStyle: {
            color: "#fff", //X轴文字颜色
            fontSize: 12
          },
          margin: 12,
          interval: 0,
          rotate: 40
        }
      },
      yAxis: [{
        type: "value",
        position: "top",
        name: data.uni ? data.uni : "(数量)",
        nameTextStyle: {
          color: "#ddd",
          fontSize: 12
        },
        splitNumber: 3,
        splitLine: {
          show: true,
          lineStyle: {
            width: 1,
            color: "#3d5269"
          }
        },
        axisTick: {
          show: false
        },
        axisLine: {
          show: false
        },
        axisLabel: {
          show: true,
          textStyle: {
            color: "#ddd",
            fontSize: 12
          }
        }
      },
      {
        type: "value",
        name: data.lineData && data.lineData.length ? (data.unit || "数量") : '',
        splitNumber: 3,
        nameTextStyle: {
          color: "#ddd",
          fontSize: 12
        },
        position: "top",
        splitLine: {
          show: false
        },
        axisTick: {
          show: false
        },
        axisLine: {
          show: false,
          lineStyle: {
            color: "#396A87",
            width: 1
          }
        },
        axisLabel: {
          show: true,
          formatter: "{value}", //右侧Y轴文字显示
          textStyle: {
            color: "#ddd",
            fontSize: 12
          }
        }
      }
      ],
      series: [{
        name: data.legend[0],
        type: "bar",
        barMaxWidth: 14,
        itemStyle: {
          normal: {
            label: {
              show: true, //开启显示
              position: 'top', //在上方显示
              textStyle: { //数值样式
                color: "rgba(250,250,250,0.8)",
                fontSize: 12,
                fontWeight: 600
              },
              formatter: ('{c}' + (data.uni || ''))
            },
            color: new echarts.graphic.LinearGradient(0, 0, 1, 1, [{
              offset: 0,
              color: 'rgba(15,197,243,0.8)'
            }, {
              offset: 1,
              color: 'rgba(15,197,243,0)'
            }]),
            borderColor: new echarts.graphic.LinearGradient(0, 0, 1, 1, [{
              offset: 0,
              color: 'rgba(180,240,255,1)'
            }, {
              offset: 1,
              color: 'rgba(15,197,243,0.3)'
            }]),
            borderWidth: 1
          }
        },
        data: data.barData[0]
      },

      {
        name: data.legend[1],
        type: "bar",
        barGap: "50%",
        barMaxWidth: 14,
        itemStyle: {
          normal: {
            label: {
              show: true, //开启显示
              position: 'top', //在上方显示
              textStyle: { //数值样式
                color: "rgba(250,250,250,0.8)",
                fontSize: 12,
                fontWeight: 600
              },
              formatter: ('{c}' + (data.uni || ''))
            },
            
            color: new echarts.graphic.LinearGradient(0, 0, 1, 1, [{
              offset: 0,
              color: 'rgba(227,161,96,0.8)'
            }, {
              offset: 1,
              color: 'rgba(227,161,96,0)'
            }]),
            borderColor: new echarts.graphic.LinearGradient(0, 0, 1, 1, [{
              offset: 0,
              color: 'rgba(227,161,96, 1)'
            }, {
              offset: 1,
              color: 'rgba(227,161,96,0.3)'
            }]),
            borderWidth: 1
          }
        },
        data: data.barData[1]
      },

      {
        name: data.legend[2],
        type: "line",
        smooth: true, //是否平滑
        yAxisIndex: 1, //使用的 y 轴的 index，在单个图表实例中存在多个 y轴的时候有用
        showAllSymbol: true, //显示所有图形。
        symbol: "circle", //标记的图形为实心圆
        symbolSize: 5, //标记的大小
        itemStyle: {
          //折线拐点标志的样式
          color: "#e6701f",
          borderColor: "#e6701f",
          width: 2,
          shadowColor: "#26D9FF",
          shadowBlur: 2
        },
        lineStyle: {
          color: "#e6701f",
          width: 2,
          shadowBlur: 2
        },
        data: data.lineData
      }
      ]
    }
    if (data.xData.length > 12) {
      option.dataZoom = [{
        show: true,
        start: 0,
        end: 50,
        bottom: 16,
        textStyle: {
          color: "rgba(204,187,225,0)",
        },
        fillerColor: "rgba(67,55,160,0.3)",
        borderColor: "rgba(204,187,225,0.1)"
      }]
    };
    echart.setOption(option, true);
  },

  initEchart_sbar (data) {
    var echart = echarts.init(document.getElementById(data.domId))
    var option = {
      tooltip: {
        trigger: "axis",
        axisPointer: {
          type: "shadow",
          label: {
            show: true
          }
        }
      },
      grid: {
        left: "10",
        top: "40",
        right: "10",
        bottom: "10",
        containLabel: true
      },
      xAxis: {
        data: data.xData,
        axisLine: {
          show: true, //隐藏X轴轴线
          lineStyle: {
            color: "#3d5269",
            width: 1
          }
        },
        axisTick: {
          show: true, //隐藏X轴刻度
          alignWithLabel: true
        },
        axisLabel: {
          show: true,
          textStyle: {
            color: "#fff", //X轴文字颜色
            fontSize: 12
          },
          margin: 12,
          interval: 0,
          rotate: 40
        }
      },
      yAxis: [{
        type: "value",
        position: "top",
        name: data.uni ? data.uni : "数量",
        nameTextStyle: {
          color: "#ddd",
          fontSize: 12
        },
        splitNumber: 3,
        splitLine: {
          show: true,
          lineStyle: {
            width: 1,
            color: "#3d5269"
          }
        },
        axisTick: {
          show: false
        },
        axisLine: {
          show: false
        },
        axisLabel: {
          show: true,
          textStyle: {
            color: "#ddd",
            fontSize: 12
          }
        }
      }
      ],
      series: [{
          name: data.name,
          type: "bar",
          barMaxWidth: 20,
          itemStyle: {
            normal: {
              label: {
                show: true, //开启显示
                position: 'top', //在上方显示
                textStyle: { //数值样式
                  color: "rgba(250,250,250,0.8)",
                  fontSize: 13,
                  fontWeight: 600
                },
                formatter: ('{c}' + (data.uni || ''))
              },
             color: new echarts.graphic.LinearGradient(0, 0, 1, 1, [{
                offset: 0,
                color: 'rgba(227,161,96, 0.8)'
              }, {
                offset: 1,
                color: 'rgba(227,161,96,0.1)'
              }]),
              borderColor: new echarts.graphic.LinearGradient(0, 0, 1, 1, [{
                offset: 0,
                color: 'rgba(227,161,96, 1)'
              }, {
                offset: 1,
                color: 'rgba(227,161,96,0.3)'
              }]),
              borderWidth: 1
            }
          },
          data: data.barData
        }
      ]
    }
    if (data.xData.length > 12) {
      option.dataZoom = [{
        show: true,
        start: 0,
        end: 50,
        bottom: 16,
        textStyle: {
          color: "rgba(204,187,225,0)",
        },
        fillerColor: "rgba(67,55,160,0.3)",
        borderColor: "rgba(204,187,225,0.1)"
      }]
    };
    echart.setOption(option, true);
  },

  initEchart_barLine(data) {
    var echart = echarts.init(document.getElementById(data.domId))
    data.barData = data.barData.map(item => {
      return( Number(item) || 0)
    })
    var maxY1 = _.max(_.concat(data.barData, (Number(data.bar_markLine) || 0)));
    var option = {
      tooltip: {
        trigger: "axis",
        axisPointer: {
          type: "shadow",
          label: {
            show: true
          }
        }
      },
      grid: {
        left: "0",
        top: "20%",
        right: "0",
        bottom: "0",
        containLabel: true
      },
      legend: {
        data: data.legend,
        textStyle: {
          color: "#fff",
          fontSize: 12
        }
      },
      xAxis: {
        data: data.xData,
        axisLine: {
          show: true, //隐藏X轴轴线
          lineStyle: {
            color: "#3d5269",
            width: 1
          }
        },
        axisTick: {
          show: true, //隐藏X轴刻度
          alignWithLabel: true
        },
        axisLabel: {
          show: true,
          textStyle: {
            color: "#fff", //X轴文字颜色
            fontSize: 12
          },
          margin: 12,
          interval: 0,
          rotate: 40
        }
      },
      yAxis: [{
        max: maxY1,
        type: "value",
        position: "top",
        name: data.uni ? data.uni : "(数量)",
        nameTextStyle: {
          color: "#ddd",
          fontSize: 12
        },
        splitNumber: 3,
        splitLine: {
          show: true,
          lineStyle: {
            width: 1,
            color: "#3d5269"
          }
        },
        axisTick: {
          show: false
        },
        axisLine: {
          show: false
        },
        axisLabel: {
          show: true,
          textStyle: {
            color: "#ddd",
            fontSize: 12
          }
        }
      },
      {
        type: "value",
        name: data.lineData && data.lineData.length ? (data.unit ||  "(%)") : '',
        splitNumber: 2,
        nameTextStyle: {
          color: "#ddd",
          fontSize: 12
        },
        position: "top",
        splitLine: {
          show: false
        },
        axisTick: {
          show: false
        },
        axisLine: {
          show: false,
          lineStyle: {
            color: "#396A87",
            width: 1
          }
        },
        axisLabel: {
          show: true,
          formatter: "{value}", //右侧Y轴文字显示
          textStyle: {
            color: "#ddd",
            fontSize: 12
          }
        }
      }
      ],
      series: [
      {
        name:data.legend[0] ||  'IPTV质差用户量',
        type: "bar",
        barMaxWidth: 18,
        itemStyle: {
          normal: {
            label: {
              show: true, //开启显示
              position: 'top', //在上方显示
              textStyle: { //数值样式
                color: "rgba(250,250,250,0.8)",
                fontSize: 13,
                fontWeight: 600
              },
              formatter: ('{c}' + (data.uni || ''))
            },
            color: new echarts.graphic.LinearGradient(0, 0, 1, 1, [{
              offset: 0,
              color: 'rgba(15,197,243,0.8)'
            }, {
              offset: 1,
              color: 'rgba(15,197,243,0)'
            }]),
            borderColor: new echarts.graphic.LinearGradient(0, 0, 1, 1, [{
              offset: 0,
              color: 'rgba(180,240,255,1)'
            }, {
              offset: 1,
              color: 'rgba(15,197,243,0.3)'
            }]),
            borderWidth: 1
          }
        },
        data: data.barData,
        markLine: {
          show: false,
          symbol: ['none',  "none"],
          silent: true,
          lineStyle: {
              normal: {
                  type: "dashed"
              }
          },
          label: {
              show:  data.bar_markLine? true: false,
              position: "insideEndTop",
              formatter: (data.bar_markname || '') +  '平均值:{c}',
              fontSize: 13,
              color: '#bce3f5',
              padding: [0, 15, 0, 0]
          },
          data: [{
              yAxis:  data.bar_markLine || '',
              lineStyle: {
                  width: data.bar_markLine ?  1.5 : 0,
                  color: "rgba(15,197,243,1)"
              }
          }]
       }
      },

      {
        name:data.legend[1] || "IPTV质差用户占比",
        type: "line",
        yAxisIndex: 1, //使用的 y 轴的 index，在单个图表实例中存在多个 y轴的时候有用
        showAllSymbol: true, //显示所有图形。
        symbol: "circle", //标记的图形为实心圆
        symbolSize: 5, //标记的大小
        itemStyle: {
          //折线拐点标志的样式
          color: "rgba(237,161,54, 1)",
          borderColor: "rgba(237,161,54, 0.8)",
          width: 2,
          shadowColor: "rgba(237,161,54, 1)",
          shadowBlur: 2
        },
        lineStyle: {
          color: "rgba(237,161,54, 0.8)",
          width: 2,
          shadowBlur: 2
        },
        data: data.lineData,
        markLine: {
          show: false,
          symbol: ['none', "none"],
          silent: true,
          lineStyle: {
              normal: {
                  type: "dashed"
              }
          },
          label: {
              show:  data.line_markLine? true: false,
              position: "insideEndTop",
              formatter:(data.line_markname || '')  +  '平均值:{c}',
              fontSize: 13,
             
              padding: [0, 15, 0, 0]
          },
          data: [{
              yAxis:  data.line_markLine || '',
              lineStyle: {
                  width: data.line_markLine ?  1.5 : 0,
                  color: "rgba(237,161,54, 1)"
              }
          }]
       }
      }
      ]
    }
    if (data.xData.length > 12) {
      option.dataZoom = [{
        show: true,
        start: 0,
        end: 50,
        bottom: 16,
        textStyle: {
          color: "rgba(204,187,225,0)",
        },
        fillerColor: "rgba(67,55,160,0.3)",
        borderColor: "rgba(204,187,225,0.1)"
      }]
    };
    echart.setOption(option, true);
  },

}