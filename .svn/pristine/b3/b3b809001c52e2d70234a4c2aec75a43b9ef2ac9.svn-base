<template>
  <div id="app">
    <div style="width: 400px; height: 400px" class="echarts" ref="mycolumnar"></div>
  </div>
</template>

<script>
import * as echarts from 'echarts'
export default {
  name: 'HelloColumnar',

  data() {
    return {}
  },

  mounted() {
    var myChart = echarts.init(this.$refs.mycolumnar)
    myChart.setOption({
      // backgroundColor: "#323a5e",
      tooltip: {
        trigger: 'axis',
        axisPointer: {
          // 坐标轴指示器，坐标轴触发有效
          type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'
        },
      },
      grid: {
        left: '5%',
        right: '4%',
        bottom: '14%',
        top: '50%',
        containLabel: true,
      },
      legend: {
        data: ['2.1G', '3.5G'],
        right: 4,
        top: 170,
        textStyle: {
          color: '#fff',
        },
        itemWidth: 12,
        itemHeight: 10,
        // itemGap: 35
      },
      xAxis: {
        type: 'category',
        data: ['5G终端聚焦区域', '5G高倒流', '5G终端聚焦区域', '口碑场景保障', '其他'],
        axisLine: {
          lineStyle: {
            color: 'white',
          },
        },
        axisTick: {
          alignWithLabel: true, //柱状图中心是否对齐刻度位置
          show: true, //不显示刻度
        },
        axisLabel: {
          interval: 0,
          formatter: function (value) {
            var ret = '' //拼接加\n返回的类目项
            var maxLength = 4 //每项显示文字个数
            var valLength = value.length //X轴类目项的文字个数
            var rowN = Math.ceil(valLength / maxLength) //类目项需要换行的行数
            if (rowN > 1) {
              //如果类目项的文字大于5,
              for (var i = 0; i < rowN; i++) {
                var temp = '' //每次截取的字符串
                var start = i * maxLength //开始截取的位置
                var end = start + maxLength //结束截取的位置
                //这里也可以加一个是否是最后一行的判断，但是不加也没有影响，那就不加吧
                temp = value.substring(start, end) + '\n'
                ret += temp //凭借最终的字符串
              }
              return ret
            } else {
              return value
            }
          },
        },
      },

      yAxis: {
        type: 'value',
        max: '2000',
        axisLine: {
          show: false,
          lineStyle: {
            color: 'white',
          },
        },
        splitLine: {
          show: true,
          lineStyle: {
            color: 'rgba(255,255,255,0.3)',
          },
        },
        axisLabel: {},
      },

      series: [
        {
          name: '2.1G',
          type: 'bar',
          barWidth: '15%',
          itemStyle: {
            normal: {
              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                {
                  offset: 0,
                  color: '#fccb05',
                },
                {
                  offset: 1,
                  color: '#f5804d',
                },
              ]),
              barBorderRadius: 12,
            },
          },
          data: [190, 160, 211, 346.6, 1591.8],
        },

        {
          name: '3.5G',
          type: 'bar',
          barWidth: '15%',
          itemStyle: {
            normal: {
              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                {
                  offset: 0,
                  color: '#248ff7',
                },
                {
                  offset: 1,
                  color: '#6851f1',
                },
              ]),
              barBorderRadius: 11,
            },
          },
          data: [290, 245, 168, 289.4, 526.8],
        },
      ],
    })
  },

  methods: {},
}
</script>

<style lang="less" scoped></style>
