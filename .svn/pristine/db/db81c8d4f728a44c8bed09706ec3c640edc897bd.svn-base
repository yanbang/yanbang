<!--  -->
<template>
  <div :id = "domid" class = "echartbox">
  </div>
</template>

<script>
import echarts from 'echarts';

export default {
  props: ['domid', 'edata'],
  data () {
    return {
      myChart: null,
      option: {
          title: {
              show: false
          },
          legend: {
            show: false,
            right: 0,
            top: 10,
            textStyle: {
              color: '#fff',
              fontSize: 12
            },
            data: ['本月', '上月']
          },
          tooltip: {
              trigger: 'axis',
              axisPointer: {
                  lineStyle: {
                      color: {
                          type: 'linear',
                          x: 0,
                          y: 0,
                          x2: 0,
                          y2: 1,
                          colorStops: [{
                              offset: 0,
                              color: 'rgba(0, 255, 233,0)'
                          }, {
                              offset: 0.5,
                              color: 'rgba(255, 255, 255,1)',
                          }, {
                              offset: 1,
                              color: 'rgba(0, 255, 233,0)'
                          }],
                          global: false
                      }
                  },
              },
          },
          grid: {
              top: '44px',
              left: '5%',
              right: '5%',
              bottom: '2%',
              containLabel: true
          },
          xAxis:{
              type: 'category',
              axisLine: {
                  show: true
              },
              axisLabel: {
                  color: '#90a1d4',
                  fontWeight: '800',
                  fontSize: 13
              },
              splitLine: {
                  show: false
              },
              boundaryGap: false,
              data: [],

          },
          yAxis: [{
              type: 'value',
              show: true,
              axisLine: {
                 show: false
              },
               axisLabel: {
                show: false 
              },
               splitLine: {
                 lineStyle: {
                   color: '#1d4f88'
                 }
               }
          }],
          series: [{
                  name: '本月',
                  type: 'line',
                  smooth: true, //是否平滑
                  showAllSymbol: true,
                  symbol: 'circle',
                  symbolSize: 5,
                  lineStyle: {
                      normal: {
                          color: "#FFBC0D",
                          shadowColor: 'rgba(0, 0, 0, 0)',
                          shadowBlur: 0,
                          shadowOffsetY: 5,
                          shadowOffsetX: 5,
                      },
                  },
                 
                  label: {
                      show: true,
                      position: 'top',
                      textStyle: {
                          color: '#efdf1a',
                          fontSize: 12,
                      }
                  },
                  itemStyle: {
                      color: "#FFBC0D",
                      borderColor: "rgb(108,78,0)",
                      borderWidth: 0,
                      shadowColor: 'rgba(0, 0, 0, 0)',
                      shadowBlur: 0,
                      shadowOffsetY: 0,
                      shadowOffsetX: 0,
                  },
                  areaStyle: {
                    normal: {
                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                            {
                                offset: 0,
                                color: '#f1c45159'
                            },
                            {
                                offset: 1,
                                color: '#f1c4511c'
                            }
                        ], false),
                    }
                 },

                  
                  
                  data: []
              },
              {
                  name: '上月',
                  type: 'line',
                  smooth: true, //是否平滑
                  showAllSymbol: true,
                  symbol: 'circle',
                  symbolSize: 5,
                  lineStyle: {
                      normal: {
                          color: "#41B5FF",
                          shadowColor: 'rgba(0, 0, 0, 0)',
                          shadowBlur: 0,
                          shadowOffsetY: 5,
                          shadowOffsetX: 5,
                      },
                  },
                  label: {
                      show: false,
                      position: 'top',
                      textStyle: {
                          color: '#fff',
                          fontSize: 12
                      }
                  },
                  itemStyle: {
                      color: "#00DAFF",
                      borderColor: "rgb(0,115,100)",
                      borderWidth: 0,
                      shadowColor: 'rgba(0, 0, 0, 0)',
                      shadowBlur: 0,
                      shadowOffsetY: 0,
                      shadowOffsetX: 0,
                  },
                  areaStyle: {
                    normal: {
                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                            {
                                offset: 0,
                                color: 'rgba(4, 174, 253, .5)'
                            },
                            {
                                offset: 1,
                                color: 'rgba(4, 174, 253, 0)'
                            }
                        ], false),
                    }
                 },
                  data: []
              },
          ]
      }
    }
  },
  components: {},
  mounted () {
      var self = this;
      this.$nextTick(() => {
          self.myChart = echarts.init(document.getElementById(this.domid));
          self.option.xAxis.data = self.xdata || [];
           if (self.edata.title && self.edata.title.length > 0) {
                 self.option.legend.show = true;
                 self.option.series[0].name = self.edata.title[0]
                 self.option.series[1].name = self.edata.title[1]
                 self.option.legend.data = self.edata.title;
                 self.option.series[1].data = self.vdata[1] || []
            }
            if (self.vdata && self.vdata.length > 0) {
                self.option.series[0].data = self.vdata[0]
                // self.option.series[1].data = self.vdata[1]
            }
         self.myChart.setOption(this.option);
          window.setTimeout(() => {
           self.myChart.resize()
          }, 1000)
          
      })
   
  },
  watch: {
    edata: {
        handler (val) {  
            var self = this;
            if (val.title && val.title.length > 0) {
                 self.option.legend.show = true;
                 self.option.legend.data = val.title;
                 self.option.series[0].name = val.title[0]
                 self.option.series[1].name = val.title[1]
                 self.option.series[1].data = self.vdata[1] || []
            }
            self.option.xAxis.data = self.xdata || [];
            if (self.vdata && self.vdata.length > 0) {
                self.option.series[0].data = self.vdata[0]
                
            };
            if (!self.myChart) {
                self.myChart = echarts.init(document.getElementById(this.domid));
            }
            self.myChart.setOption(this.option, true);
            this.$nextTick(() => {
                self.myChart.resize()
            })
       },
       deep: true
    }
  },
  computed: {
      xdata () {
        if (this.edata){
             return this.edata.xdata || []
        } else {
            return []
        }
       
      },
      vdata () {
          if (this.edata){
             return this.edata.vdata || []
        } else {
            return []
        }
        
      }
  },
  methods: {}
}
</script>

<style lang='css' scoped>
.echartbox {
  width: 100%;
  height: 100%;
}
</style>