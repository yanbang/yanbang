<template>
  <div>
    <div class="dialogCon">
      <div class="dialogTableBg">
        <div class="dialogTitle">各地市发展完成详情</div>
          <div style="margin-left: 200px;margin-top: -30px">
            <div v-if="selectChanlTypeForDetai==='6'||selectChanlTypeForDetai==='8'||selectChanlTypeForDetai==='7'">
              <div class="daydiv2" :class="{ active2: type == 0 }" @click="clickdayType2('0')">
                移宽融合
              </div>
              <div class="daydiv2" :class="{ active2: type == 1 }" @click="clickdayType2('1')">
                移移融合
              </div>
              <div class="daydiv2" :class="{ active2: type == 2 }" @click="clickdayType2('2')">
                金融融合
              </div>
            </div>
        </div>
        <el-table :key="dialogTableKey" :data="dialogTable" @sort-change='tableSortChange'
                  style="width: 60%; height:608px;overflow: auto;float: left">
          <el-table-column prop="regionName" label="地区"> </el-table-column>
          <el-table-column prop="dayDevTarget" label="日目标"> </el-table-column>
          <el-table-column prop="dayDevNum" label="当日发展"></el-table-column>
          <el-table-column prop="dayDevRate" label="日完成率"  sortable = 'aa'>
            <template slot-scope="scope">
              <span v-if="scope.row.status == 1" style="color: #ffcc00 !important">{{scope.row.dayDevRate}}%</span>
              <span v-else-if="scope.row.status == 2" style="color: #5BE712 !important">{{scope.row.dayDevRate}}%</span>
              <span v-else>{{scope.row.dayDevRate}}%</span>
            </template>
          </el-table-column>
          <el-table-column prop="monDevTarget" label="月目标"> </el-table-column>
          <el-table-column prop="monDevNum" label="月累发展"> </el-table-column>
          <el-table-column prop="monDevRate" label="月完成率"  sortable = 'bb'>
            <template slot-scope="scope">
              <span v-if="scope.row.status == 1" style="color: #ffcc00 !important">{{scope.row.monDevRate}}%</span>
              <span v-else-if="scope.row.status == 2" style="color: #5BE712 !important">{{scope.row.monDevRate}}%</span>
              <span v-else>{{scope.row.monDevRate}}%</span>
            </template>
          </el-table-column>
          <el-table-column prop="qtDevTarget" label="季度目标"> </el-table-column>
          <el-table-column prop="qtDevNum" label="季度累发展"> </el-table-column>
          <el-table-column prop="qtDevRate" label="季度完成率"  sortable = 'cc'>
            <template slot-scope="scope">
              <span v-if="scope.row.status == 1" style="color: #ffcc00 !important">{{scope.row.qtDevRate}}%</span>
              <span v-else-if="scope.row.status == 2" style="color: #5BE712 !important">{{scope.row.qtDevRate}}%</span>
              <span v-else>{{scope.row.qtDevRate}}%</span>
            </template>
          </el-table-column>
        </el-table>
        <div style="float: right;width: 38%;margin-right: 15px;height: 608px">
          <div class="dialogTitle">产能分析</div>
          <div style="float: right;margin-right: 0px;margin-top: -27px">
            <div class="daydiv" :class="{ active: currentIndex == 0 }" @click="clickdayType(0)">
              当日
            </div>
            <div class="daydiv" :class="{ active: currentIndex == 1 }" @click="clickdayType(1)">
              当月
            </div>
            <div class="daydiv" :class="{ active: currentIndex == 2 }" @click="clickdayType(2)">
              季度
            </div>
          </div>
          <el-table :key="dialogTableKey" :data="dialogTableRight" @sort-change='tableSortChange'
                    style=" height:250px;overflow: auto;float: left;display: block">
            <el-table-column prop="regionName" label="营业厅类型"> </el-table-column>
            <el-table-column prop="dayTarget" label="厅均产值"> </el-table-column>
            <el-table-column prop="dayDevelop" label="低于均产能厅数"> </el-table-column>
            <el-table-column prop="monTarget" label="高于均产能厅数"> </el-table-column>
          </el-table>
          <div class="dialogTitle2">趋势分析</div>
          <div id="moCharts" style="width: 600px;height: 300px;"></div>
        </div>
      </div>
    </div>
  </div>

</template>

<script>
import echarts from 'echarts'

export default {
  name: "businessHallDetail",
  props:{
    detalListLeft:Array,
    selectChanlTypeForDetai:String,
    dataListRight:Array,
    trendData:{
      type:Array,
      default:function() {
        return []
      }
    }
  },
  data(){
    return{
      dialogTable:[],
      dialogTableKey:'',
      dialogTableRight:[],
      trendList:[],
      currentIndex:0,
      type:0
    }
  },
  mounted() {
  },
  watch:{
    detalListLeft(){
      this.dialogTable = this.detalListLeft
    },
    dataListRight(){
      this.dataListRight = this.dataListRight
    },

    trendData(val){
      if (val.length > 0){
        this.$nextTick(() => {
          let timeList = []
          let monList = []
          let lastMonList = []
          this.trendList = this.trendData
          this.trendList.forEach(obj => {
            if (obj.name === '当月'){
              obj.value.forEach(obj2 => {
                timeList.push(obj2.xi)
                monList.push(obj2.dayNew)
              })
            }else {
              obj.value.forEach(obj2 => {
                lastMonList.push(obj2.dayNew)
              })
            }
          })
          this.getLineChatrs(timeList,monList,lastMonList)
        })
      }
    }
  },
  methods:{
    clickdayType(type){
      this.currentIndex = type
      if (type === 0){
        this.selectName = '当日发展'
        this.$emit('getTList','d')
      }
      if (type === 1){
        this.selectName = '当月累计'
        this.$emit('getfiveGList','d')
      }
      if (type === 2){
        this.selectName = '当季累计'
        this.$emit('getfiveGList','d')
      }

    },
    clickdayType2(type){
      this.type = type
      if (type === '0'){

        this.$emit('getDetail','6')
      }
      if (type === '1'){
        this.$emit('getDetail','7')
      }
      if (type === '2'){
        this.$emit('getDetail','8')
      }

    },
    //监听顺序方法
    tableSortChange(column){
      const self = this
      let index = 0
      let tmpList = []
      this.allData = this.dialogTable[0]
      let string = column.prop
      this.dialogTable.forEach(obj => {
        if (index !== 0){
          obj[string] = parseFloat(obj[string])
          tmpList.push(obj)
        }
        index = index + 1
      })
      if (column.order === 'descending'){
        this.sortA(tmpList,column.prop)
      } else {
        this.sortB(tmpList,column.prop)
      }

      this.dialogTable.unshift(this.allData)
    },
    sortA(arr,name){
      //外层循环，控制趟数，每一次找到一个最大值
      for (let i = 0; i < arr.length - 1; i++) {
        // 内层循环,控制比较的次数，并且判断两个数的大小
        for (let j = 0; j < arr.length - 1 - i; j++) {
          // 白话解释：如果前面的数大，放到后面(当然是从小到大的冒泡排序)
          if (arr[j][name] > arr[j + 1][name]) {
            let temp = arr[j];
            arr[j] = arr[j + 1];
            arr[j + 1] = temp;
          }
        }

      }
      this.dialogTable = arr
    },
    sortB(arr,name){
      //外层循环，控制趟数，每一次找到一个最大值
      for (let i = 0; i < arr.length - 1; i++) {
        // 内层循环,控制比较的次数，并且判断两个数的大小
        for (let j = 0; j < arr.length - 1 - i; j++) {
          // 白话解释：如果前面的数大，放到后面(当然是从小到大的冒泡排序)
          if (arr[j][name] < arr[j + 1][name]) {
            let temp = arr[j];
            arr[j] = arr[j + 1];
            arr[j + 1] = temp;
          }
        }
      }
      this.dialogTable = arr
    },
    getLineChatrs(time,greenList,yelowList){


      const chartDom = document.getElementById('moCharts');
      const myChart = echarts.init(chartDom);
      let option;
      option = {
        legend: {
          data: ['注销率', '24小时竣工率','48小时竣工率'],
          x: 'right',
          y:'top',
          padding: [0, 50, 0, 0] ,
          textStyle:{
            color: '#02f6fe'
          }
        },
        tooltip: {
          trigger: 'axis',
          axisPointer: { // 坐标轴指示器，坐标轴触发有效
            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
          },
          formatter:function(params){
            //数据格式
            console.log(JSON.stringify(params))
            let relVal = params[0].name + "日<br/>";
            relVal += params[0].seriesName + ' : ' + params[0].value + "<br/>";
            relVal += params[1].seriesName + ' : ' + params[1].value;
            // relVal += params[2].seriesName+ ' : ' + params[2].value+"%";
            return relVal;
          }
        },

        xAxis: {
          data:time ,
          axisTick: {
            show: true
          },
          axisLabel: {
            color: '#5EA2ED',
            interval: 0
          },

          axisLine: {
            show: true,
            lineStyle: {
              color: '#1B5BBA',
            }
          }
        },
        yAxis: {
          type: 'value',
          axisTick: {
            inside: true
          },
          splitLine: {
            show: false
          },
          axisLabel: {
            color: '#02F6FF',
            formatter: '{value}\n',
            inside: false,
            textStyle: {
              color: '#02F6FF'
            }
          },
          z: 10
        },
        grid: {
          height: 200
        },
        dataZoom: [{
          type: 'inside',
          throttle: 50
        }],
        series: [
          {
            name: '当月',
            type: 'line',
            smooth: true,
            symbol: 'circle',
            symbolSize: 5,
            sampling: 'average',
            itemStyle: {
              color: '#05FDCB'
            },
            label: {
              normal: {
                show: false,
                position: "top",
                distance:10,
                formatter: "{c}%",
                color: "#ffffff",
                fontSize: 13
              }
            },
            // stack: 'a',
            areaStyle: {
              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
                offset: 0,
                color: 'rgba(5,253,203,0.8)'
              }, {
                offset: 1,
                color: 'rgba(5,253,203,0.1)'
              }])
            },
            data: greenList
          },
          {
            name: '上月',
            type: 'line',
            smooth: true,
            // stack: 'a',
            symbol: 'circle',
            symbolSize: 5,
            sampling: 'average',
            itemStyle: {
              color: '#FFE000'
            },
            label: {
              normal: {
                show: false,
                position: "top",
                distance:10,
                formatter: "{c}%",
                color: "#ffffff",
                fontSize: 13
              }
            },
            areaStyle: {
              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
                offset: 0,
                color: 'rgba(255,224,0,0.8)'
              }, {
                offset: 1,
                color: 'rgba(255,224,0,0.1)'
              }])
            },
            data: yelowList
          }
        ]
      };
      option && myChart.setOption(option);
    }
  }
}
</script>

<style scoped>
.dialogCon{
  padding: 0 50px;
.dialogTitle{

  display: inline-block;
  padding-right: 110px;
  font-size: 24px;
  font-family: MFBanHei;
  font-weight: 400;
  color: #02F6FF;
  background-image: image-set(
    url("~@/assets/images/bigScreen/fullService/Rectangle 561.png") 1x,
    url("~@/assets/images/bigScreen/fullService/Rectangle@2x.png") 2x
  );
  background-repeat: no-repeat;
  background-position: center right;

.title-right{
  color: #218CC8;
div{
  width: 38px;
  height: 30px;
  line-height: 30px;
  text-align: center;
  display: inline-block;
  cursor: pointer;
  background-image: image-set(
    url("~@/assets/images/bigScreen/fullService/left-sub.png") 1x,
    url("~@/assets/images/bigScreen/fullService/left-sub@2x.png") 2x
  );
  background-repeat: no-repeat;
  background-size: 100% 100%;
}
.active{
  color: #02F6FF;
  background-image: image-set(
    url("~@/assets/images/bigScreen/fullService/left-subActive.png") 1x,
    url("~@/assets/images/bigScreen/fullService/left-subActive@2x.png") 2x
  );
}
}
}
.dialogChart{
  width: 100%;
  height: 400px;
  margin-top: 50px;
}
}
/deep/ .el-dialog {
  -webkit-transform: none;
  transform: none;
  left: 0;
  position: relative;
  margin: 0 auto;
  height: 550px;
  background-image: url("~@/assets/images/bigScreen/kuang.png");
  background-size: 100% 100%;
  background-color:rgba(220,38,38,0);
}
/deep/ .el-dialog__body{
  padding: 0px 20px;
}
/deep/ .el-dialog__headerbtn .el-dialog__close{
  color: #fff;
  font-size:24px;
  font-weight: 500;
  margin:2px 20px 0 0;
  border: 2px solid #193987;
  border-radius:5px;
  background:#1E1E88
}
/deep/ .el-table {
   background: rgba(4, 154, 171, .4);
  font-size: 14px !important;
}
/deep/.dialogTableBg .el-table th {
  background: none !important;
  background: url('~@/assets/images/bigScreen/fullService/597bcdc505fa3.png') no-repeat !important;
  background-position: center 11px !important;
  background-size: contain !important;
  text-align: center !important;
  color: #02f6ff !important;
  font-size: 10px !important;
}
/deep/.dialogTableBg1 .el-table th {
  background: rgba(4, 154, 171, .2) !important;
  background-position: center 11px !important;
  background-size: contain !important;
  text-align: left !important;
  color: #fff !important;
  font-size: 12px !important;
  padding-left: 30px;
}
/deep/.dialogTableBg1 .el-table tr {
  background: rgba(4, 154, 171, .4) !important;
  color: #fff !important;
  padding-left: 30px;
}
/deep/.dialogTableBg1 .el-table td {
  padding: 12px 0;
  padding-left: 15px;
  border: rgba(0, 160, 233, .42) solid 1px !important;
  border-top: none !important;
  text-align: left !important;
  border-left: none !important;
}
/deep/.dialogTableBg1 .el-table td:nth-child(2) {
  border-right: none !important;
}
/deep/.dialogTableBg1 .el-table td:nth-child(3) {
  border-right: none !important;
}
/deep/.dialogTableBg1 .el-table tr:last-child td {
  border-bottom: none !important;
}
/deep/ .dialogTableBg1 .tableNullBg tr{
  background:none !important;
}
/deep/.dialogTableBg1 .el-table .el-table__expanded-cell{
  padding: 0 !important;
}
/deep/ .dialogTableBg1 .tableNullBg td{
  padding: 12px 0;
  padding-left: 15px;
}
/deep/ .dialogTableBg1 .tableNullBg td:first-child{
  padding-left: 45px;
}
/deep/.dialogTable .el-table th{
  background: none !important;
  background-position: center 11px !important;
  background-size: contain !important;
  text-align: center !important;
  color: #02f6ff !important;
  font-size: 14px !important;
}
/deep/ .el-table tr {
  background: none !important;
}
/deep/.dialogTable .el-table tbody tr:nth-child(-n+3) {
  width: 100%;
  background-image: url('~@/assets/images/bigScreen/fullService/Rectangle 663.png') !important;
  background-repeat: no-repeat !important;
  background-size: 100% 100%!important;
}
/deep/.dialogTable .el-table td{
  padding: 6px 10px;
  font-size: 14px !important;
  font-family: Microsoft YaHei !important;
}
/deep/.dialogTable .el-table tbody td:nth-child(-n+2) {
  text-align: left !important;
}
/deep/.el-table td {
  background: none !important;
  border: none !important;
  text-align: center !important;
  color: #ffffff;
  font-family: DigifaceWide !important;
  padding: 6px 0;
}
/deep/.dialogTableBg td{
  background: url('~@/assets/images/bigScreen/fullService/Shape 1387.png') no-repeat left !important;
}
/deep/.el-table td:first-child {
  background: none !important;
}
/deep/.dialogTableBg .el-table td:first-child {
  font-family: Microsoft YaHei !important;
}
/deep/ .el-table th.is-leaf,
.el-table td {
  border: none !important;
  color: #ffffff;
}
/deep/.el-table::before {
  height: 0 !important;
}
/deep/.el-table th > .cell {
  display: contents !important;
}
/deep/.el-table .cell {
  padding: 0;
}
/deep/.el-table .ascending .sort-caret.ascending{
  border-bottom-color: #02f6ff;
}

/deep/.el-table .descending .sort-caret.descending{
  border-top-color: #02f6ff;
}
.dialogTitle{
    /*margin-top: -30px;*/
  margin-left: 10px;
  font-family: 'MFBanHei';
  color: #02F6FF;
  font-size: 18px;

}

.dialogTitle2{
  /*margin-top: 10px;*/
  margin-left: 10px;
  font-family: 'MFBanHei';
  color: #02F6FF;
  font-size: 18px;

}

.daydiv{
  width: 38px;
  height: 30px;
  line-height: 30px;
  text-align: center;
  display: inline-block;
  cursor: pointer;
  font-size: 12px;
  color: #218CC8;
  background-image: image-set(
    url("~@/assets/images/bigScreen/fullService/left-sub.png") 1x,
    url("~@/assets/images/bigScreen/fullService/left-sub@2x.png") 2x
  );
  background-repeat: no-repeat;
  background-size: 100% 100%;
}
.active {
  color: #02F6FF;
  font-size: 12px;
  background-image: image-set(
    url("~@/assets/images/bigScreen/fullService/left-subActive.png") 1x,
    url("~@/assets/images/bigScreen/fullService/left-subActive@2x.png") 2x
  );
}
.daydiv2{
  width: 131px;
  height: 52px;
  line-height: 30px;
  text-align: center;
  display: inline-block;
  cursor: pointer;
  font-size: 14px;
  color: #218CC8;
  margin-left: 10px;
  background-image: url("~@/assets/images/bigScreen/fullService/btnbtnbg.png") ;
  /*background-size: 100% 100%;*/
  /*background-image: image-set(*/
  /*  url("~@/assets/images/bigScreen/fullService/btnbtnbg.png")*/
  /*);*/
  background-repeat: no-repeat;
  background-size: 100% 100%;
}
.active2 {
  color: #02F6FF;
  font-size: 14px;
  background-image: url("~@/assets/images/bigScreen/fullService/btbselectb.png") ;
  /*background-image: image-set(*/
  /*  url("~@/assets/images/bigScreen/fullService/btbselectb.png")*/
  /*);*/
}
</style>