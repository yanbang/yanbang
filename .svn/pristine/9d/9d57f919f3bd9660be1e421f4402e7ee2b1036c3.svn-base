import echarts from 'echarts'
import _ from 'lodash'
export default {
  initEchart_barLine(data, callbk) {
    var echart = echarts.init(document.getElementById(data.domId))
    data.barData = data.barData.map(item => {
      return (Number(item) || 0)
    })
    var maxY1 = _.max(_.concat(data.barData, (Number(data.bar_markLine) || 0)));
    var option = {
      tooltip: {
        trigger: "axis",
        axisPointer: {
          type: "shadow",
          label: {
            show: true
          }
        }
      },
      grid: {
        left: "10",
        top: "50",
        right: "10",
        bottom: "0",
        containLabel: true
      },
      legend: {
        data: data.legend,
        textStyle: {
          color: "#fff",
          fontSize: 12
        }
      },
      xAxis: {
        data: data.xData,
        triggerEvent: true,
        axisLine: {
          show: true, //隐藏X轴轴线
          lineStyle: {
            color: "#3d5269",
            width: 1
          }
        },
        axisTick: {
          show: true, //隐藏X轴刻度
          alignWithLabel: true
        },
        axisLabel: {
          show: true,
          textStyle: {
            color: "#fff", //X轴文字颜色
            fontSize: 13
          },
          margin: 12,
          interval: 0,
          rotate: 30
        }
      },
      yAxis: [{
        max: maxY1,
        type: "value",
        position: "top",
        name: '次数',
        nameTextStyle: {
          color: "#ddd",
          fontSize: 12
        },
        splitNumber: 3,
        splitLine: {
          show: true,
          lineStyle: {
            width: 1,
            color: "#3d5269"
          }
        },
        axisTick: {
          show: false
        },
        axisLine: {
          show: false
        },
        axisLabel: {
          show: true,
          textStyle: {
            color: "#ddd",
            fontSize: 12
          }
        }
      },
      {
        type: "value",
        name: '万元',
        splitNumber: 2,
        nameTextStyle: {
          color: "#ddd",
          fontSize: 12
        },
        position: "top",
        splitLine: {
          show: false
        },
        axisTick: {
          show: false
        },
        axisLine: {
          show: false,
          lineStyle: {
            color: "#396A87",
            width: 1
          }
        },
        axisLabel: {
          show: true,
          formatter: "{value}", //右侧Y轴文字显示
          textStyle: {
            color: "#ddd",
            fontSize: 12
          }
        }
      }
      ],
      series: [
        {
          name: data.legend[0],
          type: "bar",
          barMaxWidth: 18,
          itemStyle: {
            normal: {
              label: {
                show: true, //开启显示
                position: 'top', //在上方显示
                textStyle: { //数值样式
                  color: "rgba(250,250,250,0.8)",
                  fontSize: 13,
                  fontWeight: 600
                },
                formatter: ('{c}' + (data.uni || ''))
              },
              color: new echarts.graphic.LinearGradient(0, 0, 1, 1, [{
                offset: 0,
                color: 'rgba(15,197,243,0.8)'
              }, {
                offset: 1,
                color: 'rgba(15,197,243,0)'
              }]),
              borderColor: new echarts.graphic.LinearGradient(0, 0, 1, 1, [{
                offset: 0,
                color: 'rgba(180,240,255,1)'
              }, {
                offset: 1,
                color: 'rgba(15,197,243,0.3)'
              }]),
              borderWidth: 1
            }
          },
          data: data.barData,

        },

        {
          name: data.legend[1],
          type: "line",
          yAxisIndex: 1, //使用的 y 轴的 index，在单个图表实例中存在多个 y轴的时候有用
          showAllSymbol: true, //显示所有图形。
          symbol: "circle", //标记的图形为实心圆
          symbolSize: 5, //标记的大小
          smooth: true,
          itemStyle: {

            //折线拐点标志的样式
            color: "#70ad4a",
            borderColor: "#70ad4a",
            width: 2,
            shadowColor: "#26D9FF",
            shadowBlur: 2,
          },
          lineStyle: {
            color: "#70ad4a",
            width: 2,
            shadowBlur: 2
          },
          data: data.lineData,

        }
      ]
    }
    echart.setOption(option, true);
    echart.on("click", function (param) {
      callbk && callbk(param)
    })
  },

  initPieCat(chart) {
     var rich = {
        aqua: {
            color: "aqua",
            fontSize: 15,
            padding: [4, 0],
            align: 'center'
        },
        white: {
            color: "#fff",
            align: 'center',
            fontSize: 15,
            padding: [4,0 ]
        },
       
        hr: {
            borderColor: '#a2c7f3',
            width: '100%',
            borderWidth: 1,
            height: 0,
        }
    }
    var echart = echarts.init(document.getElementById(chart.domId))
    var colorList = ['#1694c4', '#06d3c4', '#ffbc32', '#2ccc44', '#ff55ac']
    var option = {
      tooltip: {
        show: true
      },
      legend: {
        show: true,
        icon: 'circle',
        // orient: 'vertical',
        // right: 0,
        bottom: '0',
        data: chart.legend,
        textStyle: {
          color: '#fff',
          fontSize: 14,
          lineHeight: 18,
        }
      },
      series: [
      {
        name: '性别',
        hoverAnimation: false,
        type: 'pie',
        center: ["50%", '44%'],
        radius: [0, '44%'],
        label: {
          position: 'inner',
          fontSize: 16
        },
        itemStyle: {
          normal: {
            borderColor: '#fff',
            borderWidth: 1,
           
          }
        },

        selectedMode: 'single',
        data: [{
          value: chart.manval,
          name: '男',
          itemStyle: {color: '#1694c4'}

        },
        {
          value: chart.womanval,
          name: '女',
          itemStyle: {color: '#ff55ac'}
        },
        ]
      },
      {
        name: '年龄',
        type: 'pie',
         center: ["50%", '44%'],
        radius: ['53%', '68%'],

        itemStyle: {
          normal: {
            color: function (params) {
              return colorList[params.dataIndex]
            }
          }
        },
       
        label: {
            normal: {
              formatter: function(params, ticket, callback) {
                  var total = 0; 
                  var percent = 0; 
                  chart.data.forEach(function(value, index, array) {
                      total += (Number(value.value) || 0 )
                  });
                  percent = ((params.value / total) * 100).toFixed(0);
                  return '{white|' + params.name + '}\n{hr|}\n{aqua|' + params.value + '人/}{aqua|' + percent + '%}';
              },
              rich: rich
            },
        },
        labelLine: {
          length: 10,
          length2: 5,
        },
        data: chart.data
      }]
    };
    echart.setOption(option, true);
  },
  initPieCat2(chart) {
      var rich = {
        aqua: {
            color: "aqua",
            fontSize: 15,
            padding: [4, 0],
            align: 'center'
        },
        white: {
            color: "#fff",
            align: 'center',
            fontSize:15,
            padding: [4,0 ]
        },
        twhite: {
            color: "#fff",
            align: 'center',
            fontSize:15,
            padding: [2,0 ]
        },
        taqua: {
            color: "#fec43b",
            fontSize: 20,
            padding: [4, 0],
            fontWeight: '800',
            align: 'center'
        },
       
        hr: {
            borderColor: '#a2c7f3',
            width: '100%',
            borderWidth: 1,
            height: 0,
        }
    }
    var echart = echarts.init(document.getElementById(chart.domId));
    var colorList = ['#1694c4', '#06d3c4', '#ffbc32', '#2ccc44', '#ff55ac'];
    var total = 0; 
    chart.data.forEach(function(value, index, array) {
        total += (Number(value.value) || 0 )
    });
    var option = {
      tooltip: {
        show: true
      },
      legend: {
        show: true,
        icon: 'circle',
        bottom: '0',
        data: chart.legend,
        textStyle: {
          color: '#fff',
          fontSize: 14,
        }
      },
      series: [
        {
          type: 'pie',
          center: ["50%", '45%'],
          radius: [0, '44%'],
          z: 8,
          hoverAnimation: false,
          data: [{
              name: '统计',
              value: '80',
              itemStyle: {
                  normal: {
                      color: 'none'
                  }
              },
              label: {
                  normal: {
                      formatter: function (params) {
                          return   '{twhite|' + chart.name + '}' + '\n' + '{taqua|' + total + '}'  ;
                      },
                      rich: rich,
                      color: '#fff',
                      fontSize: 22,
                      position: 'center',
                      show: true
                  }
              },
              labelLine: {
                  show: false
              }
          }],
      },
      {
        name: chart.name,
        type: 'pie',
        center: ["50%", '45%'],
        radius: ['52%', '65%'],
        itemStyle: {
          normal: {
            color: function (params) {
              return colorList[params.dataIndex]
            }
          }
        },
        label: {
            normal: {
              formatter: function(params) {
                  var total = 0; 
                  var percent = 0; 
                  chart.data.forEach(function(value, index, array) {
                      total += (Number(value.value) || 0 )
                  });
                  percent = ((params.value / total) * 100).toFixed(0);
                  return '{white|' + params.name + '}\n{hr|}\n{aqua|' + params.value + '次/}{aqua|' + percent + '%}';
              },
              rich: rich
            },
        },
        labelLine: {
          length: 5,
          length2: 10,
        },
        data: chart.data
      }]
    };
    echart.setOption(option, true);
  },

 initEchart_barLine2(data) {
    var echart = echarts.init(document.getElementById(data.domId))
    data.barData = data.barData.map(item => {
      return (Number(item) || 0)
    })
    var option = {
      tooltip: {
        trigger: "axis",
        axisPointer: {
          type: "shadow",
          label: {
            show: true
          }
        }
      },
      grid: {
        left: "10",
        top: "40",
        right: "10",
        bottom: "10",
        containLabel: true
      },
      legend: {
        data: data.legend,
        textStyle: {
          color: "#fff",
          fontSize: 12
        }
      },
      xAxis: {
        data: data.xData,
        triggerEvent: true,
        axisLine: {
          show: true, //隐藏X轴轴线
          lineStyle: {
            color: "#3d5269",
            width: 1
          }
        },
        axisTick: {
          show: true, //隐藏X轴刻度
          alignWithLabel: true
        },
        axisLabel: {
          show: true,
          textStyle: {
            color: "#fff", //X轴文字颜色
            fontSize: 14
          },
          interval: 0,
          rotate: 0
        }
      },
      yAxis: [{
        type: "value",
        position: "top",
        name: '数量',
        nameTextStyle: {
          color: "#ddd",
          fontSize: 12
        },
        splitNumber: 3,
        splitLine: {
          show: true,
          lineStyle: {
            width: 1,
            color: "#3d5269"
          }
        },
        axisTick: {
          show: false
        },
        axisLine: {
          show: false
        },
        axisLabel: {
          show: true,
          textStyle: {
            color: "#ddd",
            fontSize: 12
          }
        }
      },
      {
        type: "value",
        name: '同比数量',
        splitNumber: 2,
        nameTextStyle: {
          color: "#ddd",
          fontSize: 12
        },
        position: "top",
        splitLine: {
          show: false
        },
        axisTick: {
          show: false
        },
        axisLine: {
          show: false,
          lineStyle: {
            color: "#396A87",
            width: 1
          }
        },
        axisLabel: {
          show: true,
          formatter: "{value}", //右侧Y轴文字显示
          textStyle: {
            color: "#ddd",
            fontSize: 12
          }
        }
      }
      ],
      series: [
        {
          name: data.legend[0],
          type: "bar",
          barMaxWidth: 18,
          itemStyle: {
            normal: {
              label: {
                show: true, //开启显示
                position: 'top', //在上方显示
                textStyle: { //数值样式
                  color: "rgba(15,197,243,1)",
                  fontSize: 14,
                  fontWeight: 600
                },
                formatter: ('{c}' + (data.uni || ''))
              },
              color: new echarts.graphic.LinearGradient(0, 0, 1, 1, [{
                offset: 0,
                color: 'rgba(15,197,243,0.8)'
              }, {
                offset: 1,
                color: 'rgba(15,197,243,0)'
              }]),
              borderColor: new echarts.graphic.LinearGradient(0, 0, 1, 1, [{
                offset: 0,
                color: 'rgba(180,240,255,1)'
              }, {
                offset: 1,
                color: 'rgba(15,197,243,0.3)'
              }]),
              borderWidth: 1
            }
          },
          data: data.barData,

        },

        {
          name: data.legend[1],
          type: "line",
          yAxisIndex: 1, //使用的 y 轴的 index，在单个图表实例中存在多个 y轴的时候有用
          showAllSymbol: true, //显示所有图形。
          symbol: "circle", //标记的图形为实心圆
          symbolSize: 5, //标记的大小
          smooth: true,
          itemStyle: {
            //折线拐点标志的样式
            color: "#f26348",
            borderColor: "#f26348",
            width: 2,
            shadowColor: "#f26348",
            shadowBlur: 2,
          },
          lineStyle: {
            color: "#f26348",
            width: 2,
            shadowBlur: 2,
            normal: {
                type: "dashed"
            }
          },
          data: data.lineData,

        }
      ]
    }
    echart.setOption(option, true);
  },
}