<!-- 水球 -->
<template>
  <div :id="domid" class="echartbox"></div>
</template>

<script>
import echarts from 'echarts'
require('echarts-liquidfill');
export default {
  props: ['pvalue', 'domid'],
  data() {
    var self = this;
    return {
      myChart: null,
      option: {
        title: {
          show: false,
          text: '',
          textStyle: {
            fontSize: 10,
            fontWeight: '500',
            color: '#6ef3fc'
          },
          x: 'center',
          y: '35%'
        },

        series: [
          {
            type: 'liquidFill',
            radius: '80%',
            center: ['50%', '50%'],
            data: [],
            backgroundStyle: {
              color: [{
                    type: 'linear',
                    x: 0,
                    y: 1,
                    x2: 0,
                    y2: 0,
                    colorStops: [{
                        offset: 1,
                        color: ['rgba(52, 255, 186, .1)'], // 0% 处的颜色
                    }, {
                        offset: 0.5,
                        color: ['rgba(52, 255, 186, .5)'], // 50% 处的颜色
                    }, {
                        offset: 0,
                        color: ['rgba(52, 255, 186, .1)'], // 100% 处的颜色
                    }],
                    global: false // 缺省为 false
                }],
            },
            outline: {
              show: true,
              borderDistance: 4,
              itemStyle: {
                borderWidth: 2,
                borderColor: {
                  type: 'linear',
                  x: 1,
                  y: 0,
                  x2: 0,
                  y2: 0,
                  colorStops: [
                    {
                      offset: 0,
                      color: 'rgba(212, 252, 125, 1)'
                    },
                    {
                      offset: 0.5,
                      color: 'rgba(2, 193, 131, 1)'
                    },
                    {
                      offset: 1,
                      color: 'rgba(2, 193, 131, 1)'
                    }
                  ],
                  globalCoord: false
                },
                shadowBlur: 10,
                shadowColor: 'rgba(13, 13, 46, 1)'
              }
            },
             color: [{
                    type: 'linear',
                    x: 0,
                    y: 1,
                    x2: 0,
                    y2: 0,
                    colorStops: [{
                        offset: 1,
                        color: ['rgba(52, 255, 186, .1)'], // 0% 处的颜色
                    }, {
                        offset: 0.5,
                        color: ['rgba(52, 255, 186, .5)'], // 50% 处的颜色
                    }, {
                        offset: 0,
                        color: ['rgba(52, 255, 186, .1)'], // 100% 处的颜色
                    }],
                    global: false // 缺省为 false
                }],
            label: {
              normal: {
                formatter: self.pvalue + '%',
                fontSize: 16,
                color: 'rgba(134, 228, 245, 1)'
              }
            }
          }
         
        ]
      }
    }
  },
  components: {},
  mounted() {
    var self = this
    this.$nextTick(() => {
      self.option.series[0].label.normal.formatter = self.pvalue == '-' ?   self.pvalue :  self.pvalue + '%';
      self.option.series[0].data = self.dataSets;
      self.myChart = echarts.init(document.getElementById(self.domid));
      self.myChart.setOption(self.option, true)
      self.myChart.resize()
    })
     
  },
  watch: {
    pvalue (val) {
      this.initEcharts()
    }
  },
  computed: {
    dataSets () {
      if (this.pvalue || this.pvalue == 0) {
        var value = Number(this.pvalue) ?  (Number(this.pvalue) / 100) : 0;
        return [value, value, value]
      } else {
        return [0,0,0]
      }
      
    }
  },
  methods: {
    initEcharts () {
      var self = this;
      self.option.series[0].label.normal.formatter = self.pvalue == '-' ?   self.pvalue :  self.pvalue + '%';
      self.option.series[0].data = self.dataSets;
      self.myChart ? self.myChart.setOption(this.option, true) : ''
      self.$nextTick(() => {
         self.myChart.resize()
      })
    }
  }
}
</script>

<style lang="css" scoped>
.echartbox {
  width: 100%;
  height: 100%;
}
</style>

