<!--  -->
<template>
  <div>
    <div class="dialogCon">
      <div class="dialogTableBg">
        <el-table :data="dialogTable" style="width: 100%; height:720px;overflow: auto;" @sort-change="tableSortChange">
          <el-table-column
            v-for="(col, index) in columns"
            :key="index"
            :prop="col.filed"
            :label="col.title"
            :sortable="col.sort ? 'custom' : false"
          >
            <template slot-scope="scope">
              <div v-if="col.sortkey">
                <span v-if="scope.row[col.sortkey] == 1" style="color: #5be712 !important">
                  {{ scope.row[col.filed] }}%</span
                >
                <span v-else-if="scope.row[col.sortkey] == 2" style="color: red"> {{ scope.row[col.filed] }}%</span>
                <span v-else> {{ scope.row[col.filed] }}%</span>
              </div>
              <div v-else>
                {{ scope.row[col.filed] }}
              </div>
            </template>
          </el-table-column>
        </el-table>
      </div>
    </div>
  </div>
</template>

<script>
import { getChanelMD_detail } from '@/api/chanel.js'
var lodash = require('@/utils/lodash')
export default {
  props: ['params'],
  data() {
    return {
      dialogTable: [],
      columns: [
        { title: '地区', filed: 'init_areaName' },
        { title: '新发展平均在网时长', filed: 'nothisfiled' },
        { title: '当日流失', filed: 'dayLoss' },
        { title: '月累流失', filed: 'monLoss' },
        { title: '年累流失', filed: 'yearLoss' },
        { title: '当日携入', filed: 'dayMovein' },
        { title: '月累携入', filed: 'monMovein' },
        { title: '年累携入', filed: 'yearMovein' },
        { title: '月累三无用户', filed: 'monSw' },
        { title: '月累三无占比', filed: 'monSwRate', sort: true, sortkey: '_monSwRate_status' },
        { title: '月累极低用户', filed: 'monLow' },
        { title: '月累极低占比', filed: 'monLowRate', sort: true, sortkey: '_monLowRate_status' },
        { title: '年累三无用户', filed: 'yearSw' },
        { title: '年累三无占比', filed: 'yearSwRate', sort: true, sortkey: '_yearSwRate_status' },
        { title: '年累极低用户', filed: 'yearLow' },
        { title: '年累极低占比', filed: 'yearSwRate', sort: true, sortkey: '_yearSwRate_status' }
      ]
    }
  },
  components: {},
  mounted() {
    this.queryZWFZdatas()
  },
  watch: {},
  computed: {},
  methods: {
    queryZWFZdatas() {
      let paramD = {}
      paramD = this.params
      paramD.CHNL_KIND_TYPE_CODE = '03'
      this.dialogTable = []
      getChanelMD_detail('chnl_store_zt_dev_detail', paramD).then(data => {
        // //debugger
        if (data.result) {
          var datal = data.result.data
          datal.forEach(item => {
            item.init_areaName = item.eparchyName || item.areaName || item.gridName
            item.init_areaCode = item.eparchyCode || item.areaCode || item.gridCode
            for (const key in item) {
              if (Object.hasOwnProperty.call(item, key)) {
                item[key] = Number(item[key]) || item[key]
              }
            }
          })
          this.dialogTable = datal
          this.cloneTableData = _.cloneDeep(datal)
        }
      })
    },
    //监听顺序方法
    tableSortChange(column) {
      // //debugger
      const self = this
      let index = 0
      let tmpList = []
      this.allData = JSON.parse(JSON.stringify(this.dialogTable[0]))
      let string = column.prop
      this.dialogTable.forEach(obj => {
        if (index !== 0) {
          obj[string] = parseFloat(obj[string])
          tmpList.push(obj)
        }
        index = index + 1
      })
      if (column.order === 'descending') {
        this.sortA(tmpList, column.prop)
      } else {
        this.sortB(tmpList, column.prop)
      }
      this.dialogTable.unshift(this.allData)
    },
    sortA(arr, name) {
      //外层循环，控制趟数，每一次找到一个最大值
      for (var i = 0; i < arr.length - 1; i++) {
        // 内层循环,控制比较的次数，并且判断两个数的大小
        for (var j = 0; j < arr.length - 1 - i; j++) {
          // 白话解释：如果前面的数大，放到后面(当然是从小到大的冒泡排序)
          if (arr[j][name] > arr[j + 1][name]) {
            var temp = arr[j]
            arr[j] = arr[j + 1]
            arr[j + 1] = temp
          }
        }
      }
      this.dialogTable = arr
    },
    sortB(arr, name) {
      //外层循环，控制趟数，每一次找到一个最大值
      for (var i = 0; i < arr.length - 1; i++) {
        // 内层循环,控制比较的次数，并且判断两个数的大小
        for (var j = 0; j < arr.length - 1 - i; j++) {
          // 白话解释：如果前面的数大，放到后面(当然是从小到大的冒泡排序)
          if (arr[j][name] < arr[j + 1][name]) {
            var temp = arr[j]
            arr[j] = arr[j + 1]
            arr[j + 1] = temp
          }
        }
      }
      this.dialogTable = arr
    }
  }
}
</script>

<style lang="scss" scoped>
/deep/ .el-dialog {
  -webkit-transform: none;
  transform: none;
  left: 0;
  position: relative;
  margin: 0 auto;
  padding-bottom: 30px;
  //height: 780px;
  background-image: url('~@/assets/images/bigScreen/kuang.png');
  background-size: 100% 100%;
  background-color: rgba(220, 38, 38, 0);
}
/deep/ .el-dialog__body {
  padding: 0px 20px;
}
/deep/ .el-dialog__headerbtn .el-dialog__close {
  color: #fff;
  font-size: 24px;
  font-weight: 500;
  margin: 2px 20px 0 0;
  border: 2px solid #193987;
  border-radius: 5px;
  background: #1e1e88;
}
/deep/ .el-table {
  background: none !important;
  font-size: 14px !important;
}
/deep/.dialogTableBg .el-table th {
  background: none !important;
  background: url('~@/assets/images/bigScreen/fullService/597bcdc505fa3.png') no-repeat !important;
  background-position: center 11px !important;
  background-size: contain !important;
  text-align: center !important;
  color: #02f6ff !important;
  font-size: 10px !important;
}
/deep/.dialogTableBg1 .el-table th {
  background: rgba(4, 154, 171, 0.2) !important;
  background-position: center 11px !important;
  background-size: contain !important;
  text-align: left !important;
  color: #fff !important;
  font-size: 12px !important;
  padding-left: 30px;
}
/deep/.dialogTableBg1 .el-table tr {
  background: rgba(4, 154, 171, 0.4) !important;
  color: #fff !important;
  padding-left: 30px;
}
/deep/.dialogTableBg1 .el-table td {
  padding: 12px 0;
  padding-left: 15px;
  border: rgba(0, 160, 233, 0.42) solid 1px !important;
  border-top: none !important;
  text-align: left !important;
  border-left: none !important;
}
/deep/.dialogTableBg1 .el-table td:nth-child(2) {
  border-right: none !important;
}
/deep/.dialogTableBg1 .el-table td:nth-child(3) {
  border-right: none !important;
}
// /deep/.dialogTableBg1 .el-table tr:last-child td {
//     border-bottom: none !important;
// }
/deep/ .dialogTableBg1 .tableNullBg tr {
  background: none !important;
}
/deep/.dialogTableBg1 .el-table .el-table__expanded-cell {
  padding: 0 !important;
}
/deep/ .dialogTableBg1 .tableNullBg td {
  padding: 12px 0;
  padding-left: 15px;
}
/deep/ .dialogTableBg1 .tableNullBg td:first-child {
  padding-left: 45px;
}
/deep/.dialogTable .el-table th {
  background: none !important;
  background-position: center 11px !important;
  background-size: contain !important;
  text-align: center !important;
  color: #02f6ff !important;
  font-size: 14px !important;
}
/deep/ .el-table tr {
  background: none !important;
}
/deep/.dialogTable .el-table tbody tr:nth-child(-n + 3) {
  width: 100%;
  background-image: url('~@/assets/images/bigScreen/fullService/Rectangle 663.png') !important;
  background-repeat: no-repeat !important;
  background-size: 100% 100% !important;
}
/deep/.dialogTable .el-table td {
  padding: 6px 10px;
  font-size: 14px !important;
  font-family: Microsoft YaHei !important;
}
/deep/.dialogTable .el-table tbody td:nth-child(-n + 2) {
  text-align: left !important;
}
/deep/.el-table td {
  background: none !important;
  border: none !important;
  text-align: center !important;
  color: #ffffff;
  font-family: DigifaceWide !important;
  padding: 6px 0;
}
/deep/.dialogTableBg td {
  background: url('~@/assets/images/bigScreen/fullService/Shape 1387.png') no-repeat left !important;
}
/deep/.el-table td:first-child {
  background: none !important;
}
/deep/.dialogTableBg .el-table td:first-child {
  font-family: Microsoft YaHei !important;
}
/deep/ .el-table th.is-leaf,
.el-table td {
  border: none !important;
  color: #ffffff;
}
/deep/.el-table::before {
  height: 0 !important;
}
/deep/.el-table th > .cell {
  display: contents !important;
}
/deep/.el-table .cell {
  padding: 0;
}
/deep/.el-table .ascending .sort-caret.ascending {
  border-bottom-color: #02f6ff;
}

/deep/.el-table .descending .sort-caret.descending {
  border-top-color: #02f6ff;
}
</style>
